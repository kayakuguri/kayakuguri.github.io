<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2014-01-31T13:24:29+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenFLをインストールしてみる]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/31/install-openfl/"/>
    <updated>2014-01-31T11:23:47+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/31/install-openfl</id>
    <content type="html"><![CDATA[<p>インストールした環境は、<code>MaxOS X 10.8.5</code></p>

<!-- more -->


<p>一つ前の記事で紹介した<a href="http://ics-web.jp/lab/archives/1329">参考記事</a>に<a href="https://plus.google.com/102594170131511973965/posts">池田さん</a>がアップしてくれているインストール方法の動画があるので、<br/>
基本それを見ればわかるのだけれど、一応、実際に作業してみたメモ。<br/>
デモ画面を起動するところまでやってみる。</p>

<hr />

<h4>Hexeをインストール</h4>

<p><a href="http://haxe.org/">Haxe(公式サイト)</a></p>

<p>ダウンロードページは以下。<br/>
<a href="http://haxe.org/download">ダウンロード</a><br/>
2014/1/31時点でのバージョンは、<code>3.0.1</code></p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl1.jpg" alt="Download haxe" /></p>

<p>インストーラーでインストール。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl2.jpg" alt="install haxe" /></p>

<p>後は、OpenFLのページに書いてある手順に従って、ターミナルからコマンドを打ち込んでいく。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl3.jpg" alt="Download openfl" /></p>

<h4>Limeをインストール</h4>

<p>OpenFLはLimeで動作しているので、Limeをまずはインストールする、との事。<br/>
以下のコマンドからインストール。</p>

<pre><code>$ haxelib install lime
</code></pre>

<p>うえの、install limeを実行すると、以下のように怒られた。</p>

<pre><code>This is the first time you are runing haxelib. Please run `haxelib setup` first
</code></pre>

<p>まずは、setupから実行しろ、と。<br/>
言われたとおりに実行。</p>

<p>すると、haxeのpathの入力を求められた。</p>

<pre><code>Please enter haxelib repository path with write access
Hit enter for default (/usr/lib/haxe/lib)
Path :
</code></pre>

<p>pathがわからないので一旦置いておく。<br/>
調べると、haxelibのセットアップはhaxeの公式ページに手順が載っていた。</p>

<p><a href="http://haxe.org/com/haxelib/setup">haxelib setup</a></p>

<p>ここでの手順をまずは試してみる。</p>

<pre><code>$ sudo mkdir -p /usr/lib/haxe/lib
$ sudo chown -R myusername /usr/lib/haxe
</code></pre>

<p>※パスはデフォルトでは、<code>/usr/lib/haxe/lib</code>。もし違ったらそのパスを入力。<br/>
また、<code>myusername</code>はPCのユーザー名を記入。</p>

<p>で、上記のsetupを実行。</p>

<pre><code>$ haxelib setup
</code></pre>

<p>pathには、先ほど作成したlibディレクトリを指定。</p>

<pre><code>/usr/lib/haxe/lib/
</code></pre>

<p><code>haxelib repository is now /usr/lib/haxe/lib/</code>と出れば大丈夫のよう。</p>

<p>ようやく冒頭のLimeのインストールへ戻る。</p>

<pre><code>$ haxelib install lime
</code></pre>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl4.jpg" alt="install lime" /></p>

<p>で、セットアップを実行</p>

<pre><code>$ haxelib run lime setup
</code></pre>

<p>lime commandをインストールするか聞かれる。<br/>
たぶん、必要っぽいので、<code>y</code>で。</p>

<pre><code>Do you want to install the "lime" command? [y/n/a] ? y
</code></pre>

<h4>OpenFLをインストール</h4>

<p>で、ようやっとOpenFLのインストール。</p>

<pre><code>$ lime install openfl
</code></pre>

<p>つらつらと色んなものが展開されて、無事、インストール成功。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl5.jpg" alt="install openfl" /></p>

<h4>各デバイス用セットアップ(オプション)</h4>

<p>それぞれのデバイス用のセットアップがオプションで用意されているよう。</p>

<pre><code>lime setup windows
lime setup android
lime setup blackberry
lime setup tizen
</code></pre>

<p>blackberryとtizenはいらないとしても、androidは入れとこうか。<br/>
windowsは、、微妙。<br/>
iOSはセットアップの必要はないけれど、Xcodeのインストールが必要、とのこと。</p>

<blockquote><p>Apple platforms don&rsquo;t require setup, but need Xcode to be installed.</p></blockquote>

<h5>Android用セットアップ</h5>

<p>とりあえず、androidのセットアップを実行。<br/>
SDKを入れるか、聞かれるので、yesで。</p>

<pre><code>$ lime setup android
Download and install the Android SDK? [y/n/a] ? y
</code></pre>

<p>アウトプットするディレクトリを聞かれたので、とりあえずデフォルト？のものを指定しておいた。<br/>
けど、そのディレクトリがないので事前に作成しておく。<br/>
作成は、haxeのセットアップ時を参考にして、ディレクトリ作成後、オーナーの変更もしておいた。<br/>
(必要ないかもしれないけれど)</p>

<pre><code>$ sudo mkdir -p /opt/android-sdk
$ sudo chown -R myusername /opt/android-sdk
</code></pre>

<p>で、改めて、アウトプットのディレクトリを指定。</p>

<pre><code>Output directory [/opt/android-sdk]: /opt/android-sdk
</code></pre>

<p>すると、<code>Android SDK Manager</code>なるものが立ち上がる。<br/>
つらつらと処理が進み、準備が整うと、パッケージをインストールするような待ちに入ったため、そのままインストール。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl6.jpg" alt="install android sdk" /></p>

<p>各ライセンスに同意が必要なため、<s>気にせず</s>目を通してから同意。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl7.jpg" alt="agree android sdk" /></p>

<p>次に、<code>android-ndk</code>をインストールしますか？と出た。<br/>
インストールしようとすると、ここでもディレクトリが必要。。。</p>

<pre><code>Download and install the Android NDK? [y/n/a] ? y
Output directory [/opt/android-ndk]: /opt/android-ndk
</code></pre>

<p>もちろんないので、再度、作成して、インストール。</p>

<p>参考：<a href="http://www.dm-android.com/column/ndk.html">コラム：Android NDKとは？Android NDKを学ぶメリット</a></p>

<p>次は、<code>Apatch Ant</code>。同じようにディレクリ作成。<br/>
(事前にこれだけいる、と言ってくれたらいいのに。。。)</p>

<pre><code>Download and install the apache ant? [y/n/a] ? y
Output directory [/opt/apache-ant]: /opt/apache-ant
</code></pre>

<p>参考：<a href="http://ja.wikipedia.org/wiki/Apache_Ant">Apache Ant &ndash; Wikipedia</a></p>

<p>で、Android SDKとNDKのパスを聞かれる。変更してないので、例のまま。</p>

<pre><code>Path to Android SDK [/opt/android-sdk]:/opt/android-sdk
Path to Android NDK [/opt/android-ndk]: /opt/android-ndk
</code></pre>

<p>これでようやっと終了(たぶん)。</p>

<h4>サンプルを実行</h4>

<p>ここからは、実行後にファイルが作成されるので、適当なディレクトリに移動してから実行する。<br/>
(デスクトップとか)</p>

<pre><code>$ lime create openfl:DisplayingABitmap
$ cd DisplayingABitmap
$ lime test neko
</code></pre>

<p>(<code>neko</code>とはmacのアプリのこと?)<br/>
サンプルどおり、nekoを起動させてみた状態は以下。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl8.jpg" alt="sample neko" /></p>

<p>このプログラムのまま、様々なプラットフォームで出力可能。<br/>
例えば、flashの場合は以下。</p>

<pre><code>$ lime test flash
</code></pre>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl9.jpg" alt="sample flash" /></p>

<p>最後に、ちょっと見栄えのするサンプルを実行させてみる。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl10.jpg" alt="HerokuShaders" /></p>

<p>DOCUMENTATION &ndash;> Samples &ndash;> HerokuShaders</p>

<pre><code>$ openfl create HerokuShaders
</code></pre>

<p>ページの通り、上記を実行すると、openflっていうコメンドがない、と言われたので、<br/>
上記の<code>lime</code>で、実行してみる。</p>

<pre><code>$ lime create openfl:HerokuShaders
$ cd HerokuShaders
$ lime test neko
</code></pre>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl11.jpg" alt="HerokuShaders" /></p>

<p>これもそれぞれ、flash、HTML5などで実行してみる。</p>

<pre><code>$ lime test flash
$ lime test html5
</code></pre>

<p>flashはエラーで実行できなかった。<br/>
何か必要なライブラリ？が入ってなかったよう。</p>

<pre><code>Error: Could not find sample "HerokuShaders" in project ""
</code></pre>

<p>HTML5はそのまま実行出来た。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/openfl12.jpg" alt="HerokuShaders in HTML5" /></p>

<p>ちょっと重かったけど、そのまま動いたのはすごい。<br/>
てか、このサンプルは何を使ってるんだろう？</p>

<h4>参考</h4>

<p>冒頭で上げた<a href="https://plus.google.com/102594170131511973965/posts">池田さん</a>のインストール動画は以下。</p>

<iframe width="100%" src="http://kayakuguri.github.io//www.youtube.com/embed/MYHFJICUzzI" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenFL？]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/31/openfl-search/"/>
    <updated>2014-01-31T10:39:01+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/31/openfl-search</id>
    <content type="html"><![CDATA[<p><strong><a href="http://www.openfl.org/">OpenFL</a></strong></p>

<p>OpenFLの記事が話題になっており、今回初めて知ったので、<br/>
ツイートベースに検索したメモ。</p>

<!-- more -->


<p>元は、<code>NME</code>という名前だったものが<code>OpenFL</code>に名前を変えたよう。<br/>
結構前からあるっぽい。<br/>
Haxe自体がワンソース・マルチユース的なものなのに、<br/>
そのHaxeを使ってOpenFLで開発、ってのはどいうこと？？<br/>
さらに便利に拡張したもの、とかなのかしら。</p>

<p><s>違う、Haxeライクな言語、であって、Haxeとは別ものっぽい。<br/>
とはいえ、Haxeのインストールも必要、っぽい。</s></p>

<p>下記、参考サイトにあった。</p>

<blockquote><p>OpenFLはプログラミング言語Haxeを使って開発する</p></blockquote>

<hr />

<h4>参考サイト</h4>

<p><a href="http://ics-web.jp/lab/archives/1329">クロスプラットフォーム開発の大本命!? HTML5もアプリもFlashも開発できる「OpenFL」とは？</a></p>

<p><a href="http://www.dango-itimi.com/blog/archives/2013/001188.html">Haxe OpenFL 調査</a></p>

<p><a href="http://d.hatena.ne.jp/wordi/20131107/p1">OpenFLで使えるGUIライブラリ</a></p>

<p><a href="http://bao-bao.info/blog/archive/2013/08/28/openfl_install/">OpenFLインストール</a></p>

<hr />

<h4>気になったツイートまとめ</h4>

<blockquote class="twitter-tweet" lang="ja"><p>Haxe（とOpenFL）は結局のところ、ワンソース・マルチユースではなく、ワンスタディ・マルチクリエイト、みたいなものなので、本当に厳密なところでは同一挙動でなくてもいいと思っているのではないかなー。</p>&mdash; 尾野（しっぽ） (@tail_y) <a href="https://twitter.com/tail_y/statuses/428926391619313664">2014, 1月 30</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>FlashCCを使い素材管理し、JSFL経由でHaxeからOpenFLとCreateJSをを切り替えて利用するという、とんでもないワークフローは既に白玉さんが確立しているのです <a href="https://t.co/speVyDSv9x">https://t.co/speVyDSv9x</a> <a href="http://t.co/FG3dgktJB0">pic.twitter.com/FG3dgktJB0</a></p>&mdash; 尾野（しっぽ） (@tail_y) <a href="https://twitter.com/tail_y/statuses/428930765254979584">2014, 1月 30</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>OpenFL の SWF Library(Free)ドキュメントページを閲覧するには Add cart にて支払い設定(住所入力)等を行う必要あり。ユーザ登録だけでは認証に弾かれます。 <a href="http://t.co/xYhqayB6CG">http://t.co/xYhqayB6CG</a></p>&mdash; siratama (@dango_itimi) <a href="https://twitter.com/dango_itimi/statuses/426696977712050177">2014, 1月 24</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>あとOpenFLも低レベル層がLimeというのに分離してたり、h3dもHeapsという名前に変わる？とかいろいろ複雑ｗ　落ちついたら面白そう。</p>&mdash; こりん (@k0rin) <a href="https://twitter.com/k0rin/statuses/426576961721233408">2014, 1月 24</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>OpenFL、人に勧めるにはまだ早い感してる。特にHTML5のバックエンドがDOMベースで速度出ないので。Haxe作者のh3d（Evolandに使われてる）に期待かなあ。</p>&mdash; こりん (@k0rin) <a href="https://twitter.com/k0rin/statuses/426574886643855361">2014, 1月 24</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>OpenFLの続き。ちなみにWindowsネイティブアプリの出力にすると最もパフォーマンスが良い感じ。FlashやHTML5の6倍ほどのパフォーマンスが出ています。ちなみにNekoもなかなかパフォーマンスが良いです。 <a href="https://twitter.com/search?q=%23Haxe&amp;src=hash">#Haxe</a> <a href="http://t.co/x5wnV7BhZp">http://t.co/x5wnV7BhZp</a></p>&mdash; 池田 泰延 Yasunobu Ikeda (@clockmaker) <a href="https://twitter.com/clockmaker/statuses/425673916028170240">2014, 1月 21</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/iphone_dev_jp">@iphone_dev_jp</a> Haxe OpenFL(NME)を使って落ち物パズルゲームを作りました <a href="http://t.co/YjY12G6JY8">http://t.co/YjY12G6JY8</a></p>&mdash; Androwk (@Androwk) <a href="https://twitter.com/Androwk/statuses/362866716004454400">2013, 8月 1</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>この間 OpenFL を試したら TextField を BitmapData に draw するところで何も描画されないって問題があった。詳しくは調べてない</p>&mdash; 馬鹿全903 (@bkzen) <a href="https://twitter.com/bkzen/statuses/353097125619437568">2013, 7月 5</a></blockquote>


<script async src="http://kayakuguri.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CodenvyとherokuでブラウザのみでRailsアプリを作成する その1]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/29/railsapp-on-codenvy-and-heroku/"/>
    <updated>2014-01-29T16:33:01+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/29/railsapp-on-codenvy-and-heroku</id>
    <content type="html"><![CDATA[<p>herokuがRailsを全面サポートしている事や、phpは公式にはサポートしていないこともあって、<br/>
Ruby、Railsを勉強してみよう、と思い立つ。</p>

<p>開発環境はローカルに構築するつもり(というか当然そうなると思っていた)のだけれど、<br/>
すこし調べてみると今はクラウド開発環境なるものがある、とのことで、どうせならそちらを使用してみることにする。<br/>
(そちらのほうが楽そうだし)<br/>
というわけでそれらのメモ。</p>

<!-- more -->


<p>参考にさせてもらったページ<br/>
<a href="http://libro.tuyano.com/index3?id=780003&amp;page=6">Herokuではじめる 初心者のためのRuby on Rails3入門</a></p>

<p>クラウド開発環境は有名どころでは、<a href="https://c9.io/">cloud9</a>と、<a href="https://codenvy.com/">Codenvy</a>があるようだけれど、<br/>
標準でherokuに対応している、という点で、Codenvyをチョイス。</p>

<p>セットアップしていく。</p>

<h4>herokuのアカウント作成</h4>

<p><a href="https://www.heroku.com">heroku</a></p>

<p>まずは、<code>Sing up for free</code>からアカウント作成。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/heroku01.jpg" alt="Sing up for free" /></p>

<p>開いた先でメールアドレスを入れて、メールを待つ。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/heroku02.jpg" alt="Sing up for free" /></p>

<p>メール内に記載されているアドレスをクリックして、パスワードを設定。<br/>
以上でアカウントの作成は終了。</p>

<h4>Codenvyのアカウント作成</h4>

<p><a href="https://codenvy.com/">Codenvy</a></p>

<p>まずは、<code>FREE SIGN UP</code>からアカウントを作成。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy01.jpg" alt="FREE SIGN UP" /></p>

<p>開いたモーダルウインドウで、メールとユーザー名(ワークスペースネーム)を入力して<code>GO</code>。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy02.jpg" alt="FREE SIGN UP" /></p>

<p>メール確認してね、と出るので、メールをチェック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy03.jpg" alt="THANK YOU SINGING UP" /></p>

<p>メール本文中の、<code>confirm</code>をクリック、するとアカウントが作成、、されると思ったら以下の画面が。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy04.jpg" alt="unable to account" /></p>

<p>どうやらユーザー名が不適切(被ってるとかおかしいとか)でエラーが出ているよう。<br/>
メール送る前に事前に言ってくれないのね。。。</p>

<p>気を取り直して、再度違う名前で送信。<br/>
無事、作成出来ました。</p>

<p>パスワードを設定し、ログインするとプロジェクト作成の画面に。<br/>
サービスはもちろん、<code>Ruby on Rails</code>で<code>Heroku</code>を選択。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy06.jpg" alt="create project" /></p>

<p><code>next</code>をクリックして進むと、heroku側のプロジェクト名？を入力するダイアログが出てくる。<br/>
(多分、その前にherokuのアカウントを聞かれた気がするけど、どのタイミングで聞かれたか忘れてしまった。<br/>
聞かれたら、メールアドレスとパスワードを入力して連携させておく。)</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy07.jpg" alt="deploy heroku project" /></p>

<p>今回はCodenvy側でプロジェクト名を<code>RubyProject001</code>とつけていたので、herokuのプロジェクト名も同じにしておいた。<br/>
すると、１文字目は小文字にしなさい、と怒られてしまった。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy08.jpg" alt="warning" /></p>

<p>とにかく、これでプロジェクトが作成出来た。<br/>
IDEはこのような画面が表示された。<br/>
左側はファイルツリーで、右側がエディタ、とおなじみの構成。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy05.jpg" alt="warning" /></p>

<p>heroku側はどうなっているかというと、上記の小文字エラーが出たからなのか、<br/>
プロジェクト名は連番のような形になってしまっていた。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/heroku03.jpg" alt="myproject" /></p>

<p>このプロジェクト名を、<code>testrubyproject1</code>で、作成してみると、herokuのアプリ名も同じ名前で作成された。</p>

<p><img src="http://kayakuguri.github.io/images/2014/01/codenvy09.jpg" alt="myproject" /></p>

<p>これで開発環境は整った。と思われる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FLVPlaybackのスムージング]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/24/flvplayback-smoothing/"/>
    <updated>2014-01-24T16:47:11+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/24/flvplayback-smoothing</id>
    <content type="html"><![CDATA[<p>Videoクラスにはそのものズバリの名前の、<code>sommthing</code>プロパティがあるのだけれど、<br/>
FLVPlaybackにはない。<br/>
なので、スムージングはかけられないのかと思っていたけれど、あった。</p>

<!-- more -->


<pre><code>player.getVideoPlayer(player.activeVideoPlayerIndex).smoothing = true;
</code></pre>

<p>これでいい、らしい。<br/>
知らなかったのでメモメモ。</p>

<p>情報：<a href="http://un-q.net/2008/06/flvplayback_smoothing_video_as3.html">http://un-q.net/2008/06/flvplayback_smoothing_video_as3.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flashのみで表示中のページの読み込み状況を取得したい]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/20/jsloadedcheck-on-flash/"/>
    <updated>2014-01-20T15:46:08+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/20/jsloadedcheck-on-flash</id>
    <content type="html"><![CDATA[<p>HTML側にJSなどを埋め込んだりせずに<br/>
Flash側のみでHTMLページ全体の読み込み状況を知りたい、となって、<br/>
調べてみたところ、以下の方法が使用できた。</p>

<!-- more -->


<p><a href="http://hakuhin.jp/js/document.html#DOCUMENT_03">現在のページの読み込み状況を取得する &ndash; JavaScriptプログラミング講座</a></p>

<blockquote><p>現在閲覧中のページの読み込み状況を調べるには、document.readyState プロパティを使用します。<br/>
以下の文字列が得られます。</p></blockquote>

<ul>
<li>uninitialized &ndash; 初期化されていません。ロードが開始されていません。</li>
<li>loading &ndash; ロード中です。</li>
<li>interactive &ndash; DOM オブジェクトの構築は完了しています。画像データなどの読み込みはまだ完了していません。</li>
<li>complete &ndash; すべての読み込みが完了しています。</li>
</ul>


<p>なので、Flash側からこのプロパティを呼び出せばわかる、となります。</p>

<p>しかし<code>ExternalInterface</code>は関数を呼び出すものなので、<br/>
プロパティを直接呼び出すことはできません。なので、関数にくるんで返すようにします。</p>

<pre><code>var state:String = ExternalInterface.call("function(){return document.readyState;}");
</code></pre>

<p>これでFlash側からHTMLの読み込み状況を（ある程度）知る事ができます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ajaxzip3で、郵便番号から住所の自動入力をする際に、Shift-JISを使用する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/16/ajaxzip3-shiftjis/"/>
    <updated>2014-01-16T18:35:42+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/16/ajaxzip3-shiftjis</id>
    <content type="html"><![CDATA[<p>ajaxzip3を使って郵便番号から住所を自動入力させる際、<br/>
Shift-JISを使用したい場合、<a href="https://code.google.com/p/ajaxzip3/">ライブラリのページ</a>には以下のように書かれている。</p>

<!-- more -->


<pre><code>&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS"&gt;
&lt;title&gt;サンプル&lt;/title&gt;
&lt;script src="http://ajaxzip3.googlecode.com/svn/trunk/ajaxzip3/ajaxzip3.js" charset="UTF-8"&gt;&lt;/script&gt;
&lt;/head&gt;
</code></pre>

<p>しかし、これだと<strong>IEのみ</strong>文字化けしてしまう。</p>

<p>それを回避するには、<code>charset</code>を先に書くようにすればいい、らしい。</p>

<pre><code>&lt;script type="text/javascript" src="hoge.js" charset="UTF=8"&gt;&lt;/script&gt; 
↓
&lt;script type="text/javascript" charset="UTF=8" src="hoge.js"&gt;&lt;/script&gt; 
</code></pre>

<p>参考：<a href="http://ksk1015.hatenablog.com/entry/2012/02/21/120938">ajaxzip3のIEでの文字化け対策 &ndash; ksk1015のブログ</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tera Termでのテンキーの利用]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/08/teraterm/"/>
    <updated>2014-01-08T17:19:01+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/08/teraterm</id>
    <content type="html"><![CDATA[<p>Tera Termでssh接続をしていて、viでファイルを編集中に、いつものくせでテンキーのエンターキーを押して改行をしていると、<br/>
何故か<code>M</code>と入力されてしまっていた。<br/>
それに気付かず保存してしまってえらい目にあったことがある。</p>

<!-- more -->


<p>これはテンキーが使えないのか、viがおかしいのか、と思ってググってみると、TeraTerm側の問題だったよう。</p>

<p><a href="http://server-setting.info/blog/teraterm-tenkey.html">TeraTermでテンキー(数値キーパッド)(/,*,&ndash;,+)の動きが変なので対応してみた</a></p>

<p><code>M</code>の件は書いてないけど、デフォルトの対応表によれば、<code>6</code>が<code>M</code>っぽい。間違って押したかな。<br/>
今後おかしくなると困るので、正常に動くようにしておいた。</p>

<pre><code>[VT numeric keypad]
Num0=off
Num1=off
Num2=off
Num3=off
Num4=off
Num5=off
Num6=off
Num7=off
Num8=off
Num9=off
NumMinus=off
NumComma=off
NumPeriod=off
NumEnter=off
PF1=off
PF2=off
PF3=off
PF4=off
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSPについて]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/08/jsp/"/>
    <updated>2014-01-08T14:34:13+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/08/jsp</id>
    <content type="html"><![CDATA[<p>JSP、というファイル形式を初めて知った。<br/>
<strong>Java サーバー ページ</strong>の、略、らしい。</p>

<!-- more -->


<p>SSIのようにインクルード目的で使用する、のかと思ったけど、<br/>
どちらかというと、CGIの代わり、のよう。</p>

<p>参考：<a href="http://homepage2.nifty.com/takaaki024/tips/programs/java/jsp.html">http://homepage2.nifty.com/takaaki024/tips/programs/java/jsp.html</a></p>

<blockquote><p>CGIとJSPの違い<br/>
　・CGIはアクセスがあるたびにサーバが新しいプロセスを起動する<br/>
　　オーバーヘッドとリソースの消費によるパフォーマンスの低下が避けられない<br/>
　・JSPはJSPコンテナと呼ばれるJSP実行プログラムが一度起動されていれば、<br/>
　　その内部で実行されるので、リソースの消費が少なく効率的だ</p></blockquote>

<p>インクルードの方法は２つ。</p>

<pre><code>&lt;%@ include file="date_disp3.jsp" %&gt;
&lt;jsp:include page="date_disp3.jsp" flush="true" /&gt;
</code></pre>

<p>ただし、実行にはサーバーの設定が必要?<br/>
この辺？ <a href="http://www.atmarkit.co.jp/ait/articles/0105/30/news002.html">http://www.atmarkit.co.jp/ait/articles/0105/30/news002.html</a></p>

<p>参考：<br/>
<a href="http://mail2.nara-edu.ac.jp/~asait/java/j2ee/part3.htm">http://mail2.nara-edu.ac.jp/~asait/java/j2ee/part3.htm</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AS3にて全画面で動画を再生させる際の注意点]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/27/as3-fullscreen-video/"/>
    <updated>2013-12-27T17:06:04+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/27/as3-fullscreen-video</id>
    <content type="html"><![CDATA[<p>Flashでフルスクリーンで動画を表示したい場合、<br/>
動画の再生に、<code>FLVPlayback</code>を使っているか<code>Video</code>を使っているか、によって挙動が変わってくるようです。</p>

<h3>■まず、<code>FLVPlayback</code>を使っている場合、</h3>

<!-- more -->


<p>ステージに表示している動画は問答無用で画面にフィットしたフルスクリーンで表示されます。<br/>
一応、<code>stage</code>のプロパティである、<code>stageFocusRect</code>を使うことで表示する位置を調整できたりしますが、<br/>
動画のサイズは強制的にモニタのサイズになってしまうようなので、まず使い物にならないです。</p>

<p>で、画面いっぱいに動画が表示されてしまうと、その他のコンテンツは動画の下に隠れてしまいます。<br/>
なので、自前で再生バーなどをつけていても見えなくなってしまいます。</p>

<p>というわけで、この場合は標準のスキンを使用する必要があります。<br/>
<code>FLVPlayback</code>のプロパティで<code>skin</code>があるので、それを使って、</p>

<pre><code>video.skin = "MinimaFlatCustomColorPlayBackSeekCounterVolMuteFull.swf";
</code></pre>

<p>などと指定します。<br/>
すると、フルスクリーンになっても、その動画の下にコントローラーがくっつく形となります。</p>

<p>この拡大は、<code>stage</code>の<code>scaleMode</code>プロパティは関係なく、<br/>
また、<code>FLVPlayback</code>の<code>scaleMode</code>プロパティも関係ありません。<br/>
(<code>FLVPlayback</code>の<code>scaleMode</code>プロパティは、動画枠内で実際の動画を拡大縮小するか、を決めるもの）</p>

<h3>■次に、<code>Video</code>の場合。</h3>

<p>こちらの場合は、動画部分はその他の部分と同じように拡大縮小されます。<br/>
拡大するかどうかは、<code>stage</code>の<code>scaleMode</code>のプロパティで指定した仕様に準じます。</p>

<p>この場合、コントローラーは標準のものは使用できないので、自前で用意する必要があります。</p>

<h3>■まとめ</h3>

<p>単純に動画だけを大きくしたいのであれば、<code>FLVPlayback</code>を使ったほうが楽だと思われます。<br/>
ですが、コントローラーをカスタマイズしたい、など、自由度が高いものは、<code>Video</code>になります。</p>

<p>今回使用した検証コードは以下です。</p>

<p><code>FLVPlayback</code></p>

<pre><code>var video:FLVPlayback = new FLVPlayback();
video.skin = "MinimaFlatCustomColorPlayBackSeekCounterVolMuteFull.swf";
video.width = 480;
video.height = 270;
this.addChild(video);
</code></pre>

<p><code>Video</code></p>

<pre><code>private var _connect :NetConnection;
private function setVideo():void{
  _connect = new NetConnection();
  _connect.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
  _connect.connect(null);
}
private function netStatusHandler(e:NetStatusEvent):void {
  var stream:NetStream = new NetStream(_connect);
  var video:Video = new Video();
  video.width = 480;
  video.height = 270;
  video.attachNetStream(stream);
  stream.play("sample.f4v");
  this.addChild(video);
}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[INNER JOINとLEFT JOIN]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/20/inner-left-join/"/>
    <updated>2013-12-20T18:19:51+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/20/inner-left-join</id>
    <content type="html"><![CDATA[<p><a href="http://okwave.jp/qa/q746515.html">http://okwave.jp/qa/q746515.html</a></p>

<blockquote><p>対応させるべきはinner joinとouter joinなんですけど、<br/>
left join は left outer join と同等です。</p></blockquote>

<!-- more -->


<p>実際に実行して確認していたけれど、<br/>
<code>INNER JOIN</code>の場合、比較したテーブルそれぞれに値がある場合のみ、<br/>
結果を返してくれる。条件としても使えそう。<br/>
(そのテーブル同士で同じIDを持つものだけを抽出、的な)</p>

<p>で、<code>OUTER JOIN</code>は、比較した際に値がなければ、<code>NULL</code>で返す。<br/>
要するに、値がなくても結果を返してくれる。</p>

<p>値が必須かどうか、みたいな感じぽい。</p>

<blockquote><p>innter joinは結合する相手のテーブルに対応するデータが<br/>
ある場合のみ結果を返しますが、outer joinは相手の<br/>
テーブルに対応するデータが無い場合、そのカラムを<br/>
NULLとして返します。</p></blockquote>

<p><code>OUTER JOIN</code>には、</p>

<pre><code>*  LEFT OUTER JOIN
*  RIGHT OUTER JOIN
*  FULL OUTER JOIN
</code></pre>

<p>の３つがあるよう。</p>

<blockquote><p>LEFT JOINではFROMの後に書かれたテーブルのデータだけを取得します。RIGHT JOINではJOINの後に書かれたテーブルのデータだけを取得します。<br/>
<a href="http://www.dbonline.jp/mysql/select/index15.html">http://www.dbonline.jp/mysql/select/index15.html</a></p></blockquote>

<p>実際に試してみると、<br/>
<code>LEFT JOIN</code>の場合は、<code>FROM</code>の後に書かれたテーブルを基準に返す。<br/>
<code>RIGHT JOIN</code>の場合は、<code>JOIN</code>の後に書かれたテーブルを基準に返す。</p>

<p>あと、<code>USING</code>を使えば少し短く出来る。</p>

<blockquote><p>結合するカラムの名前が同じ場合にはONの代わりにUSINGを使用して次のように記述することもできます。<br/>
「USING (col_name)」というのは「ON tbl_name1.col_name = tbl_name2.col_name」と同じことです。<br/>
<a href="http://www.dbonline.jp/mysql/select/index15.html">http://www.dbonline.jp/mysql/select/index15.html</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[phpPgAdminでのテーブルやカラムの操作メモ]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/18/phppgadmin-memo/"/>
    <updated>2013-12-18T20:24:38+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/18/phppgadmin-memo</id>
    <content type="html"><![CDATA[<p>phpPgAdminを使用してDBにテーブルやカラムを作る際にわからない事だらけだったのでメモ。</p>

<p>■<strong>オプション（WITHOUT OIDS)</strong></p>

<!-- more -->


<p>参考：<a href="http://www.mikawaban.com/tera/070430003807.html">PostgreSQLについて</a></p>

<blockquote><p>CREATE TABLEでは，デフォルトではOIDが作成されます．OIDを生成しない<br/>
テーブルを作るには，キーワード &ldquo;WITHOUT OIDS&rdquo; を使用します．</p></blockquote>

<p>OIDって？</p>

<blockquote><p>オブジェクト識別子(OID)はPostgreSQLの内部で様々なシステムテーブルの
プライマリキーとして使用されます。また、テーブルの作成時にWITHOUT OIDS
が指定されていない場合やdefault_with_oids設定変数が偽に設定されている
場合を除き、OIDシステム列がユーザ作成のテーブルに追加されます。
oidデータ型は現在、符号無し4バイト整数として実装されています。
これは、大規模なデータベースの全体にわたって一意とするには十分では
ありません。
大規模な個別のテーブル内においても十分ではないかもしれません。
そのため、ユーザ作成テーブルのOID列をプライマリキーとして使用するのは
お勧めできません。
OIDの使用は、システムテーブルへの参照の場合にのみ推奨されます。</p></blockquote>

<p>つまり、</p>

<blockquote><p>小規模DB内で識別する為に「OID」を使用しても良いという位の意味</p></blockquote>

<p>らしい。<br/>
普段は、使わない、でいいのかな。</p>

<p>参考サイト内にあったまとめ。</p>

<blockquote><p>■テーブル作成方法<br/>
１）phpPgAdminにて「テーブル作成」を選択<br/>
２）テーブル名（英数字）を入力<br/>
３）フィールド数を入力<br/>
４）次画面へ移り、各フィールド入力（英数字）</p>

<p>※フィールドの属性以外は、後からでも変更可能<br/>
※フィールドの追加・挿入・削除も可能</p>

<p>■PostgreSQLへの接続　→　pg_connect命令<br/>
■SQL文の実行　→　pg_exec　又は　pg_query命令</p></blockquote>

<p>■<strong>プライマリキー</strong></p>

<p><a href="http://e-words.jp/w/E4B8BBE382ADE383BC.html">主キー 【 primary key 】 プライマリキー</a></p>

<blockquote><p>データベースの中から、ある一組のデータセット(レコード)を一意に識別するための情報。<br/>
主キーは必ずしも一つの項目とは限らず、複数の項目を組み合わせて主キーとして用いる場合もある。<br/>
一般的には個々の要素に通し番号などを割り振ってこれを主キーに設定する場合が多い。</p></blockquote>

<p>■<strong>データ型</strong></p>

<p><a href="http://www.postgresql.jp/document/9.1/html/datatype.html">データ型一覧</a></p>

<p>■<strong>列の型で配列</strong></p>

<p>各型で配列を作る事が出来るよう。<br/>
phpPgAdminでは、<code>データ型</code>の横のセレクトボックスで、<code>[]</code>を選択しておけば配列になるもよう。<br/>
ただし、配列にするとちょっと面倒があるよう。<br/>
使わない方が無難？</p>

<blockquote><p>ただ、配列に入れるために中カッコでくくったカンマ区切りの文字列を作らないといけないので、若干面倒です。また、バージョン7.4から配列の要素内にある特定の値を検索する事ができるようにはなりましたが、LIKE句が使えなかったりと、色々不便な所があります。 <br/>
<a href="http://software.aufheben.info/kouza/senior/kouza_pg.html">http://software.aufheben.info/kouza/senior/kouza_pg.html</a></p></blockquote>

<p>■<strong>intかbigintか</strong></p>

<p>整数型や連番型、ともに、bigがある。</p>

<p><code>integer</code> : 4バイト符号付き整数<br/>
<code>bigint</code> : 8バイト符号付き整数</p>

<p>どう違う？どっちを使うべき？<br/>
参考：<a href="http://hamamuratakuo.blog61.fc2.com/blog-entry-648.html">時代はBIGINT</a></p>

<blockquote><p>MySQLのINT型の最小値と最大値は、-2147483648～2147483647です。<br/>
「2147483647」は、「２１億」<br/>
インド人と中国人の全員が会員登録しようとすると、INT型では足りないということです。</p></blockquote>

<p>しかし、</p>

<blockquote><p>オートインクリメントのカラムだけのテーブルで、限界までデータを詰め込むと、<br/>
・INT型 → 約43ギガバイト<br/>
・BIGINT型 → 約326エクサバイト</p></blockquote>

<p>よっぽどの事がない限り、int型でよさそう。</p>

<p>■<strong>テーブルの破棄</strong></p>

<p>テーブルを破棄しようとすると、<br/>
<code>カスケード</code>なるチェックボックスが。</p>

<blockquote><p>カスケード規則は、データベースがある操作が起こることを許可し、ほかのテーブルまたは行を最初の操作と同期をとるように変更することによって RI を確実にする規則です。たとえば、カスケード削除規則が定義されていると、主キー テーブルでのレコードの削除により、データベースは削除された行の主キーと同じ値の外部キーを持つデータベース中のすべての行を検索して削除します。<br/>
<a href="http://www.agtech.co.jp/html/v9manuals/advops/advops-07-2.html">http://www.agtech.co.jp/html/v9manuals/advops/advops-07-2.html</a></p></blockquote>

<p>要は、プライマリキーに設定された値と同じ外部キーを持つデータ、をまとめて削除してくれる、<br/>
関連データも一緒に消していい？というチェックボックスのよう。たぶん。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostgreSQLでプレースホルダーを使ってSELECT文を発行する方法]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/17/postgresql-select/"/>
    <updated>2013-12-17T17:25:36+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/17/postgresql-select</id>
    <content type="html"><![CDATA[<p>接続の参考：PostgreSQLへ接続](<a href="http://www.phpbook.jp/tutorial/postgresql/index3.html">http://www.phpbook.jp/tutorial/postgresql/index3.html</a>)</p>

<p>プレースホルダーでの発行は以下を参考<br/>
<a href="http://lets.postgresql.jp/documents/tutorial/with_php/against_sql_injection/placeholder">PHPでのSQLインジェクション対策 &ndash; プレースホルダ編</a><br/>
<a href="http://php.net/manual/ja/function.pg-execute.php">pg_execute</a></p>

<!-- more -->


<p>SELECT文の例</p>

<pre><code>$dbconn = pg_connect("host=".DB_SERVER." dbname=".DB." user=".DB_USER." password=".DB_PW);
$result = pg_prepare($dbconn, "", 'SELECT * FROM dtb_order WHERE order_id = $1');
$result = pg_execute($dbconn, "", array($oid));
</code></pre>

<p>こうすると、$resultには、resource型の値が入ってくる。<br/>
そこから実際のデータを取得するためには、<code>pg_fetch_array</code>を使用する。</p>

<p>第３引数に<code>PGSQL_NUM</code>を指定すると、数字の配列で、<br/>
<code>PGSQL_ASSOC</code>を指定すると、連想配列の形式で取得出来る。</p>

<p>そして、全ての行にアクセスするには、<code>pg_num_rows</code>を使用して何行返ってきたかを取得する。<br/>
その数字をカウントとして使用して、for文で回すことで全件取得する事が出来る。</p>

<pre><code>for ($i = 0 ; $i &lt; pg_num_rows($result) ; $i++){
    $rows = pg_fetch_array($result, NULL, PGSQL_ASSOC);
    var_dump($rows);
}
</code></pre>

<p>接続の切断は以下。</p>

<pre><code>$close_flag = pg_close($dbconn);
if($close_flag) echo "切断成功";
</code></pre>

<p>参考：<a href="http://www.phpbook.jp/tutorial/postgresql/index5.html">データの取得(SELECT)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[セミナーログ]OWASP Night 9th 2013 Year End Special 大阪サテライト]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/16/owasp-night-9th-2013-year-end-special/"/>
    <updated>2013-12-16T21:37:51+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/16/owasp-night-9th-2013-year-end-special</id>
    <content type="html"><![CDATA[<p>OWASP Nightの大阪サテライト、というものに参加させてもらいました。<br/>
参加、というか、端っこで聞かせてもらっただけ、ですが。</p>

<p>東京で開催されているOWASP nightを大阪から中継で見よう、という、<br/>
パブリックビューイング的なイベント。</p>

<!-- more -->


<p><a href="http://atnd.org/events/46285">http://atnd.org/events/46285</a></p>

<p>本イベント<br/>
<a href="http://atnd.org/events/46176">http://atnd.org/events/46176</a></p>

<blockquote><p>東京・六本木で開催されるOWASP Night 9th 2013 Year End Special (a.k.a. 忘ナイト)の中継を大阪で楽しむためのサテライト会場です。</p>

<p>OWASP Meeting/Night – OWASP Japanローカルチャプターミーティングは、セミナーや持ち込みのライトニングトークの形で行われる、Webセキュリティに関心のある方が集う、楽しくカジュアルな勉強会です。</p></blockquote>

<p><a href="https://www.owasp.org/index.php/Japan">OWASP Japan</a></p>

<p>以下、全然内容わかってないですが、<br/>
かるーく、メモです。</p>

<hr />

<p><strong>OWASP Top 10 2013版を日本語訳してみた</strong></p>

<p><a href="http://scan.netsecurity.ne.jp/article/2013/10/24/32779.html">「OWASP Top 10 for 2013」の日本語版を公開</a></p>

<blockquote><p>1：インジェクション（2013-A1）<br/>
2：認証とセッション管理の不備（2013-A2）<br/>
3：クロスサイトスクリプティング（XSS）（2013-A3）<br/>
4：安全でないオブジェクト直接参照（2013-A4）<br/>
5：セキュリティ設定のミス（2013-A5） <br/>
6：機密データの露出（2013-A6）<br/>
7：機能レベルアクセス制御の欠落（2013-A7）<br/>
8：クロスサイトリクエストフォージェリ（CSRF）（2013-A8）<br/>
9：既知の脆弱性を持つコンポーネントの使用（2013-A9）<br/>
10：未検証のリダイレクトとフォワード（2013-A10）</p></blockquote>

<hr />

<p><strong>今夜わかるCVE</strong></p>

<p>CVEとは、共通脆弱性識別子<br/>
<a href="http://itpro.nikkeibp.co.jp/word/page/10004314/">CVEとは？</a></p>

<blockquote><p>ぜい弱性やセキュリティにかかわる事象を説明するための名前や用語を標準化し，辞書を作成するプロジェクト。</p></blockquote>

<p>MITREというところが採番をしている。<br/>
米国政府機関の下請け企業<br/>
NISTの下請けで取りまとめしてる。</p>

<p>来年から番号が変わる。<br/>
今まで4桁だったのが、足らなくなりそう？なので、5桁になる。</p>

<p>CVE番号だけではない！<br/>
MITER社がフォーマットに沿って、清書している。</p>

<p>CVEは、SCAPの一つ。<br/>
NISTが定めた標準規格。<br/>
セキュリティ情報をプログラムから自動で扱える侵入検知システムで活躍。</p>

<p><a href="http://jvndb.jvn.jp/">JVN iPedia</a><br/>
JVNブランドの脆弱性対策情報データベース。</p>

<p>MyJVN API利用例<br/>
<a href="http://secf.keyman.or.jp/">リクルート社 SEfeed</a></p>

<hr />

<p>他にもライトニングトークなど、がありました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jQuery Migrate Pluginとか]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/13/jquery-migrate/"/>
    <updated>2013-12-13T19:42:22+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/13/jquery-migrate</id>
    <content type="html"><![CDATA[<p><a href="http://b.hatena.ne.jp/hotentry">はてなブックマークのホッテントリ</a>を見てたら、<br/>
<a href="https://gist.github.com/mala/7939659">セキュリティについての記事</a>が入ってて、<br/>
それを読んでみると、どうやら、jQuery Migrate Pluginをディスる記事だったよう。</p>

<!-- more -->


<p>で、Migrate Pluginってのを知らなかったのでちょっと調べてみた。</p>

<p><a href="http://c-brains.jp/blog/wsg/13/11/14-142300.php">jQuery Migrate pluginを使ってみる。</a></p>

<p>要するに、アップデートされたjQueryを使用すると、今までのコードが動かなくなっちゃう問題に対して、<br/>
ここが互換性ないよと警告してくれたりとか、<br/>
最新版だとサポートされてないものを復活サポートしてくれたりするもの、らしい。</p>

<p>で、この<strong>復活</strong>が問題になっているよう。</p>

<p><a href="http://t-ashula.hateblo.jp/entry/2013/11/19/120903">jQuery Migrate Plugin なんてなかった件</a></p>

<blockquote><p>いくつかのサイトで実際に遭遇してますが，jQueyr 1.6.3 で解決( jQuery Bug #9521 )したはずの $(&ldquo;a[href=&rdquo; + hash + &ldquo;]&rdquo;) タイプの XSS が （ 2013/11/18 現在 1.2.1 を含む全ての） jQuery Migrate Plugin で復活します．</p></blockquote>

<p>これが、冒頭の記事の、</p>

<blockquote><p>紆余曲折を経て変更されたはずが何故かMigrate Pluginなどというもので復活してしまうことだ。jQueryやめろ。</p></blockquote>

<p>ということのよう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iPhoneでのパスワード自動生成機能]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/13/icoud-keychane/"/>
    <updated>2013-12-13T13:23:51+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/13/icoud-keychane</id>
    <content type="html"><![CDATA[<p>パシフィック・リム、買いました。</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?t=mrlittlebig01-22&o=9&p=8&l=as1&asins=B00F3WXFIE&ref=tf_til&fc1=666666&IS2=1&lt1=_blank&m=amazon&lc1=258FB8&bc1=DDDDDD&bg1=DDDDDD&f=ifr" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>で、購入した商品にはデジタルデータをダウンロード出来る、という特典が封入されていました。</p>

<!-- more -->


<p>それが、<a href="http://support.dcplus.flixster.com/link/portal/15025/15280/Article/3944/">Flixsterのデジタルコピー</a>というもの、でした。</p>

<p>で、さっそくダウンロードすべく、サイトへ。<br/>
会員登録が必要、とのことで登録。</p>

<p>するとその際、パスワードを入力しようとすると、<strong>「パスワード候補を表示」</strong>なる文言が。</p>

<p><img src="http://kayakuguri.github.io/images/2013/12/icoud-keychane-1.jpg" alt="パスワード候補を表示" /></p>

<p>このサイトではそんな機能を実装しているのか！<br/>
すごい！！！</p>

<p>と、一瞬思ったのですが、これは、iOS7.0.3から搭載された<strong>iCloudキーチェーン</strong>というものでした。</p>

<p>詳しくは以下で紹介されています。</p>

<p><a href="http://sbapp.net/appnews/upinfo/icloudkey-6882">【iOS7】iOS7.0.3で追加されたiCloudキーチェーンとは？使い方も紹介！</a></p>

<p>これによると、このキーチェーンを使うことで、<br/>
同じiCloudアカウントｄログインしてるiOSデバイス間なら自動で同期され、<br/>
パスワードを簡単に管理できるよ、というもののよう。<br/>
iOS公式の<a href="https://agilebits.com/onepassword">1Password</a>みたいなもののよう。</p>

<p>いつの間にかそんな便利なものが搭載されていたとは知りませんでした。</p>

<p>それはともかく、上記のFlixsterはワーナーが運営する（買収した）映画SNSらしく、<br/>
結構面白そう。英語ですが。。</p>

<p>参考：<a href="http://bizna.jp/labblog/?p=2942">23億件の映画レビューがついた「Flixster」の秘密</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Book]ある島の可能性]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/10/la-possibilite/"/>
    <updated>2013-12-10T10:23:59+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/10/la-possibilite</id>
    <content type="html"><![CDATA[<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=DDDDDD&IS2=1&bg1=DDDDDD&fc1=666666&lc1=258FB8&t=mrlittlebig01-22&o=9&p=8&l=as1&m=amazon&f=ifr&ref=tf_til&asins=4047915432" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<blockquote><p><strong>あらすじ</strong><br/>
物語は世界の終わりから始まる。喜びも、恐れも、快楽も失った人類は、ネオ・ヒューマンと呼ばれる永遠に生まれ変われる肉体を得た。過去への手がかりは祖先たちが残した人生記。ここに一人の男のそれがある。成功を手にしながら、老いに震え、女たちのなかに仔犬のように身をすくめ、愛を求めつづけたダニエル。その心の軌跡を、彼の末裔たちは辿り、夢見る。あらたな未来の到来を。命が解き放たれる日を。<br/>
<a href="http://www.amazon.co.jp/gp/product/4047915432/ref=as_li_tf_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4047915432&linkCode=as2&tag=mrlittlebig01-22">-amazon</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=mrlittlebig01-22&l=as2&o=9&a=4047915432" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" /></p></blockquote>

<!-- more -->


<p>昨日から読み始めた。<br/>
内容がなんとも詩的というか、なかなか情景が描かれていないようで、<br/>
最後まで読みきれるか早くも不安。<br/>
この、ミシェル・ウェルベック、という作家は、<a href="http://www.amazon.co.jp/gp/product/4480421777/ref=as_li_tf_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4480421777&linkCode=as2&tag=mrlittlebig01-22">素粒子</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=mrlittlebig01-22&l=as2&o=9&a=4480421777" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />という作品が映画化もされていて有名なよう。<br/>
これが小説第１弾、だったらしいのだが、第２弾の、<a href="http://www.amazon.co.jp/gp/product/4048972014/ref=as_li_tf_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4048972014&linkCode=as2&tag=mrlittlebig01-22">プラットフォーム</a><img src="http://ir-jp.amazon-adsystem.com/e/ir?t=mrlittlebig01-22&l=as2&o=9&a=4048972014" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />が、かなりスキャンダラスな内容で話題になったらしい</p>

<blockquote><p>2001年8月末に発表された『プラットフォーム』では、タイを舞台としたセックスツーリズム（売春観光）をテーマとし、ひとりよがりの人権思想家やフェミニストを揶揄したり、またイスラム原理主義への嫌悪感などが小説内部で記述されていたため、アメリカ同時多発テロ事件とも時期的に重なり、様々な批判が交わされた。<br/>
<a href="http://ja.wikipedia.org/wiki/%E3%83%9F%E3%82%B7%E3%82%A7%E3%83%AB%E3%83%BB%E3%82%A6%E3%82%A8%E3%83%AB%E3%83%99%E3%83%83%E3%82%AF">-Wikipedia</a></p></blockquote>

<p>無事読み終わったら感想を追記する予定。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Googleスプレッドシートで￥の小数点を消す方法]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/06/google-spreadsheet/"/>
    <updated>2013-12-06T10:49:52+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/06/google-spreadsheet</id>
    <content type="html"><![CDATA[<p>タイトルそのままです。</p>

<p><code>ファイル → スプレッドシートの設定 → 地域と言</code>から、<br/>
<code>日本語</code>を選択。<br/>
(ついでに時間も東京にしておいた方がいいでしょう）</p>

<p>するとデフォルトで通貨は、小数点なしの￥になる。</p>

<p>また、<code>表示形式 → 数字</code>から、<code>￥1000</code>と<code>￥1000.12</code>のどちらかを選べる。</p>

<p>(小数点つきの分は、単位が千円、の時、とかの想定なのかな。。。？）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Force.comのREST APIを使ってデータをインサートする]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/05/sf-rest-api/"/>
    <updated>2013-12-05T13:13:07+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/05/sf-rest-api</id>
    <content type="html"><![CDATA[<p>参考ページ：<br/>
<a href="http://www.nkjmkzk.net/?p=2328">新しくなったForce.com OAuth Toolkit for phpの使い方</a><br/>
<a href="https://help.salesforce.com/apex/HTViewHelpDoc?id=remoteaccess_oauth_web_server_flow.htm&amp;language=ja">OAuth 2.0 Web サーバ認証フロー</a></p>

<p>接続するためには、facebookなどと同じように、sf側でアプリを作成しなければならない。<br/>
そのアプリが、アクセストークンを発行する形。<br/>
そのアプリは、以前までは、<code>リモートアクセス</code>と呼ばれるものだったけど、仕様変更で、<br/>
<code>接続アプリケーション</code>に、変わったよう。</p>

<!-- more -->


<p>リダイレクトのURLはhttpsでないとダメ。</p>

<p>不特定多数からの接続を受け付ける場合は、<br/>
<code>$oauth-&gt;auth_with_code();</code>ではなくて、<code>$oauth-&gt;auth_with_password(USERNAME, PASSWORD);</code>を使わないといけない。</p>

<p>さらに、不特定の外部からアクセスする場合にはパスワードにセキュリティトークンをつけないといけない。<br/>
<a href="http://vaindespair.blogspot.jp/search?q=rest">Force.com　：　REST API 開発　ユーザ名パスワード OAuth 認証</a></p>

<ul>
<li> 不特定多数からのアクセスを受け付ける場合(たいていこっち)は、パスワード＋セキュリティトークンで認証が必要</li>
<li> 特定のIPからの接続だけ、の場合は、IPを指定することでセキュリティトークンなしで認証が出来る。</li>
</ul>


<h4>インサートのサンプル</h4>

<p><a href="http://developer.force.com/cookbook/recipe/interact-with-the-forcecom-rest-api-from-php">Interact with the Force.com REST API from PHP</a></p>

<p>リードにインサートしようとしたところ、バージョンが20では無理だった。<br/>
バージョンを24にしたらいけた。</p>

<pre><code>$instance_url/services/data/v24.0/sobjects/Lead/
</code></pre>

<p>チェックボック型のデータは、boolean型。なので、true/falseで入れる。<br/>
日付型は、yyyy-mm-dd、とハイフンを入れる。<br/>
<a href="http://d.hatena.ne.jp/mizolog/20110620/1308552542">セールスフォースのデータローダで日付型を使う場合の注意</a></p>

<p>Leadでは<code>Company</code>は必須項目。</p>

<p>複数選択のチェックボックスを送信する場合、配列、にするのではなく、<code>;</code>区切りの文字列にして渡す。</p>

<pre><code>{"where_you_use__c":"work;other;home"}
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EC-Cubeでフォーム別にメールのタイトルを変更する]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/04/ec-cube-mailtitle/"/>
    <updated>2013-12-04T20:07:49+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/04/ec-cube-mailtitle</id>
    <content type="html"><![CDATA[<p>参考：<a href="http://ratorin.jugem.jp/?eid=2">返信メールテンプレートの追加＆編集　EC-CUBE　2.11.2</a></p>

<p><code>Smarty/templates/default/mail_templates/</code>以下にメールのテンプレートを新たに作成する</p>

<p><code>システム設定&gt;マスターデータ管理</code>から、<br/>
テンプレートのID設定、動的データのパス設定などを行う。<br/>
上記で作成したパスを設定する。<br/>
で、<code>基本情報管理</code>&ndash;><code>メール設定</code>から、静的部分の編集が出来る。</p>

<p>しかし、<strong>これだとメールのタイトル部分を動的に出来ない</strong></p>

<!-- more -->


<p><code>mail_title.tpl</code>がメールのタイトルのテンプレートになっているよう。<br/>
デフォルトでは以下になってる。</p>

<pre><code>【&lt;!--{$tpl_shopname}--&gt;】 &lt;!--{$tpl_mailtitle}--&gt;
</code></pre>

<p>この<code>&lt;!--{$tpl_mailtitle}--&gt;</code>は、管理画面の<code>基本情報管理＞メール設定</code>から設定したタイトルになるよう。<br/>
ここで動的にメールタイトルを変更は可能だけど、色々なパターンに対応、は出来ない。。</p>

<p>もし<code>mail_title.tpl</code>に例えば以下のような設定をしたとする。<br/>
<code>item.value</code>は表示したい商品名だとする。</p>

<pre><code>[&lt;!--{$arrForm.item.value}--&gt;] &lt;!--{$tpl_mailtitle}--&gt;
</code></pre>

<p>これだと、商品名を表示したいメールの場合はうまくいくと思うけれど、<br/>
その他のテンプレートを使用したメールでも同じタイトルが使われるので、商品名がないものの場合、おかしくなってしまう。<br/>
例えば、お問い合わせ受付、というタイトルのメールだとすると、以下のように商品名が抜けて、カッコのみになってしまうはず。</p>

<pre><code>[]お問い合わせ受付
</code></pre>

<p>参考：<a href="http://www.tokihouse.com/ec-cube/mail/mail_title.html">http://www.tokihouse.com/ec-cube/mail/mail_title.html</a></p>

<p>そうなると、やっぱり直接関数を触らないといけない、のかも。</p>

<p><a href="http://www.tailtension.com/eccube/198/">(EC-CUBE2.11.4)お問い合わせメールの件名に名前を入れる</a></p>

<p><code>/data/class/helper/SC_Helper_Mail.php</code>を修正</p>

<p>テンプレートから静的部分だけを取ってきて表示する、方法がわからなかったので、<br/>
<code>$tmp_subject</code>に直接入れた。<br/>
動的にしたかった商品名は引数で渡した。</p>

<p>この<code>SC_Helper_Mail.php</code>の<code>sfMakeSubject</code>関数の中で、タイトルにテンプレートを渡す処理をしているので、<br/>
その部分を独自のものに変更すれば、テンプレートから変更、も出来るようになるかもしれない。</p>

<pre><code>$subject = $objMailView-&gt;fetch('mail_templates/mail_title.tpl');
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Php StormでのFTPの設定]]></title>
    <link href="http://kayakuguri.github.io/blog/2013/12/04/php-storm-ftp/"/>
    <updated>2013-12-04T16:16:32+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2013/12/04/php-storm-ftp</id>
    <content type="html"><![CDATA[<p>PhpStormからFTPにアップロードするための設定方法のメモ。</p>

<p>１）メニューから、Tools→Deployment→Configuration、を選択</p>

<p><img src="http://kayakuguri.github.io/images/2013/12/phpstorm1.jpg" alt="Configuration" /></p>

<p>２）Connectionタブ内で以下を設定する。</p>

<!-- more -->


<ul>
<li> FTP host  :FTPのホスト名</li>
<li> Port  :ポート</li>
<li> Root path  :サーバ上のルートパス</li>
<li> User name  :接続するユーザー名</li>
<li> Password   :パスワード</li>
<li> Web server root URL  :サイトのURL</li>
</ul>


<p><img src="http://kayakuguri.github.io/images/2013/12/phpstorm2.jpg" alt="Connection" /></p>

<p>３）Mappingsタブ内で以下を設定する。</p>

<ul>
<li> Local pash  :アップロードしたいローカルパス</li>
<li> Deployment path on server &lsquo;hogehoge.com&rsquo;  :サーバー上でアップロードする場所(ルートの場合は<code>/</code>で)</li>
</ul>


<p><img src="http://kayakuguri.github.io/images/2013/12/phpstorm3.jpg" alt="Mappings" /></p>

<p>４）プロジェクトツリーからファイル名を右クリックして、Upload to&hellip;を選択し、設定したサイトを選択。</p>
]]></content>
  </entry>
  
</feed>
