<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2014-12-12T16:03:02+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[salesforce]標準画面でVFからポーリング処理をJSのリロードで実現する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/12/12/reload-vf-iframe/"/>
    <updated>2014-12-12T15:40:08+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/12/12/reload-vf-iframe</id>
    <content type="html"><![CDATA[<p>やりたかった事としては、カスタムオブジェクトの詳細画面に、VisualForceで地図を表示させ、<br/>
そのVF内のJSからリロード処理をsettimeoutとかで呼び出してポーリングさせるようにしたかった。</p>

<!-- more -->


<p>作成したVisualForceのページを詳細画面に埋め込む方法などは、以前に書いた記事を参考にどうぞ。</p>

<p><a href="http://kayakuguri.github.io/blog/2014/11/21/add-custom-vf-page/">[salesforce]オブジェクトの詳細ページに作成したVisualForceページを埋め込む</a></p>

<p>で、上記の方法でVisualForceに埋め込むわけだけれど、そのままそのVisualForce内からJSでリロード処理を書くと、上手く動作しない。<br/>
原因は、埋め込まれたVisualForceは標準画面から見るとiframeとなっており、しかもその中身は別のドメインとなっている。<br/>
なので、子ページが別ドメインの親ドメインをリロードしようとしてクロスドメインのエラーが発生していた、というわけ。</p>

<p>例えば、詳細ページのURLが以下のようになっている場合、</p>

<blockquote><p><a href="https://cs6.salesforce.com/xxxxIDxxxx">https://cs6.salesforce.com/xxxxIDxxxx</a></p></blockquote>

<p>読み込まれているVFページのURLは以下のようになっていた。</p>

<blockquote><p><a href="https://c.cs6.visual.force.com/servlet/servlet.Integration?lid=xxxxVFIDxxxx&amp;ic=1">https://c.cs6.visual.force.com/servlet/servlet.Integration?lid=xxxxVFIDxxxx&amp;ic=1</a></p></blockquote>

<p>これはJSの仕様でクロスドメイン(オリジン)がダメなので、根本的に回避する手立てはない。</p>

<p>しかし、バッドノウハウ的に対応するならば、以下のように、同じドメインからリロードをかけるようにしてやれば回避できるよう。</p>

<ol>
<li><strong>静的リソース</strong>に、リロードするためだけのJSを埋め込んだファイルをアップしておく</li>
<li>VFページ上に非表示にしたiframeタグを記述しておく</li>
<li>リロードするタイミングでそのiframeに、1のファイルを表示させる</li>
<li>静的リソース内からリロードが走り、無事リロードが行われる</li>
</ol>


<p>現状では、標準ページのドメインと静的リソースの表示ドメインは同じなので動作する。<br/>
標準ページから見れば、孫からリロードを要求される形。</p>

<p>1.の中身は以下のような内容</p>

<pre><code>&lt;html&gt;&lt;head&gt;&lt;script&gt;parent.parent.location.reload();&lt;/script&gt;&lt;/head&gt;&lt;/html&gt;
</code></pre>

<p>これを、<code>OpenerReload</code>として静的リソースに登録しておく。<br/>
VF側のJSはこんな内容</p>

<pre><code>setTimeout(reloadAndClose, 60000);
function reloadAndClose() {
  var iframe = document.getElementById('iframe');
  var urlbase = 'https://cs6.salesforce.com';
  iframe.src = urlbase + '{!URLFOR($Resource.OpenerReload)}';
}
</code></pre>

<p>埋め込むiframeのタグ</p>

<pre><code>&lt;iframe src="about:blank" id="iframe" style="display:none;"&gt;&lt;/iframe&gt;
</code></pre>

<p>静的リソースがいつまで同じドメインでアクセスできるかわからないので、あまりオススメは出来ないけれど、他に方法がなさそう。<br/>
仕事でやる場合には避ける方が無難かもしれない。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apexのテストで変数部分にテストが通ってくれない時]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/12/02/apex-json-class-test/"/>
    <updated>2014-12-02T18:41:35+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/12/02/apex-json-class-test</id>
    <content type="html"><![CDATA[<p>きっと基本を理解してないんだと思いますが、単純な話でした。</p>

<!-- more -->


<p>JsonをGETで引き渡して、それをApexクラスにしてapex内で使用するべく、<br/>
apex2Jsonとして以下のようなクラスを作成していた。</p>

<pre><code>public class Json2Apex{
    public String user_id;
    public String dummy;

    public static Json2Apex parse(String json){
        return (Json2Apex) System.JSON.deserialize(json, Json2Apex.class);
    }
}
</code></pre>

<p>ちゃんとJSONには、<code>user_id</code>と<code>dummy</code>の値を持たせて変換させ、<br/>
その変数にもきっちりアクセスした状態でも、テストを走らせてみると、<br/>
<code>parse</code>メソッド部分しか通ってない。<br/>
全体の行数が少ないので、パーセンテージとしては、<strong>50%</strong>。<br/>
これでは他のリリースに影響が大なので、調べてみると、単純な事で、<br/>
<code>{get; set;}</code>をつけろ、ってだけだった。<br/>
以下のようにつける。</p>

<pre><code>public String user_id{get; set;}
public String dummy{get; set;}
</code></pre>

<p>これだけでテストコードも変更することなく通り、無事、100%を達成できました。</p>

<p>参考：<a href="http://salesforce.stackexchange.com/questions/10018/testing-apex-classes-created-by-jsontoapex">http://salesforce.stackexchange.com/questions/10018/testing-apex-classes-created-by-jsontoapex</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[文字列をDatetime型に変換する時の注意点]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/12/01/apex-datetime-gmt/"/>
    <updated>2014-12-01T12:53:59+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/12/01/apex-datetime-gmt</id>
    <content type="html"><![CDATA[<p>apexにて、文字列からDatetime型に変更した際の注意点。</p>

<!-- more -->


<p>例えば、日本で作業してる場合は、<code>GMT+9</code>となり、標準時より9時間プラス、となる。<br/>
文字列からdatetime型に変更する際にはいくつか方法があるが、<code>valueOf</code>が簡単。<br/>
しかし例えば以下のようにすると意図しない時間が帰って来てしまう</p>

<pre><code>String test_str = '2014-12-1 05:30:18';
Datetime test_dt = Datetime.valueOf(test_str);
System.debug(test_dt);

//出力
// 2014-11-30 20:30:18
</code></pre>

<p>特に顕著な例だけど、月が変わってしまっている。<br/>
なぜかというと、Datetime型に変換する際に、(なぜか)GMTが考慮されて、標準時に戻して出力されるよう。<br/>
日本は+9時間なので、標準時は-9時間。<br/>
なので、指定した時間よりも９時間マイナスされた日時が返却される仕様。<br/>
このため、日付が変わり、その結果、月も変わってしまったという現象が起こる。<br/>
それを回避するにはちゃんとメソッドが用意されていて、<code>valueOfGmt</code>を使う。<br/>
これだと、設定しているGMTを使って(要するに入力された時間そのまま)、Datetimeを作成してくれる。</p>

<pre><code>String test_str = '2014-12-1 05:30:18';
Datetime test_dt = Datetime.valueOfGmt(test_str);
System.debug(test_dt);

//出力
// 2014-12-1 05:30:18
</code></pre>

<p>月まで変わると結構クリティカルだと思うので、要注意。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[herokuアプリとdropboxのファイル同期]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/11/21/heroku-dropbox-sync/"/>
    <updated>2014-11-21T20:11:48+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/11/21/heroku-dropbox-sync</id>
    <content type="html"><![CDATA[<p>herokuがdropboxとの同期サービスをベータ版ですが開始したようです。<br/>
記事：<a href="https://blog.heroku.com/archives/2014/11/19/announcing_beta_dropbox_sync">https://blog.heroku.com/archives/2014/11/19/announcing_beta_dropbox_sync</a><br/>
ドキュメント：<a href="https://devcenter.heroku.com/articles/dropbox-sync">https://devcenter.heroku.com/articles/dropbox-sync</a></p>

<!-- more -->


<p>で、実際に試してみました。</p>

<p>herokuで作成しているアプリの、<code>code</code>からdropboxへの接続が出来ます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test1.jpg" alt="" /></p>

<p>少し下に、<code>Connect to Dropbox</code>があるので、クリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test2.jpg" alt="" /></p>

<p>ログインして認証。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test3.jpg" alt="" />
<img src="http://kayakuguri.github.io/images/2014/11/dropbox-test4.jpg" alt="" /></p>

<p>認証すると、接続したdropboxの中にフォルダが作成され、そこにアプリ上のソースが一式同期されます。<br/>
<code>Dropbox/Apps/heroku/アプリ名</code>のフォルダが作成されます。</p>

<p>で、ここにある通り、ここからdropbox内のファイルを使ってdeploy出来ます。<br/>
メッセージを書いて<code>deploy</code>をクリックすると、書いたメッセージで、<code>commit</code>、<code>push</code>、<code>deploy</code>が実行されます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test5.jpg" alt="" /></p>

<p>実行中</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test6.jpg" alt="" /></p>

<p>完了</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test7.jpg" alt="" /></p>

<p>git上でもコミットメッセージが反映されています。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/dropbox-test8.jpg" alt="" /></p>

<p>シュチエーションとしては、dropboxで同期したディレクトリを他の人とコラボして、<br/>
その人が更新したファイルをブラウザ上からdeploy出来る、みたいな感じかと。<br/>
それだと、コラボ相手はgitがいらないので。</p>

<p>dropboxとの接続サービスはいっぱいあるので、他にも組み合わせれば色々出来そう。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]オブジェクトの詳細ページに作成したVisualForceページを埋め込む]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/11/21/add-custom-vf-page/"/>
    <updated>2014-11-21T12:14:39+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/11/21/add-custom-vf-page</id>
    <content type="html"><![CDATA[<p>ページレイアウトで追加するのですが、作成しないと選択肢に出てこないので少し悩みました。</p>

<!-- more -->


<p>今回は、サンプルオブジェクト、というオブジェクトを作成しました。<br/>
今は名前が表示されているだけです。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf01.jpg" alt="詳細画面" /></p>

<p>で、レイアウトの編集画面に行ってみても、VisualForceページの追加タブはありません。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf02.jpg" alt="タブがない" /></p>

<p>なのでまずは、作成したいオブジェクトをコントローラーに指定したpageを作成します。<br/>
ここでは、<code>hoge__c</code>というオブジェクトにします。<br/>
<code>standardController="hoge__c"</code>がポイントです。<br/>
内容は新規で作成したものママです。</p>

<pre><code>&lt;apex:page standardController="hoge__c"&gt;
&lt;!-- Begin Default Content REMOVE THIS --&gt;
&lt;h1&gt;Congratulations&lt;/h1&gt;
This is your new Page
&lt;!-- End Default Content REMOVE THIS --&gt;
&lt;/apex:page&gt;
</code></pre>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf03.jpg" alt="VFページ作成" /></p>

<p>で、再度、サンプルオブジェクトのレイアウト編集画面を見てみると、<br/>
見事、Visualforceページ、というタブが追加されています。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf04.jpg" alt="タブがある" /></p>

<p>選択すると、先程作成したpageの名前が出てきます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf05.jpg" alt="ページの選択" /></p>

<p>これを、任意の場所にドラッグ＆ドロップすると、以下のように追加され、ページとして表示できます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf06.jpg" alt="レイアウトに追加" /></p>

<p>保存して詳細画面を確認すると、見事作成した文章が表示されました。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf07.jpg" alt="追加完了" /></p>

<p>後はVFpageの中身をカスタマイズすれば好きなものを出す事が出来ます。<br/>
googlemapなんかも思いのまま。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/custom_vf08.jpg" alt="地図の表示" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Force.com IDE for Eclipse plug-inをインストール]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/11/13/force-dot-com-ide-for-eclipse/"/>
    <updated>2014-11-13T17:35:25+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/11/13/force-dot-com-ide-for-eclipse</id>
    <content type="html"><![CDATA[<p>いつのまにやらForce.com IDEの<a href="http://salesforce.stackexchange.com/questions/47653/where-can-i-get-a-standalone-version-of-the-force-com-ide">スタンドアロン版が開発終了してしまっているらしく</a>(未確認)、<br/>
仕方がないので、Eclipseのインストールからしてみました。</p>

<!-- more -->


<p>環境は、macのmavericks(10.9)です。</p>

<h2>Javaのインストール</h2>

<p>まずは、JAVAのバージョンを確認。<br/>
ターミナルからコマンドで確認できる。</p>

<pre><code>$ java -version
java version "1.6.0_65"
Java(TM) SE Runtime Environment (build 1.6.0_65-b14-462-11M4609)
Java HotSpot(TM) 64-Bit Server VM (build 20.65-b04-462, mixed mode)
</code></pre>

<p>Force.com IDEは、</p>

<blockquote><p>Java SE Runtime Environment 6 (v1.6) or later</p></blockquote>

<p>となっているんだけど、7以上でないとダメなよう。<br/>
<a href="https://developer.salesforce.com/forums/?id=906F0000000AbEjIAK">https://developer.salesforce.com/forums/?id=906F0000000AbEjIAK</a><br/>
なので、以下から7をダウンロード。<br/>
<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html">http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html</a></p>

<p><img src="http://kayakuguri.github.io/images/2014/11/java01.jpg" alt="java" /></p>

<p>中ほどにあるリンクページから、<code>jdk-7u71-macosx-x64.dmg</code>をダウンロード。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/java02.jpg" alt="java download" /></p>

<p>ダブルクリックしてインストール開始。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/java03.jpg" alt="java インストール" /></p>

<p>特筆すべき事はなく、次、次、でOK。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/java04.jpg" alt="java インストール中" /></p>

<p>完了。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/java05.jpg" alt="java インストール完了" /></p>

<p>再度バージョンを確認。</p>

<pre><code>$ java -version
java version "1.7.0_71"
Java(TM) SE Runtime Environment (build 1.7.0_71-b14)
Java HotSpot(TM) 64-Bit Server VM (build 24.71-b01, mixed mode)
</code></pre>

<h2>Eclipseのインストール</h2>

<p>ググったら出てくる公式の日本語ページ最下部からインストールの解説ページへ。<br/>
<a href="https://developer.salesforce.com/page/JP:Force.com_IDE">https://developer.salesforce.com/page/JP:Force.com_IDE</a></p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide01.jpg" alt="force.com ide 解説" /></p>

<p><a href="https://developer.salesforce.com/page/JP:Force.com_IDE_Installation">https://developer.salesforce.com/page/JP:Force.com_IDE_Installation</a><br/>
Eclipseのダウンロードページへ。4.2でも4.3でもいい、との事なので、今回は4.3で。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide02.jpg" alt="インストール方法" /></p>

<p>飛び先のページで、<code>Eclipse IDE for Java Developers</code>をダウンロード。<br/>
自分はmacなので、mac64bit版をダウンロード。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide03.jpg" alt="eclipse ダウンロード" /></p>

<p>次のページでダウンロード開始。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide04.jpg" alt="eclipse ダウンロード" /></p>

<p>ダウンロードは自動で始まる。<br/>
(寄付してね！画面が表示されるけど、eclipse自体は無料で使える)</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide05.jpg" alt="eclipse ダウンロード" /></p>

<p>ダウンロードしたファイル(今回は、<code>eclipse-java-kepler-R-macosx-cocoa-x86_64.tar.gz</code>)をダブルクリックして解凍。<br/>
macの場合はインストールはなく、解凍して出来たファルダごと、アプリケーションフォルダに突っ込めばOK。<br/>
(別に入れなくても大丈夫なはず)</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide06.jpg" alt="アプリケーションフォルダへ" /></p>

<p>で、起動。<br/>
ただし、自分の環境(Mavericks)では起動が出来ず、壊れているという表記。<br/>
これは、Mountain Lionから導入されたGateKeeperによってApp Store以外からインストールしようとした場合に表示される警告、のよう。<br/>
いきなり実行ファイルがゴミ箱に捨てられるってのがなんともすごい。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide07.jpg" alt="起動失敗" /></p>

<p>以下を参考に、実行を許可して、改めて起動。<br/>
<a href="http://park1.wakwak.com/~ima/macosx_eclipse0001.html">[OSX]Mountain Lion(10.8)でEclipse4.3(kepler)を日本語化して使う | ごった煮 &ndash; tips about programming and building a server</a></p>

<p>警告は出るけど無視。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide08.jpg" alt="接続警告" /></p>

<p>最初にワークスペースを設定しろ、と言われるので、とりあえずデフォルトのままで起動する。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide09.jpg" alt="ワークスペース" /></p>

<p>起動後、welcomeスクリーンが表示されるが、とりあえずこのまま放置して、<br/>
上部のメニューから、Help &ndash;> Install New Software を選択。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide10.jpg" alt="Install New Software" /></p>

<p>ネットワークの接続を許可して…、<br/>
あとは上記公式の解説ページ(英語)と同じ手順となりますが、<br/>
<code>Add…</code>をクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide11.jpg" alt="Add" /></p>

<p>Nameは適当に。<br/>
Locationに、<code>http://media.developerforce.com/force-ide/eclipse42</code>と入力。<br/>
OKをクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide12.jpg" alt="Addリポジトリ" /></p>

<p>結果が表示されるので、リストに表示された、<code>Force.com IDE</code>にチェックを入れ、<br/>
<code>Next</code>をクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide13.jpg" alt="インストール" /></p>

<p>ダウンロードされ、インストール準備完了。  <br/>
<code>Next</code>をクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide14.jpg" alt="ダウンロード完了" /></p>

<p>ライセンス情報が表示されるので、一通り目を通してから(通してから…)、<br/>
<code>I accept the terms of license agreements</code>にチェックを入れて、<code>Finish</code>をクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide15.jpg" alt="ライセンス" /></p>

<p>で、インストールが始まる。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide16.jpg" alt="インストール開始" /></p>

<p>インストール後、再起動が必要、との事なので<code>Yes</code>をクリックして、eclipseを再起動。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide17.jpg" alt="再起動" /></p>

<p>これでインストールは完了したわけだけれども、ウインドウ構成など見た目をForce.com仕様に変更する。<br/>
上部メニューの、Window &ndash;> Open Perspective &ndash;> Other を選択。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide18.jpg" alt="Perspective" /></p>

<p>Force.comを選択して、OK。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide19.jpg" alt="Force.com選択" /></p>

<p>これで、Force.com IDEのインストールは完了。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide20.jpg" alt="完了！" /></p>

<h2>プロジェクトの作成</h2>

<p>作成は、スタンドアロン版と同じだった。<br/>
上部メニューから、File &ndash;> New &ndash;> Force.com Project を選択</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide21.jpg" alt="プロジェクトの作成" /></p>

<p>プロジェクトの名前と、環境のユーザ名、パスワード、セキュリティトークン(必要なら)と、環境を選択し、Finish。</p>

<p><img src="http://kayakuguri.github.io/images/2014/11/ide22.jpg" alt="接続情報" /></p>

<p>これで開発環境が整った。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]apex Rest APIでPOSTでデータを送信する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/27/apex-rest-post/"/>
    <updated>2014-10-27T18:49:51+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/27/apex-rest-post</id>
    <content type="html"><![CDATA[<p>getでは送信したデータはすぐに取得できたのですが、<br/>
postでの送信方法とデータ取得方法がわからずに迷走しまいした。<br/>
結論は、送信側の話、だったのですが。</p>

<!-- more -->


<p>GETの場合は以下のコードで取得可能でした。<br/>
簡単。</p>

<p>送信データ</p>

<pre><code>?userid=123&amp;name=hoge
</code></pre>

<p>apex</p>

<pre><code>@RestResource(urlMapping='/GetDataSample/test')

global with sharing class GetDataSampleAPI {
    @HttpGet
    global static String doGet(){
        RestRequest req = RestContext.request;
        String userid = req.params.get('userid');
        String name = req.params.get('hoge');
    }
}
</code></pre>

<p>実は、POSTの場合も、apexのコードは全く同じで取得する事が出来ました。<br/>
以下、取得出来たコードです。</p>

<pre><code>@RestResource(urlMapping='/GetDataSample/test')

global with sharing class GetDataSampleAPI {
    @HttpPost
    global static String doPost(){
        RestRequest req = RestContext.request;
        String userid = req.params.get('userid');
        String name = req.params.get('hoge');
    }
}
</code></pre>

<p>ただし、送信する際にヘッダーを正しく指定してやったり、送信形式に注意してやる必要がありました。<br/>
PHPのcurlで実装していたのですが、大いに迷走していたのは、salesforce側の話ではなく、<br/>
PHPでの送信方法の問題でしたとさ…。</p>

<p>送信出来たコード<br/>
(<a href="https://github.com/nkjm/Force.com-OAuth-Toolkit-for-PHP">このライブラリ</a>を使用して送信する前提)</p>

<pre><code>$url = "$oauth-&gt;instance_url/services/apexrest/GetDataSample/test";
$curl = curl_init($url);

$POST_DATA = array(
    'userid' =&gt; '123',
    'hoge' =&gt; 'fugafuga'
);

curl_setopt($curl, CURLOPT_POST, TRUE);
curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($POST_DATA));
curl_setopt($curl, CURLOPT_HEADER, false);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-type: application/x-www-form-urlencoded;charset=UTF-8', "Authorization: OAuth " . $oauth-&gt;access_token));

$output= curl_exec($curl);
curl_close($curl);
</code></pre>

<p>ポイントは以下の２つです。</p>

<p>１）<br/>
<code>Content-type</code>を、<code>application/x-www-form-urlencoded</code>という、POSTでデータを送信する際の標準タイプを指定しています。<br/>
通常はデフォルトでこれなのですが、salesforceのAPIにPOSTする場合は明示的に指定してやる必要があるようです。(たぶん)<br/>
ちなみに、apex restは、<code>multipart/form-data</code>タイプはサポートしていないようです。</p>

<p>２）<br/>
１のタイプで指定してやると、送信するデータは<code>userid=123&amp;hoge=fugafuga</code>のように、GETと同じ形で取得できるようになるようです。<br/>
なので送信する際にそのような形に変換してやる必要があるようで、それが以下の記述となります。</p>

<pre><code>curl_setopt($curl, CURLOPT_POSTFIELDS, http_build_query($POST_DATA));
</code></pre>

<h3>参考</h3>

<p><a href="http://qiita.com/khirose/items/870ffec6ce4562f54c9d">PHP小ネタ &ndash; PHPのcurlでPOST &ndash; Qiita</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]sandboxでメールが送られない]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/22/send-mail-setting-sandbox/"/>
    <updated>2014-10-22T11:49:53+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/22/send-mail-setting-sandbox</id>
    <content type="html"><![CDATA[<p>salesfoceのsandboxでワークフローメールを作成していたのですが、<br/>
何回やってメールが送信されない。<br/>
ワークフローは間違ってないし、有効化もできてるし……と思っていたら、設定の問題でした。</p>

<!-- more -->


<p>ググってみると、<code>メール管理</code>の<code>送信</code>から設定すると書いてあるのですが、そんなが項目ない。
そもそもの権限の問題かと思っていたら、いつからか名前が変わっているよう。<br/>
ググってるとよくある……。</p>

<p><code>管理</code>&ndash;><code>メール管理</code>&ndash;><code>配信可能性</code><br/>
に、あった。配信可能性、って。</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/send_mail_setting.jpg" alt="配信可能性" /></p>

<p>この中で、<code>アクセス権</code>を、<code>システムメールのみ</code>から、<code>すべてのメール</code>に変更し、保存する。<br/>
これでメールの送信が出来るようになった。</p>

<h3>参考</h3>

<p><a href="http://dackdive.hateblo.jp/entry/2014/01/26/165752"> [salesforce] Sandbox組織だとメール通知ができない問題 &ndash; dackdive&#39;s blog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apexで割り算をしたら整数になった]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/21/apex-decimal/"/>
    <updated>2014-10-21T16:44:39+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/21/apex-decimal</id>
    <content type="html"><![CDATA[<p>タイトル通り、apex上で割り算をしたら整数になってしまったんですね。<br/>
単純に型付け言語による仕様だったのですが、ちょっとハマったのでメモ。</p>

<!-- more -->


<p>最初、記述したのが以下のコード</p>

<pre><code>Decimal a = 1 / 2;
System.debug(a);  //0
</code></pre>

<p>これだと、<code>0</code>が出力されます。<br/>
<code>Decimal</code>は小数まで表示できる型なのになんで？？？<br/>
と思ったんですが、計算している、<code>1</code>とか<code>2</code>が、<code>Integer</code>型、ってことなんですね。<br/>
なので、これを<code>Decimal</code>型にしてやると計算できます。</p>

<pre><code>Decimal a = Decimal.valueOf(1) / Decimal.valueOf(2);
System.debug(a);  //0.5
</code></pre>

<p>しかし数字を書きたいだけなのにいちいちキャストするのはめんどう。<br/>
なので、以下でも大丈夫。</p>

<pre><code>Decimal a = 1.0 / 2.0;
System.debug(a);  //0.5
</code></pre>

<p>小数点をつけると<code>Decimal</code>型になるようです。</p>

<p>ちなみにやりたかったことは、<code>Datetime</code>型の現在時間を日本時間(GMT+9)で表示することです。</p>

<pre><code>Datetime.now() + (9.0/24.0)
</code></pre>

<p><code>Datetime</code>型の足し算は1日単位で行われるため、24で割ると時間になります。<br/>
しかし、小数点にしないと<code>0</code>になってしまい計算できませんでした。<br/>
<code>format</code>をつかってフォーマットしてしまうと文字列になってしまうため、足し算で対応しています。</p>

<p>・<code>format</code>を使った場合</p>

<pre><code>Datetime.now().format('yyyy-MM-dd hh:mm', 'JST');
</code></pre>

<p><a href="https://sites.google.com/site/odekakeshimasyo/salesforceapexdatetime">Salesforce Apex 日付 時間 &ndash; おでかけしましょ</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]リッチテキストエリアに保存された画像を一般公開する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/16/forcecom-sites-profile/"/>
    <updated>2014-10-16T17:45:35+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/16/forcecom-sites-profile</id>
    <content type="html"><![CDATA[<p>結論から言うと、権限設定の問題でした。</p>

<!-- more -->


<p>具体的にしかかったことは以下です。</p>

<ul>
<li>キャンペーンの情報をvisualforceでsitesを使って表示</li>
<li>カスタム項目でリッチテキストエリアを作成し、その画像を表示</li>
</ul>


<p>リッチテキストエリアに保存された内容は以下のような形で取得できました。</p>

<pre><code>&lt;img alt=\"ユーザが追加した画像\" src=\"/my-Home/servlet/rtaImage?eid=701O00000007l1s&amp;amp;feoid=00NO0000001Abk2&amp;amp;refid=0EMO000000004py\" style=\"\"&gt;&lt;/img&gt;
</code></pre>

<p>これを、公開しているサイトのURLにくっつけてアクセスしてみました。</p>

<p>例：</p>

<blockquote><p><a href="https://my-domain.cs6.force.com/my-Home/servlet/rtaImage?eid=701O00000007l1s&amp;feoid=00NO0000001Abk2&amp;refid=0EMO000000004py">https://my-domain.cs6.force.com/my-Home/servlet/rtaImage?eid=701O00000007l1s&amp;feoid=00NO0000001Abk2&amp;refid=0EMO000000004py</a></p></blockquote>

<p>しかし、以下のような画像が表示されました。</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/rich-text-img.png" alt="not avaiable" /></p>

<p>どうやら権限がないことはわかっていたのですが、どこをどう触っていいやら。<br/>
いろいろ見たあげく、以下の設定でいけました。</p>

<p><a href="http://www.kokyakukanri.info/salesforce/blog/2010/11/visualforce-3.html">Visualforceページの公開 &ndash; セールスフォースお助け隊ブログ | Salesforce</a></p>

<p>設定 &ndash;> 開発 &ndash;> サイト</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/rich-text-img-2.jpg" alt="サイト" /></p>

<p>公開しているサイトの<code>サイトの表示ラベル</code>をクリック</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/rich-text-img-3.jpg" alt="サイト" /></p>

<p>サイトの詳細で、<code>公開アクセス設定</code>をクリック</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/rich-text-img-4.jpg" alt="サイト" /></p>

<p><code>編集</code>をクリックし、</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/rich-text-img-5.jpg" alt="サイト" /></p>

<p><code>標準オブジェクト権限</code>の<code>キャンペーン</code>の<code>参照</code>をチェックして保存。</p>

<p><img src="http://kayakuguri.github.io/images/2014/10/rich-text-img-6.jpg" alt="サイト" /></p>

<p>これでアクセス出来るようになりました。</p>

<p>今回はキャンペーンオブジェクトの話でしたが、<br/>
<code>標準オブジェクト権限</code>と<code>カスタムオブジェクト権限</code>が権限設定の箇所なので、<br/>
その他のオブジェクトについても設定が可能です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]SOQLで子リレーションの情報を取得する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/15/soql-relation/"/>
    <updated>2014-10-15T17:42:17+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/15/soql-relation</id>
    <content type="html"><![CDATA[<p>SOQLにて、あるオブジェクトの子リレーションになっているオブジェクトの情報を取得したい場合の話です。</p>

<!-- more -->


<p>子オブジェクトの参照名は、カスタムオブジェクトの場合は、<code>__r</code>となっていて、<br/>
標準オブジェクトは、お尻に<code>s</code>をつける形となっています。(だいたい)</p>

<p>今回はあまり例で見ることのなかった、<code>campaign</code>、<code>campaignmember</code>で例を示します。</p>

<p>とあるキャンペーンのキャンペーンメンバーのデータを取得する場合、以下のようなSOQLで取得できます。</p>

<pre><code>Select id, (Select cm.id From CampaignMembers cm) From Campaign
</code></pre>

<p>これを開発者コンソールの、Query Editorで実行してみると、以下の様なデータが取得できます。<br/>
(1レコード例)</p>

<pre><code>id: 701O00000007osrIAA
CampaignMembers: [{"Id":"00vO0000002B00XIAS"},{"Id":"00vO0000002B00SIAS"}]
</code></pre>

<p>これをapex上で使用するには、<code>CampaignMmber</code>が配列で入ってくるので、<br/>
for文で回して取得してやる必要があります。<br/>
以下は、３つの<code>campaignID</code>から取得したデータの<code>CampaignMember</code>の<code>status</code>を取得しています。</p>

<pre><code>List&lt;String&gt; campid = new List&lt;String&gt;();
campid.add('701O00000007orzIAA');
campid.add('701O00000007osrIAA');
campid.add('701O00000007l1sIAA');
String soql_c = 'SELECT id,type, (Select Status From CampaignMembers) FROM Campaign WHERE id=:campid';

List&lt;Campaign&gt; campRes;
campRes = Database.query(soql_c);

for(Campaign cdata : campRes){
    for(CampaignMember cmdata : cdata.CampaignMembers){
        System.debug(cmdata.Status);
    }
}
</code></pre>

<h3>参考</h3>

<p><a href="http://blog.flect.co.jp/salesforce/2010/07/soql-3dd0.html">セールスフォースの豆知識: SOQLでのリレーションの辿り方</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]ListとSet]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/14/list-set-map/"/>
    <updated>2014-10-14T19:12:55+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/14/list-set-map</id>
    <content type="html"><![CDATA[<p>Apexで、配列であるListで重複したデータを取り除きたい、と思ったのだけれど、<br/>
Listじゃなく、Setでやれば重複が許されなかった。</p>

<!-- more -->


<p>JAVAの場合は<code>HashSet</code>というものを使うことで重複したデータが入らないように出来るそう。<br/>
<a href="http://javatechnology.net/java/duplicate-hashset/">Javaの重複文字列の削除方法 | ジャイアントモリンキーのjavaテック</a></p>

<p>これが、Apexの場合は、<code>Set</code>型がデフォルトで、<code>HashSet</code>になっているよう。<br/>
ちなみに、<code>Map</code>も重複が許されない、<code>HashMap</code>のよう。</p>

<p><a href="http://blog.livedoor.jp/minoaw/archives/1703075.html">[ApexCode]コレクション : minoawのブログ</a></p>

<p><a href="https://developer.salesforce.com/page/JP:An_Introduction_to_Apex">Apex コードの概要</a><br/>
コレクション型の部分</p>

<blockquote><p>Set は、プリミティブ型の集合であり、順序の指定はなく、要素の重複は許されません。<br/>
List は、要素の集合です。要素間の順序を保持したい場合に使用します。要素の重複は許されます。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mavericksにアップデートしたらターミナルが起動しなくなった]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/10/06/zsh-reinstall/"/>
    <updated>2014-10-06T12:24:35+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/10/06/zsh-reinstall</id>
    <content type="html"><![CDATA[<p>今更ながらですが、Mavericksにアップデートしたらターミナルが起動しなくなりましたよ。<br/>
これが嫌でアップデートしてなかったのですが、やはり起こってしまったので、対応したメモ。</p>

<!-- more -->


<p>まずは、ここの通りに。</p>

<p><a href="http://qiita.com/crispy/items/70367cd7e97dd4e0a60d">Maverickに上げたらターミナルが起動しない問題</a></p>

<p>ターミナルのアプリの環境設定から、<br/>
<code>起動 -&gt; 開くシェル -&gt; コマンド(完全パス)</code><br/>
に、<code>/bin/zsh</code>を指定。</p>

<p>これで、ターミナルは動作するようになるので、以下の通りに叩いた。</p>

<pre><code>$ brew update
$ brew upgrade
</code></pre>

<p>これがかなり時間がかかった。<br/>
しかしまだエラーが。</p>

<pre><code>dyld: Library not loaded: /usr/local/lib/libgdbm.4.dylib
  Referenced from: /usr/local/bin/zsh
  Reason: image not found
zsh: trace trap  tmux
</code></pre>

<p>次は以下を参考。</p>

<p><a href="http://umegusa.hatenablog.jp/entry/2012/07/21/155637">teminalが動かなくなってしまいました</a></p>

<p>最新版は、1.11ってことで、以下で追加</p>

<pre><code>$ wget ftp://ftp.gnu.org/pub/gnu/gdbm/gdbm-1.11.tar.gz 
$ tar zxfv gdbm-1.11.tar.gz
</code></pre>

<p>手順に従って、インストール。</p>

<pre><code>$ cd gdbm-1.11
$ ./configure --prefix=/usr/local
$ make
$ make install
</code></pre>

<p>これで解決したけれど、また別のエラーが。</p>

<pre><code>dyld: Library not loaded: /usr/local/lib/libpcre.1.dylib
  Referenced from: /usr/local/bin/zsh
  Reason: image not found
zsh: trace trap  tmux
</code></pre>

<p>次は以下を参考</p>

<p><a href="http://chaika.hatenablog.com/entry/2014/06/11/170441">Mac OS10.9にしたらHomebrewで入れていたコマンドとか、いろいろ動かなくなった。</a></p>

<p>最後の方の部分だけを叩かせてもらう。</p>

<pre><code>$ brew uninstall pcre
$ brew install pcre
</code></pre>

<p>これでようやく起動できた。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[heroku]herokuでのSSL設定とカスタムサブドメインの適用方法]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/30/heroku-ssl-subdomain/"/>
    <updated>2014-09-30T19:24:37+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/30/heroku-ssl-subdomain</id>
    <content type="html"><![CDATA[<p>herokuでのSSL設定とカスタムサブドメインの設定をさっくりと調べてみた。</p>

<!-- more -->


<h2>SSL</h2>

<h3>手順</h3>

<ol>
<li>プライベートキーを作成</li>
<li>CSRを作成</li>
<li>CSRを契約の際に業者に提出</li>
<li>証明書が発行される</li>
<li>証明書 + 中間証明書 + プライベートキーをherokuに設定</li>
</ol>


<p>1はローカルPC上にて作成<br/>
2の作成方法は以下、など。
<a href="https://jp.globalsign.com/support/ssl/list.php?cat=csr">https://jp.globalsign.com/support/ssl/list.php?cat=csr</a><br/>
5のみ、heroku上。</p>

<h3>herokuでの操作</h3>

<p>SSLのアドオン($20/mo)<br/>
<a href="https://addons.heroku.com/ssl">https://addons.heroku.com/ssl</a></p>

<p>アドオンの追加</p>

<pre><code>$ heroku addons:add ssl:endpoint
</code></pre>

<p>サーバー証明書と中間証明書を合体させる</p>

<pre><code>$ cat chain_ca.pem &gt;&gt; server.crt
</code></pre>

<p>プライベートキーのパスフレーズが解除されていない場合は解除する。</p>

<pre><code>$ openssl rsa -in site.key -out server.key
Enter pass phrase for site.key:
writing RSA key
</code></pre>

<p>で、合体させた証明書とキーをアップする。</p>

<pre><code>$ heroku certs:add server.crt server.key
</code></pre>

<p>アップロード結果で返ってくるURLが証明書が適応されたURLとなる。<br/>
<code>hokkaido-1212.herokussl.com</code><br/>
この状態でアクセスすると、<code>No such app</code>と出るがこれで正しい。</p>

<h3>参考</h3>

<p><a href="http://qiita.com/yu1ch1/items/290efb666209354e8fb3">herokuのssl証明書を更新する</a><br/>
<a href="http://interu.hatenablog.com/entry/2012/07/25/184812">HerokuでカスタムドメインのSSL endpointを利用する方法</a><br/>
<a href="http://d.hatena.ne.jp/install-memo/20110906/1315291837">SSL証明書のKEYファイル・CSRファイル・CRTファイルのチェック方法</a></p>

<h2>サブドメイン</h2>

<h3>herokuでの操作</h3>

<p>herokuのアプリのSettings内にある、<br/>
Domains、から設定したいドメインを指定する。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/Settings___Heroku.jpg" alt="Settings___Heroku" /></p>

<p>契約しているドメイン業者のCNAMEに、適用したいアプリのURLを指定する。<br/>
例：<code>hoge.herokuapp.com</code></p>

<h3>SSLの場合</h3>

<p>SSLをカスタムドメインで使用したい場合は、上記SSLの項で設定した、<br/>
<code>hokkaido-1212.herokussl.com</code>のドメインをCNAMEに指定する。</p>

<p>反映後、設定の確認は以下で出来る。</p>

<pre><code>$ heroku certs
Endpoint                     Common Name(s)            Expires               Trusted
---------------------------  ------------------------  --------------------  -------
hokkaido-1212.herokussl.com  secure.example.co.jp  2015-06-24 23:59 UTC  True
</code></pre>

<p>詳細は、<code>heroku certs:info</code>で確認できる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[apigeeを使用してAPIの動作を確認する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/30/apigee/"/>
    <updated>2014-09-30T17:46:34+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/30/apigee</id>
    <content type="html"><![CDATA[<p>apigeeというサービスを使用すれば、様々なAPIの動作をブラウザ上から気軽に試せる、<br/>
ということなので実際に試してみました。</p>

<!-- more -->


<p><img src="http://kayakuguri.github.io/images/2014/09/apigee01.jpg" alt="apigee" /></p>

<p><a href="http://apigee.com/about/">apigee</a></p>

<p>トップページからAPIを試すサービスへの動線がわからなかったので、<br/>
以下から一覧ページに直接アクセスして下さい。<br/>
(サインアップすれば簡単にアクセス出来ます。)<br/>
(サインアップしなくても試すことは出来ます。)</p>

<p><a href="https://apigee.com/providers">API Providers</a></p>

<p>この一覧から各サービスのAPIに接続出来るわけですが、<br/>
今回はsalesforceのsandboxで試してみました。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee02.jpg" alt="salesforce" /></p>

<p>クリックすると、APIの一覧ページに飛ぶので、とりあえず素通りしてコンソールへ。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee03.jpg" alt="API Refarence" /></p>

<p>コンソール画面で実際に叩くAPIを指定したりパラメータを設定したり出来ます。<br/>
このままだと、認証がいらないものしか叩けないので、salesforceと認証させます。</p>

<p><code>Authentication</code>から、<code>OAuth2</code>を選択します。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee04.jpg" alt="API Refarence" /></p>

<p>すると確認ダイアログが出ますので、<code>Sign in Salesforce Snadbox</code>をクリックしてログインし、認証させます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee05.jpg" alt="API Refarence" /></p>

<p>認証後は以下のようになります。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee06.jpg" alt="API Refarence" /></p>

<p>GETの場合は、この状態で下の入力エリアに叩きたいAPIを入れ、<br/>
<code>?</code>でパラメータを設定していけば試すことができます。<br/>
POSTの場合は、以下のように、POSTに設定しAPIを入力します。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee07.jpg" alt="API Refarence" /></p>

<p>しかしこのままではパラメータを入力出来ません。<br/>
なので、左側にある三角をクリックし、API一覧を表示させます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee08.jpg" alt="API Refarence" /></p>

<p>で、適当にAPIを選択すると、下図のようにタブが出現し、<br/>
その中の、<code>Body</code>でパラメータを設定する事が出来ます。<br/>
(ちなみにQueryではGETの値を設定出来ます)</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee09.jpg" alt="API Refarence" /></p>

<p>試しにこれはGETでversionを取得しただけですが、<br/>
実行すると以下の様な形でレスポンスを取得することができます。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/apigee10.jpg" alt="API Refarence" /></p>

<p>サインアップするとその他にも色々機能があるようで、もっと使い込めば便利かもしれません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[heroku]QuotaGuard Staticを使ってHerokuでのIP固定を試してみる]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/26/static-ip-heroku/"/>
    <updated>2014-09-26T17:59:42+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/26/static-ip-heroku</id>
    <content type="html"><![CDATA[<p>herokuでのIP固定といえば、<a href="https://addons.heroku.com/proximo">Proximo</a>の方が有名っぽいけど、<br/>
QuotaGuard Staticというのでも同じく固定できるようなので試してみた。</p>

<!-- more -->


<p><img src="http://kayakuguri.github.io/images/2014/09/quotaguard1.jpg" alt="QuotaGuard Static add-on" /></p>

<p><a href="https://addons.heroku.com/quotaguardstatic">QuotaGuard Static</a></p>

<p>アプリへのセットアップをコマンドラインからする場合は以下。<br/>
無料プランがあるので、それで試してみる。</p>

<pre><code>$ heroku addons:add quotaguardstatic
</code></pre>

<p>以下のように結果が返ってくる。<br/>
その中にIPアドレスも含まれる。</p>

<pre><code>Adding quotaguardstatic on static-ip-test... done, v4 (free)
Your static IPs are [54.88.136.216, 54.84.188.199]
Use `heroku addons:docs quotaguardstatic` to view documentation.
</code></pre>

<p>Proximoでも同じ仕組のようだけど、<br/>
入れたアドオンによって指定されたURLを介してアクセスすることで<br/>
固定IPを実現しているよ。<br/>
アドオンがプロキシの役目を果たす。<br/>
このプロキシ経由でのアクセス数に制限があり、その数で値段が変わる仕組み。</p>

<p>そのアクセス用のURLは環境変数に格納されている。</p>

<pre><code>$ heroku config
QUOTAGUARDSTATIC_URL: http://username:pass@us-east-1-static-brooks.quotaguard.com:9293
</code></pre>

<p>上記、<code>IPs</code>となっているのは、２つのIPのうちどちらかでアクセスされる、とのこと。<br/>
負荷分散のよう。<br/>
一応、公式の理由。</p>

<blockquote><p>We believe all apps should be built for scalability and high availability. Our commitment to this means we only provide load balanced, high availability services. Load balancing our nodes allows one node to fail or be brought down for maintenance with no impact to your application. Each IP you are given represents one proxy node that is running behind a load balancer.</p></blockquote>

<p>IPアドレスはアドオンのダッシュボードからも確認できる。<br/>
以下、ダッシュボードを開くコマンド</p>

<pre><code>$ heroku addons:open quotaguardstatic
</code></pre>

<p>公式にPHPでの動作サンプルが載っていたのでそのまま使用して試してみた。<br/>
以下、転載。</p>

<p><a href="https://devcenter.heroku.com/articles/quotaguardstatic#using-with-php">PHPのサンプル</a></p>

<pre><code>&lt;?php

function lookup(){
  $quotaguard_env = getenv("QUOTAGUARDSTATIC_URL");
  $quotaguard = parse_url($quotaguard_env);

  $proxyUrl       = $quotaguard['host'].":".$quotaguard['port'];
  $proxyAuth       = $quotaguard['user'].":".$quotaguard['pass'];

  $url = "http://ip.jsontest.com/";

  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_PROXY, $proxyUrl);
  curl_setopt($ch, CURLOPT_PROXYAUTH, CURLAUTH_BASIC);
  curl_setopt($ch, CURLOPT_PROXYUSERPWD, $proxyAuth);
  $response = curl_exec($ch);
  return $response;
}

$res = lookup();
print_r($res);

?&gt;
</code></pre>

<p>ここでアクセスしている<code>http://ip.jsontest.com/</code>のURLは、接続元のIPアドレスをJsonで返してくれるサービスのよう。</p>

<p>アクセスすると、以下のようなJSONが返ってきた。</p>

<pre><code>{"ip": "54.84.188.199"}
</code></pre>

<p>リロードすると以下のものとランダムに切り替わっているのが確認できる。</p>

<pre><code>{"ip": "54.88.136.216"}
</code></pre>

<p>管理画面を確認すると、アクセス数と残りアクセス数がわかる。<br/>
アクセス数は、１月の制限のよう。<br/>
無料の場合は250/月。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/quotaguard2.jpg" alt="管理画面" /></p>

<p>冒頭のProximoと比較すべく、料金表を抜き出してみた。</p>

<p><strong>QuotaGuard Static</strong></p>

<table>
<thead>
<tr>
<th>プラン </th>
<th> 値段(月) </th>
<th> アクセス数(月) </th>
<th> 帯域幅</th>
</tr>
</thead>
<tbody>
<tr>
<td>Starter </td>
<td> 無料 </td>
<td> 250 </td>
<td> 100MB</td>
</tr>
<tr>
<td>Spike </td>
<td> $5 </td>
<td> 500 </td>
<td> 250MB</td>
</tr>
<tr>
<td>Micro </td>
<td> $19 </td>
<td> 10,000 </td>
<td> 1GB</td>
</tr>
<tr>
<td>Medium </td>
<td> $49 </td>
<td> 50,000 </td>
<td> 10GB</td>
</tr>
<tr>
<td>Large </td>
<td> $89 </td>
<td> 1000,000 </td>
<td> 50GB</td>
</tr>
<tr>
<td>Enterprise </td>
<td> $219 </td>
<td> 1,000,000 </td>
<td> 1TB</td>
</tr>
<tr>
<td>Premium </td>
<td> $399 </td>
<td> 5,000,000 </td>
<td> 無制限</td>
</tr>
</tbody>
</table>


<p><strong>Proximo</strong></p>

<table>
<thead>
<tr>
<th>プラン </th>
<th> 値段(月) </th>
<th> アクセス数(月) </th>
<th> 帯域幅</th>
</tr>
</thead>
<tbody>
<tr>
<td>Development </td>
<td> $5 </td>
<td> 1,000 </td>
<td> 500MB</td>
</tr>
<tr>
<td>Starter </td>
<td> $25 </td>
<td> 20,000 </td>
<td> 2GB</td>
</tr>
<tr>
<td>Professional </td>
<td> $75 </td>
<td> 200,000 </td>
<td> 100GB</td>
</tr>
<tr>
<td>Dedicated </td>
<td> $250 </td>
<td> 1,000,000 </td>
<td> 1TB</td>
</tr>
<tr>
<td>Elite </td>
<td> $500 </td>
<td> 5,000,000 </td>
<td> 5TB</td>
</tr>
<tr>
<td>Enterprise </td>
<td> $1250 </td>
<td> 無制限 </td>
<td> 無制限</td>
</tr>
</tbody>
</table>


<p>QuotaGuardは無料があるのがやはりお手軽。<br/>
しかし、安いうちはProximoの方がお得。<br/>
増えてくるとQuotaGuardの方がお得かも。<br/>
他の機能もあったりするので一概には言えないけれど。</p>

<h3>参考</h3>

<p><a href="https://devcenter.heroku.com/articles/quotaguardstatic">QuotaGuard Static 公式ドキュメント</a><br/>
<a href="https://devcenter.heroku.com/articles/proximo">Proximo 公式ドキュメント</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Salesforce]Mass Actionsでリードを一括編集]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/26/mass-edit-salesforce/"/>
    <updated>2014-09-26T14:44:48+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/26/mass-edit-salesforce</id>
    <content type="html"><![CDATA[<p>リードのリストビュー画面から抽出したリードを一括編集できるが、<br/>
そこで編集できる項目は限られている。<br/>
なので、好きな項目の編集を可能にするアドオンがあったのでご紹介。</p>

<p><a href="https://appexchange.salesforce.com/listingDetail?listingId=a0N30000003J6KcEAK">Mass Edit + Mass Update + Mass Delete &ndash; VersatileCapitalist, Inc &ndash; AppExchange</a></p>

<!-- more -->


<p>上記AppExchangeの画面から、<code>Get It Now!</code>をクリックして、インストールする。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass01.jpg" alt="Get It Now" /></p>

<p>ログインしていない場合は自身のアカウントでログイン。<br/>
sandboxかプロダクションへのインストールを選択。<br/>
今回はプロダクションへインストールした。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass02.jpg" alt="Install" /></p>

<p>内容を確認して、<code>Confilm and Install!</code>。<br/>
再度、ID、パスワードを聞かれるので、入力する。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass03.jpg" alt="Confilm and Install!" /></p>

<p>インストールする内容を確認して、<code>次へ</code>。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass04.jpg" alt="パッケージインストールの詳細" /></p>

<p>ユーザーごとの権限を設定し、<code>次へ</code>。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass05.jpg" alt="権限" /></p>

<p>セキュリティレベルを設定し、<code>次へ</code>。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass06.jpg" alt="セキュリティレベル" /></p>

<p>最後の確認をされるので、<code>インストール</code>。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass07.jpg" alt="インストール確認" /></p>

<p>少し待つと、インストールが完了。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass08.jpg" alt="インストール完了" /></p>

<p>使用するには、リードの<code>検索レイアウト</code>にMassActionのボタンを追加してやる必要がある。<br/>
<code>設定 -&gt; カスタマイズ -&gt; リード -&gt; 検索レイアウト</code>を開く。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass09.jpg" alt="リード検索レイアウト" /></p>

<p>その中の、<code>リードリストビュー</code>に追加するので、<code>編集</code>をクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass10.jpg" alt="リードリストビュー" /></p>

<p>利用可能なボタン、の中にMassActionのボタンがあるので、<br/>
今回は全て選択して、追加し、保存。</p>

<blockquote><p>Mass Delete<br/>
Mass Edit<br/>
Mass Update</p></blockquote>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass11.jpg" alt="リードリストビューの編集" /></p>

<p>後は通常通り、リードからビューを選択する。<br/>
新規ビューを作成するときに、<code>表示する項目を選択</code>できるが、<br/>
ここで選択したものが後で更新出来る項目となる。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass12.jpg" alt="表示する項目" /></p>

<p>リストビューを表示すると、上部に先程追加したMassのボタンが表示されている。<br/>
変更したいリードをチェックボックスで選択し、その上部のボタン、今回は<code>Mass Edit</code>をクリック。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass13.jpg" alt="Mass Edit" /></p>

<p>選択したリードがリストで表示されるので、変更したい箇所を編集し、saveをクリックすると反映される。<br/>
今回は<code>会社名</code>を変更してみた。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass14.jpg" alt="編集" /></p>

<p>結果が反映される。</p>

<p><img src="http://kayakuguri.github.io/images/2014/09/mass15.jpg" alt="結果" /></p>

<p>このように、リードの項目をまとめて編集したりする場合にはこれは非常に便利だと思う。<br/>
いちいち詳細、編集画面に遷移しなくてよいので楽。</p>

<h3>参考</h3>

<p><a href="http://synergylead.jp/support/faq-salesforce-mass-update-edit-delete/">一覧表示画面からチェックボックスで選択して削除・更新を行うには？｜Synergy!LEAD</a><br/>
<a href="https://www.youtube.com/watch?v=xZCyhuTmaWE">Mass Edit and Mass Update in Salesforce.com &ndash; YouTube</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[SalesForce]キャンペーンメンバーの状況を追加する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/12/campaignmemberstatus/"/>
    <updated>2014-09-12T11:40:25+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/12/campaignmemberstatus</id>
    <content type="html"><![CDATA[<p>キャンペーンメンバーオブジェクトのデフォルト項目である、<br/>
<code>状況</code>は、デフォルトでは、</p>

<blockquote><p>送信<br/>
レスポンスあり</p></blockquote>

<p>の２つになっている。<br/>
これを独自で追加したい。</p>

<!-- more -->


<p>結論から言うと、仕様上、無理だった。<br/>
以下に同じような質問があった。</p>

<p><a href="https://developer.salesforce.com/forums/ForumsMain?id=906F00000009B5HIAU">キャンペーンメンバーの状況に値を追加したい &ndash; Salesforce Developer Community</a></p>

<blockquote><p>レコードを横断した設定ではなく、キャンペーンレコード毎に状況を設定する必要があります。</p></blockquote>

<ol>
<li>キャンペーンタブから、状況を追加したいキャンペーンレコードの詳細画面を表示</li>
<li>「高度な設定」ボタン押下</li>
<li>メンバーの状況の値の「編集」ボタン押下</li>
<li>メンバー状況の一番下にある、「さらに追加」リンク押下</li>
</ol>


<p>この仕様は謎仕様としても有名？なよう。</p>

<blockquote><p>キャンペーンメンバーの「状況」のクソ仕様(?)を質問した。<br/>
デフォルト値を変更できない件となぜか手入力な仕様について。<br/>
キャンペーンを作るたびに「状況」の選択肢を追加しないとダメな上に、手入力だから後からの集計がヒドイことになる。<br/>
<a href="https://twitter.com/realichiro5221/status/337413167804203009">https://twitter.com/realichiro5221/status/337413167804203009</a></p></blockquote>

<p>解決策としては、同じ<code>状況</code>項目をカスタム項目として作成するしかないよう。<br/>
それでもデフォルトの<code>状況</code>は必須項目になるので、運用がややこしくなりそうだけれど。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SOQLクエリの結果をJSONで出力する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/09/create-json-in-apex/"/>
    <updated>2014-09-09T15:54:29+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/09/create-json-in-apex</id>
    <content type="html"><![CDATA[<p>SOQLで取得したクエリ内容をJSONにパースして出力する方法。</p>

<!-- more -->


<p>Apexクラス</p>

<pre><code>public class sample
{
    public String text1 {get;set;}

    public sample()
    {

    }    
    public void parseJson()
    {
        String soql = 'SELECT Name FROM Lead';
        List&lt;Account&gt; acct = Database.Query(soql); 
        text1 = JSON.serialize(acct);
    }    
} 
</code></pre>

<p>VisualForceページ</p>

<pre><code>&lt;apex:page showHeader="false" controller="ShowCampaignListController" action="{!parseJson}"&gt;
    {!text1}
&lt;/apex:page&gt;
</code></pre>

<p>出力結果例</p>

<pre><code>[{
    "attributes":
    {
        "type":"Lead",
        "url":"/services/data/v32.0/sobjects/Lead/00QO0000002xxxxxxx"
    },
    "Name":"テストユーザー3",
    "Id":"00QO0000002xxxxxxx"
},
{
    "attributes":
    {
        "type":"Lead",
        "url":"/services/data/v32.0/sobjects/Lead/00QO0000002ooooooo"
    },
    "Name":"テストユーザー2",
    "Id":"00QO0000002ooooooo"
}]
</code></pre>

<p>参考：<a href="http://www.infallibletechie.com/2012/10/generating-json-in-visualforce-page-in.html">Infallible Techie: Generating JSON in Visualforce page in Salesforce</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[SalesForce]ApexでカスタムREST APIを作成する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/09/08/apex-restapi/"/>
    <updated>2014-09-08T22:30:35+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/09/08/apex-restapi</id>
    <content type="html"><![CDATA[<p>apexにて、自作のRestAPIを作成してみました。<br/>
そして、作成したAPIをPHPから叩いてみました。</p>

<!-- more -->


<p>まずは、Salesforce側の設定。<br/>
今回は、GETで指定されたIDのリードデータを取得するもの。</p>

<pre><code>@RestResource(urlMapping='/CustomLead/*')
global with sharing class CustomLeadSample {
    @HttpGet
    global static sObject doGet() {
        RestRequest req = RestContext.request;
        Id LeadID = req.params.get('id');
        try {
            Lead acc = [SELECT Id, Name FROM Lead WHERE Id = :LeadID LIMIT 1];
            return acc;
        } catch (exception e) {
            return null;
        }
    }
}
</code></pre>

<p>公式の解説の最後に載っているものほぼそのままです。<br/>
<a href="https://developer.salesforce.com/page/Creating_REST_APIs_using_Apex_REST">Creating REST APIs using Apex REST &ndash; developer.force.com</a></p>

<p>で、これをPHP側から呼び出します。<br/>
oauth認証は以下の記事のものを使用させてもらっています。<br/>
<a href="http://www.nkjmkzk.net/?p=2328">nkjmkzk.net &raquo; 新しくなったForce.com OAuth Toolkit for phpの使い方 のコメントのフィード</a><br/>
<a href="https://github.com/nkjm/Force.com-OAuth-Toolkit-for-PHP">nkjm/Force.com-OAuth-Toolkit-for-PHP</a></p>

<p><code>@RestResource</code>で作成したAPIは、<code>/services/apexrest/</code>から始まるURLで定義されています。<br/>
また、外部から接続する場合には、<code>接続アプリケーション</code>の設定が必要になります。<br/>
<a href="https://help.salesforce.com/HTViewHelpDoc?id=connected_app_create.htm&amp;language=ja">接続アプリケーションの作成</a><br/>
コールバックURLは今回は必要ないので、適当なローカルURLを指定しています。<br/>
また、パスワードは、(特定のIPアドレスからのアクセスに制限しなかった場合には)<br/>
パスワード＋セキュリティトークン、の形で渡す必要があります。</p>

<pre><code>require_once('sf_oauth.php');
$app_token = 'xxx';
$app_secret = 'xxx';
$app_callback = 'http://localhost:9000/';
$sf_id = 'xxx';
$sf_pass = 'password+security-token';

$oauth = new oauth($app_token, $app_secret, $app_callback);
$oauth-&gt;auth_with_password($sf_id, $sf_pass);

$url = "$oauth-&gt;instance_url/services/apexrest/CustomLead/?id=".'リードのID';
$curl = curl_init($url);
curl_setopt($curl, CURLOPT_HEADER, false);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_HTTPHEADER,
    array("Authorization: OAuth $oauth-&gt;access_token",
        "Content-type: application/json"));
$json_response = curl_exec($curl);
$status = curl_getinfo($curl, CURLINFO_HTTP_CODE);
</code></pre>

<p>レスポンスは以下のような形です。</p>

<pre><code>{
    "attributes":
    {
        "type":"Lead",
        "url":"/services/data/v32.0/sobjects/Lead/ユーザーID"
    },
    "Name":"ユーザー名",
    "Id":"ユーザーID"
}
</code></pre>

<p>参考サイト：<br/>
<a href="http://magnet88jp.hateblo.jp/entry/2014/07/09/105848">Salesforce 外部サイトからApexメソッドを呼び出したい &ndash; まぐねっとのブログ</a></p>
]]></content>
  </entry>
  
</feed>
