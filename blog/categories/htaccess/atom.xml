<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: htaccess | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/htaccess/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2015-04-20T15:49:35+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[htaccessを使ったリダイレクトを学ぶ]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/04/18/htaccess-redirect/"/>
    <updated>2015-04-18T00:30:30+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/04/18/htaccess-redirect</id>
    <content type="html"><![CDATA[<p>htaccessを使ったリダイレクトはたまに設定するけれど、いつもよくわからないままだったのでちょっと調べてみた。</p>

<!-- more -->


<h2>やりたかった事</h2>

<p>今回やりたかった事は、<br/>
特定のサブドメインにアクセスがあった場合に、別のサブドメインに転送する、というもの。<br/>
<code>hoge.sample.com</code>を、<code>redirect.sample.com</code>にリダイレクトするとする。</p>

<p>なので今回はこれを実現する部分のみの調査となってます。</p>

<h2>RewriteCond</h2>

<p>書式はこんな感じ。</p>

<pre><code>RewriteCond %変数名(テスト文字列) 条件パターン(正規表現) [フラグ]
</code></pre>

<p>変数名は、<code>{}</code>で囲んで記述する。<br/>
特定のサブドメインにアクセスがあったら、という条件なので、変数は、<br/>
<code>HTTP_HOST</code>を使用。<code>HTTP_HOST</code>はホスト名、<br/>
例えば、<code>http://test.example.com/test.html</code>というアドレスにアクセスがあった場合は、<code>test.example.com</code>のみを取得する。<br/>
変数を入れると以下。</p>

<pre><code>RewriteCond %{HTTP_HOST} 条件パターン(正規表現) [フラグ]
</code></pre>

<p>条件パターンはこの場合は特定のサブドメイン、というものだけなので、そのまま書けば良い。</p>

<pre><code>RewriteCond %{HTTP_HOST} ^hoge.sample.com$ [フラグ]
</code></pre>

<p>ただしそのままとは言っても全くそのままではなく、先頭と末尾の指定がいるよう。<br/>
<code>^</code>が行頭を表す記号。<code>$</code>が行末を表す記号。となる。</p>

<p>残ったフラグ、は、AND、OR、大文字小文字の区別、を記述する。<br/>
RewriteCondを複数行指定し、ここに条件を書くことになる。</p>

<pre><code>RewriteCond %{xx} ^条件1$ [OR]
RewriteCond %{oo} ^条件2$
</code></pre>

<p>こうすれば、条件１か条件２がヒットすれば、となる。</p>

<p>大文字小文字の区別は、<strong>区別しない場合に</strong><code>NC</code>と書く。<br/>
デフォルトでは区別する。<br/>
今回は区別するってことで指定なしで。</p>

<h2>RewriteRule</h2>

<p>書式はこんな感じ。</p>

<pre><code>RewriteRule URL書換＆転送の記述 [オプション]
</code></pre>

<p>今回はドキュメントルートにアクセスされたら、指定のサブドメインにリダイレクト、となるので、以下のように。</p>

<pre><code>RewriteRule ^/$ http://redirect.sample.com
</code></pre>

<p>行頭行末で<code>/</code>を囲んで、ドキュメントルートを指定。<br/>
リダイレクト先に別のサブドメインを指定。<br/>
ただし、ドキュメントルートの指定は<code>/</code>で始める場合と始めない場合があるよう。<br/>
<a href="http://weblabo.oscasierra.net/apache-rewrite-base/">ApacheのRewriteを設定する前に知っておくべきこと | WEB ARCH LABO</a></p>

<p>サーバー環境によって変わってくるって事はわかった。<br/>
今回はどうやら<code>/</code>は必要ないようだったのでなしで設定した。</p>

<p>あとはオプション。<br/>
リダイレクトの方法は今回は恒久的なリダイレクト、ってことで、<code>301</code>を指定。
<a href="https://www.suzukikenichi.com/blog/difference-between-301-redirect-and-302-redirect/">301リダイレクトと302リダイレクトの違い | 海外SEO情報ブログ</a><br/>
特に理由がない限りは301でよさそう。</p>

<p>もう一つ、オプションとして、<code>L</code>をつけておく。<br/>
<code>L</code>をつけておくとこのルールが適用された場合はこれ以降のルールは使用しない、という設定となる。<br/>
その他のオプションについては以下。<br/>
<a href="http://blog.dawgsdk.org/weblog/archives/411011">Apache : mod_rewriteリファレンス &ndash; dawgsdk.org</a></p>

<p>最終的なルールは以下。</p>

<pre><code>RewriteRule ^$ https://ssl.cp.4143.com [R=301,L]
</code></pre>

<p>今回は使用していないが、もし複数のルールが合った場合はどうなるかと言うと、条件に対しては一つしかルールは設定出来ないよう。</p>

<pre><code>RewriteCond 条件1
RewriteRule ルール1
RewriteRule ルール2
</code></pre>

<p>上記のような記述があった場合、条件1が満たされる場合はルール1が適応され、それ以外はルール2が適応される。<br/>
なので条件を指定する場合は、<code>RewriteCond</code>と<code>RewriteRule</code>をセットで書く必要がある。</p>

<h2>結果</h2>

<p>完成。</p>

<pre><code>RewriteCond %{HTTP_HOST} ^cp.4143.com$
RewriteRule ^$ https://ssl.cp.4143.com [R=301,L]
</code></pre>

<h2>最終的な記述</h2>

<pre><code>&lt;IfModule mod_rewrite.c&gt;
    RewriteEngine on
    RewriteBase /
    RewriteCond %{HTTP_HOST} ^cp.4143.com$
    RewriteRule ^$ https://ssl.cp.4143.com [R=301,L]
&lt;/IfModule&gt;
</code></pre>

<h2>参考</h2>

<p><a href="http://weblabo.oscasierra.net/apache-rewritecond-base/">Apache RewriteCond の基礎知識 | WEB ARCH LABO</a><br/>
<a href="http://www.ksknet.net/apache/rewritecond_rew.html">RewriteCond &ndash; RewriteRuleの条件を設定</a><br/>
<a href="http://noshirossi.blog.fc2.com/blog-entry-203.html">.htaccess　mod_rewriteで画像直リンク禁止 &ndash; 趣味を綴る日記</a><br/>
<a href="http://blog.livedoor.jp/tak_bon/archives/6508443.html">ステム覚書帳 : [Apache]RewriteCondとRewriteRuleは抱き合わせで</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[htaccessによるリダイレクト設定]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/02/16/redirect-htaccess/"/>
    <updated>2015-02-16T22:16:01+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/02/16/redirect-htaccess</id>
    <content type="html"><![CDATA[<p><code>.htaccess</code>を使ったリダイレクトをやってみたメモです。</p>

<!-- more -->


<p>設定内容</p>

<p><code>
RewriteEngine on
RewriteBase /
RewriteRule .* リダイレクト先URL [R=301,L]
</code></p>

<p>これを設置した場所と、<code>RewriteBase</code>の有効な範囲なんかの関係がややこしかったです。</p>

<p>まず、<code>RewriteBase</code>は、参考サイトによると、<br/>
<strong>リダイレクト後のパスにのみ適用</strong>される、との事。<br/>
さらに、<strong>相対パスの時にしか適用されない</strong>。</p>

<p>それと、設置したディレクトリからの相対パスになるので、<br/>
上記の設定だと、設置したディレクトリ以下全てのURLがリダイレクトされます。<br/>
これをドキュメントルートに置くと全てのパスでリダイレクトされます。</p>

<p>htaccessはディレクトリ単位で個別に置けるため、特定のディレクトリだけに適応させる場合は、<br/>
上記の設定をすれば適応出来ます。</p>

<h3>参考</h3>

<p><a href="http://kana-lier.com/web/redirect/">.htaccessを使ったよく使うリダイレクトまとめ</a><br/>
<a href="http://www.cherrypieweb.com/weblog/technical/20131017121752.php">.htaccessによるリダイレクト徹底解説</a></p>
]]></content>
  </entry>
  
</feed>
