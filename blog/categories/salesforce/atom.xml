<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: salesforce | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/salesforce/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2015-04-13T15:46:55+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[salesforce]Apex REST作成時のtips]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/03/27/apex-rest-tips/"/>
    <updated>2015-03-27T19:45:44+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/03/27/apex-rest-tips</id>
    <content type="html"><![CDATA[<p>最近よくApexRESTを作成していて、<br/>
その中でちょっとしたtipsというかメモをメモっておきます。</p>

<!-- more -->


<h2>エンドポイント</h2>

<p>エンドポイントの指定には以下のように書きます。</p>

<pre><code>@RestResource(urlMapping='/User/Login')
</code></pre>

<p>この時に、<code>*</code>を使う事も出来ます。</p>

<pre><code>@RestResource(urlMapping='/User/*')
</code></pre>

<p>なので、ここにユーザーIDを入れたりして、そのIDを取得することで、<br/>
よりREST APIらしい(?)挙動でAPIを作成する事が出来ます。<br/>
apex側で送信されたIDを取得するには、以下のように<code>/</code>で区切って取得します。</p>

<pre><code>String accountId = req.requestURI.substring(req.requestURI.lastIndexOf('/')+1);
</code></pre>

<p>公式のドキュメントに正にこのままの内容が載っていました。</p>

<p><a href="https://www.salesforce.com/us/developer/docs/apexcode/Content/apex_rest_code_sample_basic.htm">Apex REST Basic Code Sample</a></p>

<h2>JSON</h2>

<p>返却するJSONの形式ですが、クラスの入れ子や、<code>List</code>を活用することで<br/>
かなり自由度高く作成出来ます。</p>

<p>例えば、以下のようなJSONを返すとします。</p>

<p>```
&ldquo;success&rdquo;:1,
&ldquo;User&rdquo; : {</p>

<pre><code>"user_id": xxx,
"hobby":[
    {"name":"映画", "level":"3"},
    {"name":"サッカー", "level":"1"}
]
</code></pre>

<p>},
&ldquo;request_time&rdquo;: &ldquo;2015-3-27 12:33&rdquo;
```</p>

<p>この場合、以下のようにクラスを複数作り、入れ子構造を作る事で作成出来ます。</p>

<p>```
global class UserData{</p>

<pre><code>global String user_id;
global HobbyData hobby
</code></pre>

<p>}
global class HobbyData{</p>

<pre><code>global String name;
global String level;
</code></pre>

<p>}
global class resultData{</p>

<pre><code>global Integer success;
global UserData User;
global String request_time;
</code></pre>

<p>}
```</p>

<p>作成するときは以下のような感じで。</p>

<p>```
List<HobbyData> hobbies = new List<HobbyData>();
HobbyData hobby1 = new HobbyData();
hobby1.name = &lsquo;映画&rsquo;;
hobby1.level = &lsquo;3&rsquo;;
hobbies.add(hobby1);
HobbyData hobby2 = new HobbyData();
hobby2.name = &lsquo;サッカー&rsquo;;
hobby2.level = &lsquo;1&rsquo;;
hobbies.add(hobby2);</p>

<p>UserData user = new UserData();
user.user_id = &lsquo;xxx&rsquo;;
user.hobby = hobbies;</p>

<p>resultData result = new resultData();
result.success = 1;
result.User = user;
result.request_time = &lsquo;2015-3-27 12:33&rsquo;;</p>

<p>return result;
```</p>

<p>地道な作業にはなりますが、これでわりかし綺麗なJSONが返せました。<br/>
もっと簡単な方法があったらまた書きます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ビュー画面に出るチャターフォローボタンを非表示にする]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/03/10/chatter-follow/"/>
    <updated>2015-03-10T16:13:23+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/03/10/chatter-follow</id>
    <content type="html"><![CDATA[<p>キャンペーンやリードなどのビュー画面を表示した時にアクションの列に表示される、<br/>
緑の＋ボタンは、このリード(やキャンペーンなど)をチャターでフォローする、というボタンなのですが、<br/>
特に使用しないので非表示にする方法を調べました。</p>

<!-- more -->


<p>このボタンを非表示にしたい。</p>

<p><img src="/images/2015/03/chatter1.jpg" alt="チャターフォローボタン" /></p>

<p>これは、フィード追跡、という機能で制御できます。<br/>
<code>カスタマイズ</code> &ndash;> <code>Chatter</code> &ndash;> <code>フィード追跡</code> を選択。</p>

<p><img src="/images/2015/03/chatter2.jpg" alt="フィード追跡" /></p>

<p>追跡をやめたいオブジェクトを選択します。<br/>
上部にある、「フィード追跡の有効化」のチェックを外します。</p>

<p><img src="/images/2015/03/chatter3.jpg" alt="" /></p>

<p>保存します。</p>

<p><img src="/images/2015/03/chatter4.jpg" alt="" /></p>

<p>これでビュー画面からボタンが非表示になりました。</p>

<p><img src="/images/2015/03/chatter5.jpg" alt="" /></p>

<p>このフィード追跡機能はフォローしたレコードにどういう変更があった時に通知するか、を設定できるので、<br/>
上手く使えば便利になるのかもしれません。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]メモ&添付ファイルに添付されたファイルのURLを取得する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/12/25/get-attachment-url/"/>
    <updated>2014-12-25T11:21:42+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/12/25/get-attachment-url</id>
    <content type="html"><![CDATA[<p>オブジェクトの、「メモ＆添付ファイル」で添付されたファイルを公開URLを使用してダウンロードリンクを作成したい。</p>

<!-- more -->


<p>添付ファイルの名前などはSOQLで取得できるが、そのファイルへのリンクURLそのものは取得出来ない。<br/>
けれど、以下のURLを組み立てる事で、ダウンロードは出来るよう。</p>

<pre><code>https://cs6.salesforce.com/servlet/servlet.FileDownload?file=FILE_ID
</code></pre>

<p>これさえわかれば後は公開URLに適用させてやればよい。<br/>
その際に参照権限を与えておかないといけない。<br/>
その方法は以前書いた画像の表示とほぼ同じ。<br/>
<a href="http://kayakuguri.github.io/blog/2014/10/16/forcecom-sites-profile/">[Salesforce]リッチテキストエリアに保存された画像を一般公開する</a></p>

<p>まずは、サイトの設定から、</p>

<p><img src="/images/2014/12/attach01.jpg" alt="" /></p>

<p>表示ラベルをクリックして詳細を表示し、</p>

<p><img src="/images/2014/12/attach02.jpg" alt="" /></p>

<p>公開アクセス設定から、</p>

<p><img src="/images/2014/12/attach03.jpg" alt="" /></p>

<p>プロファイルの編集を選んで、</p>

<p><img src="/images/2014/12/attach04.jpg" alt="" /></p>

<p>添付ファイルをダウンロードさせたいオブジェクトの権限に参照を与えてやる。</p>

<p><img src="/images/2014/12/attach05.jpg" alt="" /></p>

<p>後は、項目レベルセキュリティの設定で個別な参照権限の設定が必要かと思ったが、これだけでいけた。</p>

<p>設定後は以下のようなアドレスになる。</p>

<pre><code>http://yourdomain.cs6.force.com/yoursite/servlet/servlet.FileDownload?file=FILE-ID
</code></pre>

<h3>参考</h3>

<p><a href="https://developer.salesforce.com/forums/ForumsMain?id=906F0000000AURkIAO">Trigger to get download link/url from attachments in salesforce?</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[selesforce]Chatter系プロファイルのレコードタイプを変更する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/12/12/disable-recode-type-chatteruser/"/>
    <updated>2014-12-12T16:58:54+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/12/12/disable-recode-type-chatteruser</id>
    <content type="html"><![CDATA[<p>レコードタイプの削除時に、chatter系のユーザープロファイルがデフォルトの設定になっているため、無効に出来ない。<br/>
その解決方法のキャンペーンメンバーオブジェクト版。</p>

<!-- more -->


<p>今回はちょっと特殊なキャンペーンメンバーオブジェクトでの説明。</p>

<p>以下のように無効にしようとしてもエラーが出てしまう。</p>

<p><img src="/images/2014/12/inactive_recodetype00.jpg" alt="エラー" /></p>

<p>各プロファイルのデフォルトのレコードタイプの選択はプロファイルの設定画面から編集が可能。</p>

<p><img src="/images/2014/12/inactive_recodetype01.jpg" alt="レコード選択" /></p>

<p>ただし、chatter系のユーザーは、そもそもこの画面へ遷移する方法がない。</p>

<p><img src="/images/2014/12/inactive_recodetype02.jpg" alt="chatter系プロファイル" /></p>

<p>じゃあ、どうするかというと、各プロファイルのレコードタイプの変更ページはURLの形式が決まっており、<br/>
そこでユーザーのIDの指定を変えてやれば直接遷移が可能だった。</p>

<p>キャンペーンメンバーのURLはコピペすると以下のようになっている。</p>

<blockquote><p><a href="https://cs5.salesforce.com/setup/ui/profilerecordtypeedit.jsp?id=">https://cs5.salesforce.com/setup/ui/profilerecordtypeedit.jsp?id=</a>[<strong>プロファイルのID</strong>]&amp;tid=CampaignMember&amp;pn=<br/>
02.%25E5%258A%2587%25E5%25A0%25B4%25E3%2582%25B9%25E3%2582%25BF<br/>
%25E3%2583%2583%25E3%2583%2595%25E7%2594%25A8<br/>
&amp;retURL=%2F00eO0000000DwhR</p></blockquote>

<p>ここで、<code>プロファイルのID</code>と書いた部分に、変更したいプロファイルのIDを直接書いてやればOK。<br/>
以下のように接続できる。</p>

<p><img src="/images/2014/12/inactive_recodetype03.jpg" alt="レコード選択" /></p>

<p>これで、変更してやればOK。<br/>
公式のヘルプページだと、カスタムオブジェクトでの説明だったので、ちょっとハマった。</p>

<h3>参考</h3>

<p><a href="https://help.salesforce.com/apex/HTViewSolution?id=000181693&amp;language=ja">レコードタイプの削除時に Chatter 関連プロファイルに指定されたレコードタイプを外す方法</a><br/>
<a href="http://tyoshikawa1106.hatenablog.com/entry/2014/01/30/004636">SFDC：レコードタイプを無効にする際にハマった話</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[salesforce]標準画面でVFからポーリング処理をJSのリロードで実現する]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/12/12/reload-vf-iframe/"/>
    <updated>2014-12-12T15:40:08+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/12/12/reload-vf-iframe</id>
    <content type="html"><![CDATA[<p>やりたかった事としては、カスタムオブジェクトの詳細画面に、VisualForceで地図を表示させ、<br/>
そのVF内のJSからリロード処理をsettimeoutとかで呼び出してポーリングさせるようにしたかった。</p>

<!-- more -->


<p>作成したVisualForceのページを詳細画面に埋め込む方法などは、以前に書いた記事を参考にどうぞ。</p>

<p><a href="http://kayakuguri.github.io/blog/2014/11/21/add-custom-vf-page/">[salesforce]オブジェクトの詳細ページに作成したVisualForceページを埋め込む</a></p>

<p>で、上記の方法でVisualForceに埋め込むわけだけれど、そのままそのVisualForce内からJSでリロード処理を書くと、上手く動作しない。<br/>
原因は、埋め込まれたVisualForceは標準画面から見るとiframeとなっており、しかもその中身は別のドメインとなっている。<br/>
なので、子ページが別ドメインの親ドメインをリロードしようとしてクロスドメインのエラーが発生していた、というわけ。</p>

<p>例えば、詳細ページのURLが以下のようになっている場合、</p>

<blockquote><p><a href="https://cs6.salesforce.com/xxxxIDxxxx">https://cs6.salesforce.com/xxxxIDxxxx</a></p></blockquote>

<p>読み込まれているVFページのURLは以下のようになっていた。</p>

<blockquote><p><a href="https://c.cs6.visual.force.com/servlet/servlet.Integration?lid=xxxxVFIDxxxx&amp;ic=1">https://c.cs6.visual.force.com/servlet/servlet.Integration?lid=xxxxVFIDxxxx&amp;ic=1</a></p></blockquote>

<p>これはJSの仕様でクロスドメイン(オリジン)がダメなので、根本的に回避する手立てはない。</p>

<p>しかし、バッドノウハウ的に対応するならば、以下のように、同じドメインからリロードをかけるようにしてやれば回避できるよう。</p>

<ol>
<li><strong>静的リソース</strong>に、リロードするためだけのJSを埋め込んだファイルをアップしておく</li>
<li>VFページ上に非表示にしたiframeタグを記述しておく</li>
<li>リロードするタイミングでそのiframeに、1のファイルを表示させる</li>
<li>静的リソース内からリロードが走り、無事リロードが行われる</li>
</ol>


<p>現状では、標準ページのドメインと静的リソースの表示ドメインは同じなので動作する。<br/>
標準ページから見れば、孫からリロードを要求される形。</p>

<p>1.の中身は以下のような内容</p>

<pre><code>&lt;html&gt;&lt;head&gt;&lt;script&gt;parent.parent.location.reload();&lt;/script&gt;&lt;/head&gt;&lt;/html&gt;
</code></pre>

<p>これを、<code>OpenerReload</code>として静的リソースに登録しておく。<br/>
VF側のJSはこんな内容</p>

<pre><code>setTimeout(reloadAndClose, 60000);
function reloadAndClose() {
  var iframe = document.getElementById('iframe');
  var urlbase = 'https://cs6.salesforce.com';
  iframe.src = urlbase + '{!URLFOR($Resource.OpenerReload)}';
}
</code></pre>

<p>埋め込むiframeのタグ</p>

<pre><code>&lt;iframe src="about:blank" id="iframe" style="display:none;"&gt;&lt;/iframe&gt;
</code></pre>

<p>静的リソースがいつまで同じドメインでアクセスできるかわからないので、あまりオススメは出来ないけれど、他に方法がなさそう。<br/>
仕事でやる場合には避ける方が無難かもしれない。</p>

<h3>参考</h3>

<p><a href="http://blog.livedoor.jp/minoaw/archives/1654198.html">[Salesforce]標準画面からクロスドメインなVisualforce画面を開き、自分を更新させる : minoawのブログ</a><br/>
ほぼこのまんまです。ありがとうございます。</p>
]]></content>
  </entry>
  
</feed>
