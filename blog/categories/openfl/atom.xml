<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: openfl | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/openfl/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2016-05-17T15:53:28+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenFLをインストールしてみる]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/31/install-openfl/"/>
    <updated>2014-01-31T11:23:47+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/31/install-openfl</id>
    <content type="html"><![CDATA[<p>インストールした環境は、<code>MaxOS X 10.8.5</code></p>

<!-- more -->


<p>一つ前の記事で紹介した<a href="http://ics-web.jp/lab/archives/1329">参考記事</a>に<a href="https://plus.google.com/102594170131511973965/posts">池田さん</a>がアップしてくれているインストール方法の動画があるので、<br/>
基本それを見ればわかるのだけれど、一応、実際に作業してみたメモ。<br/>
デモ画面を起動するところまでやってみる。</p>

<hr />

<h4>Hexeをインストール</h4>

<p><a href="http://haxe.org/">Haxe(公式サイト)</a></p>

<p>ダウンロードページは以下。<br/>
<a href="http://haxe.org/download">ダウンロード</a><br/>
2014/1/31時点でのバージョンは、<code>3.0.1</code></p>

<p><img src="/images/2014/01/openfl1.jpg" alt="Download haxe" /></p>

<p>インストーラーでインストール。</p>

<p><img src="/images/2014/01/openfl2.jpg" alt="install haxe" /></p>

<p>後は、OpenFLのページに書いてある手順に従って、ターミナルからコマンドを打ち込んでいく。</p>

<p><img src="/images/2014/01/openfl3.jpg" alt="Download openfl" /></p>

<h4>Limeをインストール</h4>

<p>OpenFLはLimeで動作しているので、Limeをまずはインストールする、との事。<br/>
以下のコマンドからインストール。</p>

<pre><code>$ haxelib install lime
</code></pre>

<p>うえの、install limeを実行すると、以下のように怒られた。</p>

<pre><code>This is the first time you are runing haxelib. Please run `haxelib setup` first
</code></pre>

<p>まずは、setupから実行しろ、と。<br/>
言われたとおりに実行。</p>

<p>すると、haxeのpathの入力を求められた。</p>

<pre><code>Please enter haxelib repository path with write access
Hit enter for default (/usr/lib/haxe/lib)
Path :
</code></pre>

<p>pathがわからないので一旦置いておく。<br/>
調べると、haxelibのセットアップはhaxeの公式ページに手順が載っていた。</p>

<p><a href="http://haxe.org/com/haxelib/setup">haxelib setup</a></p>

<p>ここでの手順をまずは試してみる。</p>

<pre><code>$ sudo mkdir -p /usr/lib/haxe/lib
$ sudo chown -R myusername /usr/lib/haxe
</code></pre>

<p>※パスはデフォルトでは、<code>/usr/lib/haxe/lib</code>。もし違ったらそのパスを入力。<br/>
また、<code>myusername</code>はPCのユーザー名を記入。</p>

<p>で、上記のsetupを実行。</p>

<pre><code>$ haxelib setup
</code></pre>

<p>pathには、先ほど作成したlibディレクトリを指定。</p>

<pre><code>/usr/lib/haxe/lib/
</code></pre>

<p><code>haxelib repository is now /usr/lib/haxe/lib/</code>と出れば大丈夫のよう。</p>

<p>ようやく冒頭のLimeのインストールへ戻る。</p>

<pre><code>$ haxelib install lime
</code></pre>

<p><img src="/images/2014/01/openfl4.jpg" alt="install lime" /></p>

<p>で、セットアップを実行</p>

<pre><code>$ haxelib run lime setup
</code></pre>

<p>lime commandをインストールするか聞かれる。<br/>
たぶん、必要っぽいので、<code>y</code>で。</p>

<pre><code>Do you want to install the "lime" command? \[y/n/a\] ? y
</code></pre>

<h4>OpenFLをインストール</h4>

<p>で、ようやっとOpenFLのインストール。</p>

<pre><code>$ lime install openfl
</code></pre>

<p>つらつらと色んなものが展開されて、無事、インストール成功。</p>

<p><img src="/images/2014/01/openfl5.jpg" alt="install openfl" /></p>

<h4>各デバイス用セットアップ(オプション)</h4>

<p>それぞれのデバイス用のセットアップがオプションで用意されているよう。</p>

<pre><code>lime setup windows
lime setup android
lime setup blackberry
lime setup tizen
</code></pre>

<p>blackberryとtizenはいらないとしても、androidは入れとこうか。<br/>
windowsは、、微妙。<br/>
iOSはセットアップの必要はないけれど、Xcodeのインストールが必要、とのこと。</p>

<blockquote><p>Apple platforms don&rsquo;t require setup, but need Xcode to be installed.</p></blockquote>

<h5>Android用セットアップ</h5>

<p>とりあえず、androidのセットアップを実行。<br/>
SDKを入れるか、聞かれるので、yesで。</p>

<pre><code>$ lime setup android
Download and install the Android SDK? [y/n/a] ? y
</code></pre>

<p>アウトプットするディレクトリを聞かれたので、とりあえずデフォルト？のものを指定しておいた。<br/>
けど、そのディレクトリがないので事前に作成しておく。<br/>
作成は、haxeのセットアップ時を参考にして、ディレクトリ作成後、オーナーの変更もしておいた。<br/>
(必要ないかもしれないけれど)</p>

<pre><code>$ sudo mkdir -p /opt/android-sdk
$ sudo chown -R myusername /opt/android-sdk
</code></pre>

<p>で、改めて、アウトプットのディレクトリを指定。</p>

<pre><code>Output directory \[/opt/android-sdk\]: /opt/android-sdk
</code></pre>

<p>すると、<code>Android SDK Manager</code>なるものが立ち上がる。<br/>
つらつらと処理が進み、準備が整うと、パッケージをインストールするような待ちに入ったため、そのままインストール。</p>

<p><img src="/images/2014/01/openfl6.jpg" alt="install android sdk" /></p>

<p>各ライセンスに同意が必要なため、<s>気にせず</s>目を通してから同意。</p>

<p><img src="/images/2014/01/openfl7.jpg" alt="agree android sdk" /></p>

<p>次に、<code>android-ndk</code>をインストールしますか？と出た。<br/>
インストールしようとすると、ここでもディレクトリが必要。。。</p>

<pre><code>Download and install the Android NDK? \[y/n/a\] ? y
Output directory \[/opt/android-ndk\]: /opt/android-ndk
</code></pre>

<p>もちろんないので、再度、作成して、インストール。</p>

<p>参考：<a href="http://www.dm-android.com/column/ndk.html">コラム：Android NDKとは？Android NDKを学ぶメリット</a></p>

<p>次は、<code>Apatch Ant</code>。同じようにディレクリ作成。<br/>
(事前にこれだけいる、と言ってくれたらいいのに。。。)</p>

<pre><code>Download and install the apache ant? \[y/n/a\] ? y
Output directory [/opt/apache-ant]: /opt/apache-ant
</code></pre>

<p>参考：<a href="http://ja.wikipedia.org/wiki/Apache_Ant">Apache Ant &ndash; Wikipedia</a></p>

<p>で、Android SDKとNDKのパスを聞かれる。変更してないので、例のまま。</p>

<pre><code>Path to Android SDK [/opt/android-sdk]:/opt/android-sdk
Path to Android NDK [/opt/android-ndk]: /opt/android-ndk
</code></pre>

<p>これでようやっと終了(たぶん)。</p>

<h4>サンプルを実行</h4>

<p>ここからは、実行後にファイルが作成されるので、適当なディレクトリに移動してから実行する。<br/>
(デスクトップとか)</p>

<pre><code>$ lime create openfl:DisplayingABitmap
$ cd DisplayingABitmap
$ lime test neko
</code></pre>

<p>(<code>neko</code>とはmacのアプリのこと?)<br/>
サンプルどおり、nekoを起動させてみた状態は以下。</p>

<p><img src="/images/2014/01/openfl8.jpg" alt="sample neko" /></p>

<p>このプログラムのまま、様々なプラットフォームで出力可能。<br/>
例えば、flashの場合は以下。</p>

<pre><code>$ lime test flash
</code></pre>

<p><img src="/images/2014/01/openfl9.jpg" alt="sample flash" /></p>

<p>最後に、ちょっと見栄えのするサンプルを実行させてみる。</p>

<p><img src="/images/2014/01/openfl10.jpg" alt="HerokuShaders" /></p>

<p>DOCUMENTATION &ndash;> Samples &ndash;> HerokuShaders</p>

<pre><code>$ openfl create HerokuShaders
</code></pre>

<p>ページの通り、上記を実行すると、openflっていうコメンドがない、と言われたので、<br/>
上記の<code>lime</code>で、実行してみる。</p>

<pre><code>$ lime create openfl:HerokuShaders
$ cd HerokuShaders
$ lime test neko
</code></pre>

<p><img src="/images/2014/01/openfl11.jpg" alt="HerokuShaders" /></p>

<p>これもそれぞれ、flash、HTML5などで実行してみる。</p>

<pre><code>$ lime test flash
$ lime test html5
</code></pre>

<p>flashはエラーで実行できなかった。<br/>
何か必要なライブラリ？が入ってなかったよう。</p>

<pre><code>Error: Could not find sample "HerokuShaders" in project ""
</code></pre>

<p>HTML5はそのまま実行出来た。</p>

<p><img src="/images/2014/01/openfl12.jpg" alt="HerokuShaders in HTML5" /></p>

<p>ちょっと重かったけど、そのまま動いたのはすごい。<br/>
てか、このサンプルは何を使ってるんだろう？</p>

<h4>参考</h4>

<p>冒頭で上げた<a href="https://plus.google.com/102594170131511973965/pos]ts">池田さん</a>のインストール動画は以下。</p>

<p><a href="http://www.youtube.com/embed/MYHFJICUzzI">http://www.youtube.com/embed/MYHFJICUzzI</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OpenFL？]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/01/31/openfl-search/"/>
    <updated>2014-01-31T10:39:01+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/01/31/openfl-search</id>
    <content type="html"><![CDATA[<p><strong><a href="http://www.openfl.org/">OpenFL</a></strong></p>

<p>OpenFLの記事が話題になっており、今回初めて知ったので、<br/>
ツイートベースに検索したメモ。</p>

<!-- more -->


<p>元は、<code>NME</code>という名前だったものが<code>OpenFL</code>に名前を変えたよう。<br/>
結構前からあるっぽい。<br/>
Haxe自体がワンソース・マルチユース的なものなのに、<br/>
そのHaxeを使ってOpenFLで開発、ってのはどいうこと？？<br/>
さらに便利に拡張したもの、とかなのかしら。</p>

<p><s>違う、Haxeライクな言語、であって、Haxeとは別ものっぽい。<br/>
とはいえ、Haxeのインストールも必要、っぽい。</s></p>

<p>下記、参考サイトにあった。</p>

<blockquote><p>OpenFLはプログラミング言語Haxeを使って開発する</p></blockquote>

<hr />

<h4>参考サイト</h4>

<p><a href="http://ics-web.jp/lab/archives/1329">クロスプラットフォーム開発の大本命!? HTML5もアプリもFlashも開発できる「OpenFL」とは？</a></p>

<p><a href="http://www.dango-itimi.com/blog/archives/2013/001188.html">Haxe OpenFL 調査</a></p>

<p><a href="http://d.hatena.ne.jp/wordi/20131107/p1">OpenFLで使えるGUIライブラリ</a></p>

<p><a href="http://bao-bao.info/blog/archive/2013/08/28/openfl_install/">OpenFLインストール</a></p>

<hr />

<h4>気になったツイートまとめ</h4>

<blockquote class="twitter-tweet" lang="ja"><p>Haxe（とOpenFL）は結局のところ、ワンソース・マルチユースではなく、ワンスタディ・マルチクリエイト、みたいなものなので、本当に厳密なところでは同一挙動でなくてもいいと思っているのではないかなー。</p>&mdash; 尾野（しっぽ） (@tail_y) <a href="https://twitter.com/tail_y/statuses/428926391619313664">2014, 1月 30</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>FlashCCを使い素材管理し、JSFL経由でHaxeからOpenFLとCreateJSをを切り替えて利用するという、とんでもないワークフローは既に白玉さんが確立しているのです <a href="https://t.co/speVyDSv9x">https://t.co/speVyDSv9x</a> <a href="http://t.co/FG3dgktJB0">pic.twitter.com/FG3dgktJB0</a></p>&mdash; 尾野（しっぽ） (@tail_y) <a href="https://twitter.com/tail_y/statuses/428930765254979584">2014, 1月 30</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>OpenFL の SWF Library(Free)ドキュメントページを閲覧するには Add cart にて支払い設定(住所入力)等を行う必要あり。ユーザ登録だけでは認証に弾かれます。 <a href="http://t.co/xYhqayB6CG">http://t.co/xYhqayB6CG</a></p>&mdash; siratama (@dango_itimi) <a href="https://twitter.com/dango_itimi/statuses/426696977712050177">2014, 1月 24</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>あとOpenFLも低レベル層がLimeというのに分離してたり、h3dもHeapsという名前に変わる？とかいろいろ複雑ｗ　落ちついたら面白そう。</p>&mdash; こりん (@k0rin) <a href="https://twitter.com/k0rin/statuses/426576961721233408">2014, 1月 24</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>OpenFL、人に勧めるにはまだ早い感してる。特にHTML5のバックエンドがDOMベースで速度出ないので。Haxe作者のh3d（Evolandに使われてる）に期待かなあ。</p>&mdash; こりん (@k0rin) <a href="https://twitter.com/k0rin/statuses/426574886643855361">2014, 1月 24</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>OpenFLの続き。ちなみにWindowsネイティブアプリの出力にすると最もパフォーマンスが良い感じ。FlashやHTML5の6倍ほどのパフォーマンスが出ています。ちなみにNekoもなかなかパフォーマンスが良いです。 <a href="https://twitter.com/search?q=%23Haxe&amp;src=hash">#Haxe</a> <a href="http://t.co/x5wnV7BhZp">http://t.co/x5wnV7BhZp</a></p>&mdash; 池田 泰延 Yasunobu Ikeda (@clockmaker) <a href="https://twitter.com/clockmaker/statuses/425673916028170240">2014, 1月 21</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/iphone_dev_jp">@iphone_dev_jp</a> Haxe OpenFL(NME)を使って落ち物パズルゲームを作りました <a href="http://t.co/YjY12G6JY8">http://t.co/YjY12G6JY8</a></p>&mdash; Androwk (@Androwk) <a href="https://twitter.com/Androwk/statuses/362866716004454400">2013, 8月 1</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>この間 OpenFL を試したら TextField を BitmapData に draw するところで何も描画されないって問題があった。詳しくは調べてない</p>&mdash; 馬鹿全903 (@bkzen) <a href="https://twitter.com/bkzen/statuses/353097125619437568">2013, 7月 5</a></blockquote>




<script src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
</feed>
