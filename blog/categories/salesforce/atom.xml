<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: salesforce | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/salesforce/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2015-05-28T16:46:52+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[salesfroce]開発者コンソールでのFIELD_INTEGRITY_EXCEPTIONエラー]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/05/14/developper-console-error/"/>
    <updated>2015-05-14T14:50:12+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/05/14/developper-console-error</id>
    <content type="html"><![CDATA[<p>たまに起こっていつも調べている気がするのでメモ。</p>

<!-- more -->


<p>最近は開発者コンソールで開発をしている事が多いのだけれど、ファイルをいざ保存しようとしたらたまに以下のようなエラーが出て保存できない時がある。</p>

<p><img src="/images/2015/05/Force_com_Developer_Console_01.jpg" alt="" /></p>

<blockquote><p>FIELD_INTEGRITY_EXCEPTION<br/>
Failde to create createContainerMember for containerId=undefined:null は無効な containerIdです。</p></blockquote>

<p>保存しているファイルの種類や内容には関係ない。<br/>
これが起こるとsavingのまま止まってしまう。</p>

<p>で、解決方法は公式にある。</p>

<p><a href="https://help.salesforce.com/apex/HTViewSolution?id=000204953&amp;language=en_US">Developer console cannot save classes/triggers/pages</a></p>

<p>まず、開発者コンソールを閉じて、再度開く。(念のため)<br/>
で、開発者コンソールのメニューから、<code>Workspace</code> &ndash;> <code>New Workspace</code>を選択。</p>

<p><img src="/images/2015/05/Force_com_Developer_Console_02.jpg" alt="" /></p>

<p>適当な名前で保存する。</p>

<p><img src="/images/2015/05/Force_com_Developer_Console_03.jpg" alt="" /></p>

<p>ワークスペースが新しく切り替わる(見た目は変わらない)。<br/>
すると、無事保存出来るようになる。</p>

<p>一度保存出来るようになったらもとのdefaultのワークスペースに戻しても問題なくなっているので、<br/>
先程作った適当なワークスペース削除しても問題なし。</p>

<p>開発者コンソールは便利なんだけど、いかんせん不安定な印象がある…。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SFストリーミングAPIを試してみた]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/05/13/sf-streaming-api/"/>
    <updated>2015-05-13T11:54:34+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/05/13/sf-streaming-api</id>
    <content type="html"><![CDATA[<p>salesforceのストリーミングAPIを利用すればプッシュ通知のようなものを作成できる、ということで試してみた。</p>

<!-- more -->


<h2>仕組み</h2>

<p>Long pollingと呼ばれる技術が使用されているよう。<br/>
仕組みとしては以下がわかりやすかった。</p>

<blockquote><p>1.クライアントからは従来のポーリング同様に、サーバに対して要求を発行<br/>
2.サーバ側はその要求に対して即時に応答を返さず、ずっと掴んだままにしておく<br/>
3.サーバ側でイベントの発生を検知したら、それまで掴みっぱなしになっていた複数の要求に対して一斉に応答を返す<br/>
4.応答を受信したブラウザはすぐに次の要求を再発行して、ふたたび応答待ちの状態へと戻る<br/>
⇒  結果的にサーバからのプッシュ通知が行われたような動作になります。<br/>
<a href="http://www.terrasky.co.jp/blog/?p=802#sthash.HrI4ITMg.dpuf">http://www.terrasky.co.jp/blog/?p=802#sthash.HrI4ITMg.dpuf</a></p></blockquote>

<h2>流れ</h2>

<p>作成の手順は以下。</p>

<ol>
<li>オブジェクトの作成(設定)</li>
<li>PushTopicの作成</li>
<li>PushTopicをチャンネルに登録、テスト</li>
</ol>


<h2>1.オブジェクトの作成(設定)</h2>

<p>プッシュするためのオブジェクトとして今回は以下のカスタムオブジェクトを使用した。</p>

<p>オブジェクト名：CustomMessage<br/>
プッシュ内容：未読(Unread__c)のチェックボックスがtrueになればプッシュ通知</p>

<h2>2.PushTopicの作成</h2>

<p><code>PushTopic</code>は管理画面上からは作成出来ないよう。<br/>
開発者コンソールから直接レコードを作成する。</p>

<p><img src="/images/2015/05/stereaming_api1.jpg" alt="" /></p>

<p>実行させたコードは以下。</p>

<p><code>
PushTopic pushTopic = new PushTopic();
pushTopic.Name = 'UnreadNotification';
pushTopic.Query = 'SELECT Id, Unread__c FROM CustomMessage__c';
pushTopic.NotifyForOperationCreate = true;
pushTopic.NotifyForOperationUpdate = true;
pushTopic.NotifyForOperationUndelete = false;
pushTopic.NotifyForOperationDelete = false;
pushTopic.ApiVersion = 32.0;
insert pushTopic;
</code>
※<code>NotifyForOperations</code>と<code>NotifyForFields</code>は変更出来ない、と怒られた。</p>

<h3>通知タイミング</h3>

<p>レコードがどうなった時に通知するかを、<code>NotifyForOperationCreate</code>等で設定している。<br/>
(これらはデフォルトでは<code>true</code>)</p>

<table>
<thead>
<tr>
<th>項目 </th>
<th> 内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>NotifyForOperationCreate </td>
<td> 作成</td>
</tr>
<tr>
<td>NotifyForOperationUpdate </td>
<td> 更新</td>
</tr>
<tr>
<td>NotifyForOperationUndelete </td>
<td> 復元</td>
</tr>
<tr>
<td>NotifyForOperationDelete </td>
<td> 削除</td>
</tr>
</tbody>
</table>


<p><img src="/images/2015/05/stereaming_api2.jpg" alt="" /></p>

<p>実行後、SOQLで参照してみた。</p>

<p><img src="/images/2015/05/stereaming_api3.jpg" alt="" /></p>

<h3>通知対象</h3>

<p><code>NotifyForFields</code>は設定出来ない、と怒られたが、ここはデフォルトでは<code>Referenced</code>になっている。<br/>
これは、指定したクエリのSELECT句とWHERE句、両方を通知対象とする、という意味のよう。<br/>
これをSELECT句だけを対象に、とも出来るのだとか。</p>

<p>今回はSELECTに指定した、Unread__cが作成、更新されると通知される。<br/>
(WHERE句がないので、全てのレコード対象)</p>

<p>またこのSELECT句には必ず<code>ID</code>を含める必要があるとのこと。</p>

<h2>3.PushTopicをチャンネルに登録、テスト</h2>

<h3>登録</h3>

<p>以下にアクセス。<br/>
<a href="https://workbench.developerforce.com/login.php">https://workbench.developerforce.com/login.php</a></p>

<p>これは、デモ目的でのみ利用可能な、Salesforceから提供されている、ワークベンチのホスト型インスタンス、だそう。<br/>
本番利用の際は自前で、ワークベンチの設定が必要なのだとか。<br/>
(この辺は未調査)</p>

<p><code>Environment</code>は<code>Production</code>を選択した。<br/>
<code>API Version</code>は<code>32</code>を選択。(33はなかった)</p>

<p><img src="/images/2015/05/stereaming_api4.jpg" alt="" /></p>

<p>規約に同意して、<code>Login with Salesforce</code>をクリック。<br/>
承認を求められるので、<code>許可</code>をクリック。</p>

<p><img src="/images/2015/05/stereaming_api5.jpg" alt="" /></p>

<p><code>Jump to:</code>で、<code>Streaming Push Topics</code>を選択。<br/>
<code>select</code>をクリック。</p>

<p><img src="/images/2015/05/stereaming_api6.jpg" alt="" /></p>

<p>次の画面で接続が行われる。<br/>
Push Topicで先程作成した、PushTopicを選択。<br/>
デフォルトでは登録されていない状態っぽいので、<code>Subscribe</code>ボタンをクリックして登録しておく。<br/>
その状態でブラウザを開いたままにしておく。<br/>
<img src="/images/2015/05/stereaming_api7.jpg" alt="" /></p>

<h3>テスト</h3>

<p>新しいウインドウで、再度以下にアクセスし、同じく<code>Production</code>のバージョン<code>32</code>でログイン。<br/>
<a href="https://workbench.developerforce.com/login.php">https://workbench.developerforce.com/login.php</a></p>

<p>上部メニューの<code>data</code>から、<code>Insert</code>をクリック。<br/>
<img src="/images/2015/05/stereaming_api8.jpg" alt="" /></p>

<p>Object Typeで対象のカスタムオブジェクト(CustomMessage__c)を選択し、<code>Next</code>をクリック。<br/>
<img src="/images/2015/05/stereaming_api9.jpg" alt="" /></p>

<p>オブジェクトをインサートするための情報を入力。<br/>
OwinIDは入力しなくても大丈夫だった。<br/>
<img src="/images/2015/05/stereaming_api10.jpg" alt="" /></p>

<p><code>Commit Insert</code>をクリックするとインサートが完了する。<br/>
<img src="/images/2015/05/stereaming_api11.jpg" alt="" /></p>

<p>すると、先程開いていた画面に内容が(ほぼ)リアルタイムに通知される。<br/>
<img src="/images/2015/05/stereaming_api12.jpg" alt="" /></p>

<p><code>sobject</code>には、PushTopicのSELECT句で設定した項目が入っている。</p>

<p>このレコードの作成はこの<code>workbench</code>上からわざわざ作業しなくても、Salesfroceから直接レコードを新規で作成しても受信は問題なくできた。<br/>
あとは、Visualforceのコードに組み込めば受信ページを作れるよう。</p>

<h2>制限</h2>

<p>色々と制限があるよう。詳しくは以下の記事の最後のほうの表を参照。<br/>
<a href="http://www.terrasky.co.jp/blog/?p=802">http://www.terrasky.co.jp/blog/?p=802</a></p>

<p>トピック数が20、とか、登録者数が20、とか、結構厳しい。<br/>
そもそも、Visualforceでの利用で、SFのアカウントを持っている人が通知を受け取るページを開発するのに使用する事を前提としているっぽい。<br/>
通常のwebサービスでSFからの通知を受け取るのに利用出来るかと思って調べていたのだが、どうも違うようだった。</p>

<h2>参考</h2>

<p><a href="https://developer.salesforce.com/docs/atlas.ja-jp.api_streaming.meta/api_streaming/quick_start_workbench.htm">ワークベンチを使用したクイックスタート | Force.com ストリーミング API 開発者ガイド | Salesforce Developers</a><br/>
<a href="http://tyoshikawa1106.hatenablog.com/entry/2013/08/01/225204">SFDC：Streaming API 試してみました &ndash; tyoshikawa1106のブログ</a><br/>
<a href="http://www.terrasky.co.jp/blog/?p=802">10分で分かる！使える！ストリーミング API &laquo;  TerraSky Tech Blog</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Salesforce]承認申請のアウトバウンドメッセージをPHPで受け取る]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/04/28/approval-process-outbound-massage/"/>
    <updated>2015-04-28T20:20:01+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/04/28/approval-process-outbound-massage</id>
    <content type="html"><![CDATA[<p>salesforceからのアウトバウンドメッセージの内容をPHPで受け取ってみた。</p>

<!-- more -->


<h2>アウトバウンドメッセージの設定</h2>

<p>前回作成したものの申請時のアクション部分に<code>アウトバウンドメッセージ</code>を追加。<br/>
<img src="/images/2015/04/outbound01.jpg" alt="" /></p>

<p>以下のように設定した。<br/>
<img src="/images/2015/04/outbound02.jpg" alt="" /></p>

<p>設定完了<br/>
<img src="/images/2015/04/outbound03.jpg" alt="" /></p>

<h2>PHPで受け取る</h2>

<p>アウトバウンドメッセージは<code>SOAP</code>で通信が行われる。<br/>
なので、XML。<br/>
以下のようにアクセスが記録されていた。</p>

<pre><code>at=info method=POST path="/liam_dnes.php?id=1" host=shrouded-island-xxxx.herokuapp.com request_id=01b99464-c9dc-4e15-aa19-xxxxxxx fwd="xxx.xxx.78.8" dyno=web.1 connect=1ms service=4ms status=200 bytes=189
</code></pre>

<p>どうやらPOSTでアクセスされているよう。<br/>
<code>$_POST</code>のままでは取得できなかった。<br/>
どうやら生のPOSTデータを取得する必要があるらしい。</p>

<p>以下で取得した。</p>

<pre><code>$data = file_get_contents( 'php://input' );
</code></pre>

<p>取得すると、以下のようなXMLが取得できた。</p>

<p>```
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?>
&lt;soapenv:Envelope xmlns:soapenv=&ldquo;<a href="http://schemas.xmlsoap.org/soap/envelope/">http://schemas.xmlsoap.org/soap/envelope/</a>&rdquo; xmlns:xsd=&ldquo;<a href="http://www.w3.org/2001/XMLSchema">http://www.w3.org/2001/XMLSchema</a>&rdquo; xmlns:xsi=&ldquo;<a href="http://www.w3.org/2001/XMLSchema-instance">http://www.w3.org/2001/XMLSchema-instance</a>&rdquo;></p>

<pre><code>&lt;soapenv:Body&gt;
    &lt;notifications xmlns="http://soap.sforce.com/2005/09/outbound"&gt;
        &lt;OrganizationId&gt;00D10000000Zyxxxxx&lt;/OrganizationId&gt;
        &lt;SessionId xsi:nil="true"/&gt;
        &lt;PartnerUrl&gt;https://ap.salesforce.com/services/Soap/u/33.0/00D100000xxxxx&lt;/PartnerUrl&gt;
        &lt;ActionId&gt;04k100000008STGAA2&lt;/ActionId&gt;
        &lt;EnterpriseUrl&gt;https://ap.salesforce.com/services/Soap/c/33.0/00D100000xxxxx&lt;/EnterpriseUrl&gt;
        &lt;Notification&gt;
            &lt;Id&gt;04l1000000xxxxxx&lt;/Id&gt;
            &lt;sObject xsi:type="sf:Opportunity" xmlns:sf="urn:sobject.enterprise.soap.sforce.com"&gt;
                &lt;sf:Id&gt;0061000000cxxxxx&lt;/sf:Id&gt;
                &lt;sf:Name&gt;アウトバウンドのテスト商談&lt;/sf:Name&gt;
                &lt;sf:StageName&gt;Prospecting&lt;/sf:StageName&gt;
                &lt;sf:IsClosed&gt;false&lt;/sf:IsClosed&gt;
            &lt;/sObject&gt;
        &lt;/Notification&gt;
    &lt;/notifications&gt;
&lt;/soapenv:Body&gt;
</code></pre>

<p>&lt;/soapenv:Envelope>
```</p>

<p>アウトバウンドの設定は以下のような形。</p>

<p>ここからXMLをパースして、名前など設定した値を取得するには以下。</p>

<p>```
&lt;?php</p>

<p>$data = file_get_contents(&lsquo;php://input&rsquo;);
$xml = simplexml_load_string($data);</p>

<p>//ID
$notification = $xml->children(&lsquo;<a href="http://schemas.xmlsoap.org/soap/envelope/">http://schemas.xmlsoap.org/soap/envelope/</a>&rsquo;)&ndash;>Body->children(&lsquo;<a href="http://soap.sforce.com/2005/09/outbound">http://soap.sforce.com/2005/09/outbound</a>&rsquo;)&ndash;>notifications->Notification;
echo $notification->Id;</p>

<p>//パラメータ
$params = $notification->sObject->children(&lsquo;urn:sobject.enterprise.soap.sforce.com&rsquo;);
echo $params->Id;
echo $params->Name;
echo $params->IsClosed;
```</p>

<h2>参考</h2>

<p><a href="http://php.net/manual/ja/wrappers.php.php#wrappers.php.input">php://input</a><br/>
<a href="http://ivystar.jp/programming/php/what-is-phpinput/">「php://input」とは何？－POSTの生データ？ | アイビースター</a><br/>
<a href="https://amigotechnotes.wordpress.com/2013/11/16/parse-xml-with-namespace-by-simplexml-in-php/">Parse XML with namespace by SimpleXML in PHP | Amigo&#039;s Technical Notes</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Salesforce]承認プロセスの作り方]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/04/28/approval-process/"/>
    <updated>2015-04-28T12:43:41+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/04/28/approval-process</id>
    <content type="html"><![CDATA[<p>承認プロセスを作成してみたので、そのログ。</p>

<!-- more -->


<h2>承認プロセスの作成</h2>

<p><code>商談</code>オブジェクトで作成してみる。<br/>
<img src="/images/2015/04/shonin01.jpg" alt="" /></p>

<h4>ステップ 1. 名前と説明の入力</h4>

<p>プロセス名と一意の名前を適当に入力。<br/>
<img src="/images/2015/04/shonin02.jpg" alt="" /></p>

<h4>ステップ 2. 入力条件の指定</h4>

<p>特定の入力条件で承認プロセスを発動する場合は設定。<br/>
全てレコードで承認を必要とする場合はなしで。<br/>
<img src="/images/2015/04/shonin03.jpg" alt="" /></p>

<h4>ステップ 3. 承認者項目と編集権限のプロパティの指定</h4>

<p>この承認申請を誰に割り当てるのか＝誰に承認してもらうのかを決定<br/>
標準項目としてマネージャーという項目がある。<br/>
<img src="/images/2015/04/shonin04.jpg" alt="" /></p>

<p>これは、ユーザーの項目内で設定しているマネージャーに指定されたユーザーを承認者とするもの。<br/>
<img src="/images/2015/04/shonin05.jpg" alt="" /></p>

<p>今回はなしにしておいて後で設定する。<br/>
<img src="/images/2015/04/shonin06.jpg" alt="" /></p>

<h4>ステップ 4. 通知テンプレートの選択</h4>

<p>承認開始時に送信するメールを設定。<br/>
<img src="/images/2015/04/shonin07.jpg" alt="" /></p>

<p>メールテンプレートは以下から作成可能。<br/>
管理->コミュニケーションテンプレート->メールテンプレート</p>

<p>なしでもよい。</p>

<h4>ステップ 5. 承認ページレイアウトに表示する項目の選択</h4>

<p>承認者が承認時に確認する画面の項目を選択する。<br/>
今回はそのままで。<br/>
<img src="/images/2015/04/shonin08.jpg" alt="" /></p>

<h4>ステップ 6. 申請者の指定</h4>

<p>この承認プロセスを申請できるユーザーを限定できる。<br/>
通常は所有者、となる。<br/>
<img src="/images/2015/04/shonin09.jpg" alt="" /></p>

<p><code>保存</code>する。</p>

<h2>承認ステップの作成</h2>

<p><img src="/images/2015/04/shonin10.jpg" alt="" /></p>

<p>最大15個までのステップを追加可能。</p>

<h4>ステップ 1. 名前と説明の入力</h4>

<p>名前と一意の名前を適当に入力。<br/>
<img src="/images/2015/04/shonin11.jpg" alt="" /></p>

<h4>ステップ 2. ステップ条件の指定</h4>

<p>このステップに入る条件を指定できる。<br/>
今回は全てのレコードとする。<br/>
<img src="/images/2015/04/shonin25.jpg" alt="" /></p>

<h4>ステップ 3. 割り当て先の選択</h4>

<p>承認者の設定。<br/>
都度変えたい場合は、手動、も選べる。<br/>
今回は固定で、特定のユーザーに自動で割り当てる。<br/>
<img src="/images/2015/04/shonin12.jpg" alt="" /></p>

<p><code>保存</code>する。</p>

<h2>アクション</h2>

<p><img src="/images/2015/04/shonin13.jpg" alt="" /></p>

<p>以下の4つを選択可能。<br/>
上記で設定した承認ステップのアクションを作成。<br/>
申請時や承認時、却下時にアクションが起動する。</p>

<ul>
<li>ToDo</li>
<li>電子メールアラート</li>
<li>項目自動更新</li>
<li>アウトバウンドメッセージ</li>
</ul>


<h3>項目自動更新</h3>

<p>名前、一意の名前を適当に作成。<br/>
更新する項目を選択し、どの値にするかを決定する。<br/>
今回はフェーズを更新するとする。</p>

<p><img src="/images/2015/04/shonin14.jpg" alt="" /></p>

<h2>作成完了</h2>

<p>全ての設定が終わったら、<code>有効化</code>しておく。<br/>
<img src="/images/2015/04/shonin15.jpg" alt="" /></p>

<p>警告が出るが、OKをクリック。<br/>
<img src="/images/2015/04/shonin16.jpg" alt="" /></p>

<p>完了。</p>

<h2>承認の流れ</h2>

<p>商談レコードを作成し、承認申請を行う、のだが、承認申請のボタンがデフォルトでは出てなかった。 <br/>
(環境によって変わるかも)<br/>
なので、ページレイアウトから<code>承認申請</code>のボタンを追加した。<br/>
<img src="/images/2015/04/shonin17.jpg" alt="" /></p>

<p>また、同じく関連項目の<code>承認履歴</code>を追加しておく。<br/>
<img src="/images/2015/04/shonin21.jpg" alt="" /></p>

<p>表示されるようになったので、<code>承認申請</code>をクリック。<br/>
<img src="/images/2015/04/shonin18.jpg" alt="" /></p>

<p>警告が表示されるが、OK。<br/>
<img src="/images/2015/04/shonin19.jpg" alt="" /></p>

<p>するとレコードがロックされ、<br/>
<img src="/images/2015/04/shonin20.jpg" alt="" /></p>

<p>設定したメールが飛ぶ。</p>

<p>そして、承認履歴の部分に承認、却下などの項目が現れる。<br/>
<img src="/images/2015/04/shonin22.jpg" alt="" /></p>

<p><code>承認/却下</code>をクリックすると、入力エリアが現れるので、適当にコメントを書いて承認してみる。<br/>
<img src="/images/2015/04/shonin23.jpg" alt="" /></p>

<p>レコードに戻ると、承認されている。設定した項目自動更新も反映されている。<br/>
<img src="/images/2015/04/shonin24.jpg" alt="" /></p>

<p>実際は承認するユーザーは別になると思うが、今回は自分で申請して承認している。</p>

<h2>参考</h2>

<p><a href="https://www.youtube.com/watch?v=b6_9NNTn_Hk">Salesforceをもっと使い倒そう-承認プロセス &ndash; YouTube</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[apex][SF]ApexRESTのテストコードでのパラメータの渡し方]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/04/20/rest-apex-test/"/>
    <updated>2015-04-20T15:43:39+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/04/20/rest-apex-test</id>
    <content type="html"><![CDATA[<p>いくつくか方法があるような。<br/>
そのうち一番楽だったものを。</p>

<!-- more -->


<p>例えば以下のようなクラスを作ったとする。</p>

<p>```
@RestResource(urlMapping=&lsquo;/user/*&rsquo;)
global with sharing class userInfo_API {</p>

<pre><code>@HttpPost
global static ResultData doPost(){
    RestRequest req = RestContext.request;
    String user_id = req.params.get('user_id');

    //何らかの処理
}
</code></pre>

<p>}
```</p>

<p>この場合、<code>user_id</code>を渡すためには以下のように記述します。</p>

<p>```
@isTest
private class Test_userInfo_API {</p>

<pre><code>static testMethod void postTest(){
    RestRequest req = new RestRequest();
    RestContext.request = req;
    req.addParameter('user_id', 'ユーザーID');
    userInfo_API.doPost();
}
</code></pre>

<p>}
```</p>

<p><code>RestRequest</code>のパラメータにセットしておくだけでOKなよう。</p>

<p>余談。<br/>
APIのクラスのみを実行させようとしてもエラーが出る。</p>

<blockquote><p>System.NullPointerException: Attempt to de-reference a null object</p></blockquote>

<p>なのでテストメソッド内では最低限以下は必要。</p>

<p><code>
RestRequest req = new RestRequest();
RestContext.request = req;
userInfo_API.doPost();
</code></p>
]]></content>
  </entry>
  
</feed>
