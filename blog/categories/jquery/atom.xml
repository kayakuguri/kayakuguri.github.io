<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jquery | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/jquery/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2016-11-15T18:51:22+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[jQuery File Uploadを利用した大容量ファイルのアップロードをChunked uploadで実現する]]></title>
    <link href="http://kayakuguri.github.io/blog/2015/10/01/jquery-chunked-upload/"/>
    <updated>2015-10-01T17:57:05+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2015/10/01/jquery-chunked-upload</id>
    <content type="html"><![CDATA[<p>大容量のファイルをアップする際に、通常の<code>input type=file</code>で送ろうとすると<br/>
herokuだとタイムアウトになったりして上手くいかなかった。<br/>
なので、jQueryのファイルアップロードプラグインにある、<code>chunk upload</code>を利用してアップした。</p>

<!-- more -->


<p>・Github<br/>
<a href="https://github.com/blueimp/jQuery-File-Upload">blueimp/jQuery-File-Upload</a></p>

<p>公式のjQuery File Uploadのデモは以下。<br/>
<a href="https://blueimp.github.io/jQuery-File-Upload/">https://blueimp.github.io/jQuery-File-Upload/</a></p>

<p>セットアップの流れは以下を参考に。<br/>
<a href="https://github.com/blueimp/jQuery-File-Upload/wiki/Setup">https://github.com/blueimp/jQuery-File-Upload/wiki/Setup</a></p>

<h2>通常のアップロード</h2>

<p>以下から最新バージョンをダウンロード。<br/>
<a href="https://github.com/blueimp/jQuery-File-Upload/releases">https://github.com/blueimp/jQuery-File-Upload/releases</a></p>

<p>解凍して、PHPが動作する環境のドキュメントルートにアップロード。<br/>
そのままアクセスすると動作する。</p>

<p>アップしたファイルは、<br/>
<code>/server/php/files/</code>以下にアップされる。</p>

<h2>Chunk File</h2>

<p>このライブラリによるアップロードの容量制限はありますか？という質問には、一応、4GBです、とのこと。<br/>
これはブラウザの制限のよう。<br/>
ただし、Chunked file upload、という方法を使って、とのこと。</p>

<p><a href="https://github.com/blueimp/jQuery-File-Upload/wiki/Frequently-Asked-Questions#what-is-the-maximum-file-size-limitation">requently Asked Questions · blueimp/jQuery-File-Upload Wiki · GitHub</a></p>

<p>この<code>Chunked file upload</code>という方法は、大きいサイズのファイルを指定したサイズに分割して少しづつアップロードし、アップロード後に合体させる方法、とのこと。<br/>
(特にこのライブラリ特有の話ではないよう。)</p>

<p><a href="https://github.com/blueimp/jQuery-File-Upload/wiki/Chunked-file-uploads">Chunked file uploads · blueimp/jQuery-File-Upload Wiki · GitHub</a></p>

<p>使い方はいたって簡単で、通常の<code>fileupload</code>のオプションに、<code>maxChunkSize</code>の指定を追加するだけ。</p>

<p>例）通常</p>

<pre><code>$('#fileupload').fileupload({
    url: url,
    dataType: 'json'
});
</code></pre>

<p>Chunked upload</p>

<pre><code>$('#fileupload').fileupload({
    maxChunkSize: 20000000,
    url: url,
    dataType: 'json'
});
</code></pre>

<h2>Callback Option</h2>

<p>以下で一覧を参照可能。<br/>
<a href="https://github.com/blueimp/jQuery-File-Upload/wiki/Options#callback-options">Options · blueimp/jQuery-File-Upload Wiki · GitHub</a></p>

<p>Chunked Upload関連では以下のオプションがあった。</p>

<ul>
<li>fileuploadchunksend</li>
<li>fileuploadchunkdone</li>
<li>fileuploadchunkfail</li>
<li>fileuploadchunkalways</li>
</ul>


<p>それぞれ分割したファイルがアップロードされる度に呼び出されるので、結構な回数呼ばれる。</p>

<h2>ソース</h2>

<p>一式全部上げておく。<br/>
アップロードやエラーの処理については以下を参考にさせてもらいました。<br/>
<a href="http://qiita.com/mpyw/items/62e6e415f86eb30a5ff4">JavaScript(jQuery)からPHPのAPIを利用する &ndash; Qiita</a></p>

<p>ファイル構造は以下のようになっている。<br/>
htmlファイル以外はダウンロードしてきたまんま。</p>

<pre><code>public(ドキュメントルート)
└─file_upload
  ├─cors/
  ├─css/
  ├─img/
  ├─js/
  ├─server/
  │   ├─php/
  │   └─files/
  └─chunked_upload.html
</code></pre>

<script src="https://gist.github.com/anonymous/2e523356346040f6758a.js"></script>


<h2>まとめ</h2>

<p>herokuではgit管理でアップしたもの以外はデプロイなどでの再起動時に消えてしまいます。<br/>
なので、これでアップしてもそのまま残っているわけではないのでご注意ください。<br/>
じゃあどうするかというと、一旦アップして、ここからどこかに転送する、とかそういうもののために作成した次第です。<br/>
とはいえ、heroku以外でもchunked uploadを使えば、一時停止やリジュームなど、通信が切れても続きから再開したりとかが出来るようなので、普通のサーバー用途でも便利そう。</p>
]]></content>
  </entry>
  
</feed>
