<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: command | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/command/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2015-08-25T10:43:15+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[バッチファイルでのFTPアップロード]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/04/03/ftp-upload-bat/"/>
    <updated>2014-04-03T17:41:46+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/04/03/ftp-upload-bat</id>
    <content type="html"><![CDATA[<p>バッチファイルでFTPに接続して何かをする場合、<br/>
バッチファイルとは別に、接続先や作業内容などを記述したコマンドファイルが必要になる。<br/>
それを、バッチファイルから呼び出す形。</p>

<!-- more -->


<p>とはいえ、このコマンドファイルも実行するバッチファイル内で作成してしまい、<br/>
それを保存、実行、削除、してしまえば、ファイルが一つで動作できるようになる。</p>

<ol>
<li>コマンドファイルを、tmpファイルとしてまず作成し、</li>
<li>それをバッチで実行し、</li>
<li>tmpファイルを削除</li>
</ol>


<p>コマンドファイルは中身がテキストであればなんでも大丈夫なよう。</p>

<p>実行するコマンドファイルは一つだけれど、<br/>
便宜上、３つのファイルを作成し、それらを合体させて一つのファイルにするフローにした。</p>

<p>作成されるファイル</p>

<ol>
<li>ftp_login.tmp</li>
<li>ftp_up.tmp</li>
<li>ftp_loguot.tmp</li>
<li>ftp_bat.tmp</li>
</ol>


<p>1) ftpのログイン情報</p>

<pre><code>open [サーバー名]
[ユーザー名]
[パスワード]
bin
prompt
</code></pre>

<p><code>bin</code>以降に処理を書く。<br/>
<code>prompt</code>、は複数のファイルをアップロードやダウンロードする際に、確認を求められるのでそれを回避するために入れている。</p>

<p>2) アップロード情報</p>

<pre><code>cd /home/hoge
mput *.html
</code></pre>

<p>アップするディレクトに移動して、アップロード。<br/>
<code>put</code>がアップロード、で、<code>m</code>をつけると複数ファイルの処理になる。<br/>
(<code>m</code>をつけた場合のみ確認が出るので、それを出さないために<code>prompt</code>を入れている)</p>

<p>3) ログアウト情報</p>

<pre><code>bye
close
</code></pre>

<p><code>bye</code> : FTP終了<br/>
<code>close</code> : 接続を切断</p>

<p>4) 1〜3の内容をまとめて一つにする。</p>

<p>実行方法</p>

<pre><code>ftp -s:ftp_bat.tmp
</code></pre>

<p>ログを残す場合は以下。</p>

<pre><code>ftp -s:ftp_bat.tmp&gt;&gt;upload.log
</code></pre>

<hr />

<p>今回調べた(全然知らなかったので)コマンドは以下。</p>

<table>
<thead>
<tr>
<th>コマンド </th>
<th> 説明</th>
</tr>
</thead>
<tbody>
<tr>
<td>@echo off </td>
<td> 以降の実行するコマンドを画面に表示させないようにする</td>
</tr>
<tr>
<td>set </td>
<td> 変数を定義</td>
</tr>
<tr>
<td>rem </td>
<td> コメント</td>
</tr>
<tr>
<td>% </td>
<td> 変数を参照 <code>%file%</code>、<code>%TEMP%</code>など</td>
</tr>
<tr>
<td>%cd% </td>
<td> 現在のディレクトリ</td>
</tr>
<tr>
<td>:[ラベル] </td>
<td> ラベルを設定</td>
</tr>
<tr>
<td>goto [ラベル] </td>
<td> 指定したラベルへ移動</td>
</tr>
<tr>
<td>> </td>
<td> 左側に書いたものを右側のファイルへ書き込む(新規 もしくは 上書き)</td>
</tr>
<tr>
<td>>> </td>
<td> 左側に書いたものを右側のファイルへ追記</td>
</tr>
<tr>
<td>type </td>
<td> テキストファイルの中身をそのまま画面に出力</td>
</tr>
<tr>
<td>cscript </td>
<td> 指定したスクリプトの実行</td>
</tr>
</tbody>
</table>


<p>ファイルへの書き込み方法は、以下。</p>

<pre><code>//直接記入
echo hoge&gt; test.txt
--内容
hoge
//直接追記
echo fuga&gt;&gt; test.txt
--内容
hoge
fuga
//ファイル内容を記入
type test.txt&gt; sample.txt
--内容
hoge
fuga
//ファイル内容を追記
type test.txt&gt;&gt; sample.txt
--内容
hoge
fuga
hoge
fuga
</code></pre>

<hr />

<p>全体は以下のような形。<br/>
指定したサーバーに、同階層にあるhtml拡張子のファイルをアップロードする。<br/>
ログは、同階層に、<code>upload.log</code>に記録。</p>

<pre><code>@echo off
set path_local=%cd%
set path_remote=/home/uploadset
server=[ホスト名]
set user=[ユーザー名]
set password=[パスワード]

set ftplogin=ftp_login.tmp
set ftplogout=ftp_logout.tmp
set ftpupload=ftp_up.tmp
set ftpbat=ftp_bat.tmp

echo %user%&gt; %ftplogin%
echo %password%&gt;&gt; %ftplogin%
echo bin&gt;&gt; %ftplogin%
echo prompt&gt;&gt; %ftplogin%

echo cd %path_remote%&gt;&gt; %ftpupload%
echo mput *.html&gt;&gt; %ftpupload%

echo bye&gt; %ftplogout%
echo close&gt;&gt; %ftplogout%

echo open %server%&gt;%ftpbat%
type %ftplogin%&gt;&gt;%ftpbat%
type %ftpupload%&gt;&gt;%ftpbat%
type %ftplogout%&gt;&gt;%ftpbat%

ftp -s:%ftpbat% &gt;upload.log

del %ftplogin%
del %ftplogout%
del %ftpupload%
del %ftpbat%
</code></pre>
]]></content>
  </entry>
  
</feed>
