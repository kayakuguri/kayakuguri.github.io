<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: composer | KayaMemo]]></title>
  <link href="http://kayakuguri.github.io/blog/categories/composer/atom.xml" rel="self"/>
  <link href="http://kayakuguri.github.io/"/>
  <updated>2017-01-05T18:19:04+09:00</updated>
  <id>http://kayakuguri.github.io/</id>
  <author>
    <name><![CDATA[萱潜]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Composerを使ってPEARのライブラリをインストールする]]></title>
    <link href="http://kayakuguri.github.io/blog/2016/06/23/pear-composer-install/"/>
    <updated>2016-06-23T12:43:47+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2016/06/23/pear-composer-install</id>
    <content type="html"><![CDATA[<p>PEARのライブラリをComposer経由でインストールする方法。メモ。</p>

<!-- more -->


<p><code>PEAR::Log</code>をインストールする方法を例にする。</p>

<h1>Pearのリポジトリから取得する</h1>

<p><code>composer.json</code>に以下のように記述し、取得する。</p>

<p>```
{
  &ldquo;repositories&rdquo;: [</p>

<pre><code>{
    "type": "pear",
    "url": "http://pear.php.net"
}
</code></pre>

<p>  ],
  &ldquo;require&rdquo;: {</p>

<pre><code>"pear-pear.php.net/PEAR": "*@stable",
"pear-pear.php.net/Log": "*@stable"
</code></pre>

<p>  }
}
```</p>

<p>このまま <code>$ composer install</code>すると以下の様なWarningが出てインストールエラーとなる。</p>

<blockquote><p>PEAR repository from <a href="http://pear.php.net">http://pear.php.net</a> could not be loaded. Your configuration does not allow connections to <a href="http://pear.php.net/channel.xml.">http://pear.php.net/channel.xml.</a> See <a href="https://getcomposer.org/doc/06-config.md#secure-http">https://getcomposer.org/doc/06-config.md#secure-http</a> for details.</p></blockquote>

<h1>セキュアじゃないURLからも取得</h1>

<p>これは、取得先のURLが<code>http</code>になっているため。
デフォルトではセキュアなURL、<code>https</code>からしか取得をしない設定になっているよう。</p>

<p>そのため、これを解除して、<code>http</code>からも取得出来るようにしてやる。</p>

<p><a href="https://getcomposer.org/doc/06-config.md#secure-http">https://getcomposer.org/doc/06-config.md#secure-http</a></p>

<p><code>
"config": {
  "secure-http": false
},
</code></p>

<h1>Composer.json</h1>

<p>というわけで全文は以下。</p>

<p>```
{
  &ldquo;config&rdquo;: {</p>

<pre><code>"secure-http": false
</code></pre>

<p>  },
  &ldquo;repositories&rdquo;: [</p>

<pre><code>{
    "type": "pear",
    "url": "http://pear.php.net"
}
</code></pre>

<p>  ],
  &ldquo;require&rdquo;: {</p>

<pre><code>"pear-pear.php.net/PEAR": "*@stable",
"pear-pear.php.net/Log": "*@stable"
</code></pre>

<p>  }
}
```</p>

<p>これで無事、インストール出来た。
使用の際はComposerのライブラリと同じく、<code>vendor/autoload.php</code>を読み込んで使う。</p>

<h1>参考</h1>

<ul>
<li><a href="https://www.softel.co.jp/blogs/tech/archives/4057">【php】PEARをインストールする（Composerで）   at softelメモ</a></li>
<li><a href="http://qiita.com/dozo/items/d892cc964bb28d7a95fc">composer:repositoriesでPEARパッケージをインストール &ndash; Qiita</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebookのphp-sdk-v4をcomposerを使ってインストールした時のメモ]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/08/04/facebook-sdk-v4-composer/"/>
    <updated>2014-08-04T19:26:37+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/08/04/facebook-sdk-v4-composer</id>
    <content type="html"><![CDATA[<p>今更ながらFacebookのAPIがv2.0にアップデートされた事による<br/>
影響範囲の大きさにショックを受けています。</p>

<p><a href="http://kuneko.hatenadiary.com/entry/facebook_search_public_post">Facebookの全体公開投稿は2015年に完全に検索できなくなるかも &ndash; ku:neko ism</a><br/>
<a href="http://snowadays.jp/2014/05/2762">Facebookログイン Version2.0（アプリのパーミッション仕様変更）</a><br/>
<a href="http://qiita.com/hilotter/items/b88402505faeebbbce89">Facebook Graph API 2.0について &ndash; Qiita</a></p>

<!-- more -->


<p>で、新しいものに対応したアプリを作成するべく、<br/>
PHPのSDKをダウンロードしてきて、、と思ったのですが、composerに対応しているということで、<br/>
composerでインストールしてみることに。</p>

<p><a href="https://developers.facebook.com/docs/php/gettingstarted/4.0.0">Getting Started php-sdk-v4</a><br/>
この公式によると、以下のようにしてインストールする、だけ。</p>

<pre><code>{
  "require" : {
    "facebook/php-sdk-v4" : "4.0.*"
  }
}
</code></pre>

<p>しかしエラーが。</p>

<pre><code>Your requirements could not be resolved to an installable set of packages.
  Problem 1
- facebook/php-sdk-v4 4.0.9 requires php &gt;=5.4.0 -&gt; no matching package found.
</code></pre>

<p>バージョンの指定を、<code>4.0.9</code>としたり、<code>*</code>としてみても同じ。<br/>
ググってみると以下の情報に当たる。</p>

<p><a href="http://stackoverflow.com/questions/24269649/composer-not-installing-latest-facebook-php-sdk-due-to-multiple-php-versions">composer not installing latest facebook php sdk due to multiple php versions &ndash; Stack Overflow</a></p>

<p>どうやら、php-sdk-v4は、PHPのバージョンが5.4からの対応、なのだけれど、<br/>
PCにインストールしているPHPのバージョンが低いとエラーが出るらしい。</p>

<p>ターミナルからPHPのバージョンを調べてみると、きっちり、<code>5.3.28</code>。</p>

<pre><code>$ php -v
PHP 5.3.28 (cli) (built: Jan 23 2014 18:02:48)
</code></pre>

<p>調べてみると、下記が一番簡単そうだったので、この方法でインストールした。</p>

<p><a href="http://kimikimi714.hatenablog.com/entry/2013/07/06/233518">macのphpをアップデート &ndash; わすれっぽいきみえ</a></p>

<pre><code>$ curl -s http://php-osx.liip.ch/install.sh | bash -s 5.5
</code></pre>

<p>で、このままではデフォルトにはならないので、パスを通す、と。<br/>
<code>~/.bashrc</code>の冒頭に下記を追加しておいた。</p>

<pre><code>export PATH=/usr/local/php5/bin:$PATH
</code></pre>

<p>で、バージョンを再度確認してみると、無事、アップデートされていた。</p>

<pre><code>$ php -v
PHP 5.5.14 (cli) (built: Jun 28 2014 10:29:43)
</code></pre>

<p>で、再度、composerをインストールしてみると、無事、完了した。<br/>
これでようやく環境が整ったことになる。</p>

<pre><code>  - Installing facebook/php-sdk-v4 (4.0.9)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mailgun APIを使ってメールを送る Composer版]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/07/15/mailgunapi/"/>
    <updated>2014-07-15T14:13:12+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/07/15/mailgunapi</id>
    <content type="html"><![CDATA[<p>いくつか書いているmailgunを使用したメール送信の件ですが、<br/>
たぶん正しいと思われる方法がわかったのでメモしておきます。</p>

<!-- more -->


<h3>composerでインストール</h3>

<p><a href="https://github.com/mailgun/mailgun-php">mailgun/mailgun-php · GitHub</a></p>

<p>composerを使用して、ライブラリをインストールします。<br/>
Composerのインストールは以下などを参照に。<br/>
<a href="http://tech.basicinc.jp/php/2013/08/18/php_composer/">PHPのパッケージ管理Composerを使う</a></p>

<p>Windowsの場合は以下に書きました。<br/>
<a href="http://kayakuguri.github.io/blog/2014/07/15/win7-composer/">Windows7でComposerのインストール</a></p>

<p><code>composer.json</code>に以下のように記述。</p>

<pre><code>{
    "require": {
        "mailgun/mailgun-php": "~1.7.1"
    }
}
</code></pre>

<p>で、インストール。</p>

<pre><code>$ composer install
</code></pre>

<p>これでライブラリなどがダウンロードされ、mailgunの依存関係が出来上がります。</p>

<h3>Mailgun</h3>

<h4>インストール</h4>

<p>アドオンのインストール。</p>

<pre><code>$ heroku addons:add mailgun
</code></pre>

<h4>セットアップ</h4>

<p>PHPの冒頭で初期化して送信。<br/>
初期化するためにはAPIキーとドメインが必要。<br/>
これは環境変数に入っている。</p>

<pre><code>MAILGUN_API_KEY:       key-xxx
MAILGUN_SMTP_LOGIN:    postmaster@xxx.mailgun.org
MAILGUN_SMTP_PASSWORD: xxx
MAILGUN_SMTP_PORT:     587
MAILGUN_SMTP_SERVER:   smtp.mailgun.org
</code></pre>

<p>ドメインは、<code>MAILGUN_SMTP_LOGIN</code>の<code>@</code>より後ろ、になるので、それを使用する。</p>

<pre><code>require 'vendor/autoload.php';
use Mailgun\Mailgun;

$mgClient = new Mailgun(getenv('MAILGUN_API_KEY'));
$domain = getenv('MAILGUN_SMTP_LOGIN');
$domain = substr($domain, strpos($domain, '@') + 1);
</code></pre>

<h4>送信</h4>

<p>通常の送信は以下。</p>

<pre><code>$result = $mgClient-&gt;sendMessage($domain, array(
    'from'    =&gt; 'Excited User &lt;me@samples.mailgun.org&gt;',
    'to'      =&gt; 'Baz &lt;baz@example.com&gt;',
    'subject' =&gt; 'Hello',
    'text'    =&gt; 'Testing some Mailgun awesomness!'
));
</code></pre>

<h4>パラメータを個別に設定</h4>

<p>上記では送信時に一括で指定しているけれど、これを個別に設定するには、<br/>
<code>Message Builder</code>というものを使用します。<br/>
<a href="https://github.com/mailgun/mailgun-php/blob/master/src/Mailgun/Messages/README.md#usage---message-builder">Usage &ndash; Message Builder</a></p>

<p>上記のセットをバラすと以下のようになります。</p>

<pre><code>$msgBldr = $mgClient-&gt;MessageBuilder();
$msgBldr-&gt;setFromAddress('Excited User &lt;me@samples.mailgun.org&gt;');
$msgBldr-&gt;addToRecipient('Baz &lt;baz@example.com&gt;');
$msgBldr-&gt;setSubject('Hello');
$msgBldr-&gt;setTextBody('Testing some Mailgun awesomness!'); 
$result = $mgClient-&gt;post("{$domain}/messages", $msgBldr-&gt;getMessage(), $msgBldr-&gt;getFiles());
</code></pre>

<h4>キューにまとめて登録</h4>

<p>また、キューにまとめて登録する場合は、<code>Batch Message</code>を使用します。<br/>
<a href="https://github.com/mailgun/mailgun-php/blob/master/src/Mailgun/Messages/README.md#usage---batch-message">Usage &ndash; Batch Message</a></p>

<p>これを使用して、toを複数登録すると、それぞれのtoにバラバラに同じメールが送られます。</p>

<pre><code>$msgBldr = $mgClient-&gt;BatchMessage($domain);
$msgBldr-&gt;addToRecipient('test1 &lt;test1@example.com&gt;');
$msgBldr-&gt;addToRecipient('test2 &lt;test2@example.com&gt;');
// 他のパラメータ設定は同じ
$result = $msgBldr-&gt;finalize();
</code></pre>

<p><code>finalize</code>で、キューに登録されるようでした。</p>

<hr />

<p>今までのmailgun関連の記事はこちら</p>

<ul>
<li><a href="http://kayakuguri.github.io/blog/2014/02/17/send-mail-from-heroku-with-mailgun/">PHPでMailgunを使ってherokuでメール送信する</a></li>
<li><a href="http://kayakuguri.github.io/blog/2014/02/18/php-heroku-sendattachmail/">[PHP]herokuで添付ファイル付きメールを送る</a></li>
<li><a href="http://kayakuguri.github.io/blog/2014/02/19/attachment-use-mailgunapi/">[PHP][heroku]Mailgun APIを使って添付ファイルを送る</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows7でComposerのインストール]]></title>
    <link href="http://kayakuguri.github.io/blog/2014/07/15/win7-composer/"/>
    <updated>2014-07-15T10:37:53+09:00</updated>
    <id>http://kayakuguri.github.io/blog/2014/07/15/win7-composer</id>
    <content type="html"><![CDATA[<p>windows7でheroku+php環境を整えたかったので、<br/>
composerをインストールしてみた。</p>

<!-- more -->


<h3>準備</h3>

<h4>XAMPP</h4>

<p>phpを使用するので、XAMPPを入れておくのが手取り早い。<br/>
<a href="https://www.apachefriends.org/jp/index.html">XAMPP</a></p>

<p>ページからインストーラーをダウンロード。<br/>
<img src="/images/2014/07/composer-win11.jpg" alt="XAMPP" /></p>

<p>クリックして起動。<br/>
ウイルス対策ソフトを起動している場合、動作が遅くなるかも、などの注意文が出るので、OKをクリック。<br/>
<img src="/images/2014/07/composer-win12.jpg" alt="warning" /></p>

<p>そのあとにも警告文が表示されました。<br/>
内容は、</p>

<blockquote><p>これはWindows Vista/7のユーザーアカウント制御(UAC)機能によってXAMPPの機能が制限される場合があるので、<br/>
1) C:\Program Filesフォルダ以外にインストールする<br/>
2) UACをオフにする<br/>
のいずれかで対応せよという警告</p></blockquote>

<p>という事のようです。<br/>
<a href="http://jubei.co.jp/kouza/setup/xampp.html">XAMPPのインストール (Windows) &ndash; 講座用PCの準備</a></p>

<p>Componentsは特に気にせずデフォルトのままで。<br/>
<img src="/images/2014/07/composer-win13.jpg" alt="Components" /></p>

<p>スカイプとポートが被っている場合は、以下。<br/>
<a href="http://degital-zakki.blogspot.jp/2009/08/xamppskype.html">xamppとskypeの共存</a></p>

<h3>Composer</h3>

<h4>ダウンロード</h4>

<p>公式サイトからインストーラをダウンロードする。<br/>
<a href="https://getcomposer.org/">Composer</a></p>

<p><code>Downlaod</code>をクリック。<br/>
<img src="/images/2014/07/composer-win01.jpg" alt="Composer" /></p>

<p><code>Windows Installer</code>から、<code>Composer-Setup.exe</code>をダウンロード。<br/>
<img src="/images/2014/07/composer-win02.jpg" alt="Setup.exe" /></p>

<h4>インストール</h4>

<p>ダウンロードした、<code>Composer-Setup.exe</code>を起動。<br/>
<code>Next</code>をクリック。<br/>
<img src="/images/2014/07/composer-win03.jpg" alt="Next" /></p>

<p>オプションでツールを入れるか、とあったので、<br/>
デフォルトのまま、<code>Do not Install</code>を選択して、<code>Next</code>。<br/>
<img src="/images/2014/07/composer-win05.jpg" alt="Shell" /></p>

<p>次に<code>php.exe</code>の場所を聞かれるので、<br/>
XAMPP でインストールされたphp.exeの場所を指定します。</p>

<pre><code>C:\xampp\php\php.exe
</code></pre>

<p><img src="/images/2014/07/composer-win06.jpg" alt="PHP.exe" /></p>

<p>設定内容を確認して、<code>Install</code>。<br/>
で、インストール完了。<br/>
<img src="/images/2014/07/composer-win15.jpg" alt="PHP.exe" /></p>
]]></content>
  </entry>
  
</feed>
